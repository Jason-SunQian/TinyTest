/**
 * 处理组件嵌套的组合式 API
 * relationKey 关系树上的父子组件使用同一个关系名称
 * relationContainer 子组件顺序由关系容器确定，由根组件提供，可以不使用，子组件顺序就是组件创建顺序
 * onChange 子组件顺序改变后的回调处理，由根组件提供，可以不使用
 * childrenKey 在组件关系树上的所有实例中定义的子组件引用名称，默认是 instanceChildren
 * delivery 根组件向下分发的内容
 */
export declare const useRelation: ({ computed, getCurrentInstance, inject, markRaw, nextTick, onMounted, onActivated, onUnmounted, provide, reactive, toRef }: {
    computed: any;
    getCurrentInstance: any;
    inject: any;
    markRaw: any;
    nextTick: any;
    onMounted: any;
    onActivated: any;
    onUnmounted: any;
    provide: any;
    reactive: any;
    toRef: any;
}) => ({ relationKey, relationContainer, onChange, childrenKey, delivery }?: {
    relationKey: any;
    relationContainer: any;
    onChange: any;
    childrenKey: any;
    delivery: any;
}) => {
    children: any;
    index: any;
    delivery: any;
};
