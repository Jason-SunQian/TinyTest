declare const _default: import("@vue/runtime-core").DefineComponent<{
    emitter: ObjectConstructor;
    modelValue: {
        type: ArrayConstructor;
        default: () => never[];
    };
    format: {
        type: StringConstructor;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
    shortcuts: {
        type: ArrayConstructor;
        default: () => never[];
    };
    disabledDate: {
        type: FunctionConstructor;
        default: null;
    };
    popperClass: {
        type: StringConstructor;
    };
    unlinkPanels: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
}, {
    t: (this: any, path: any, options?: any) => any;
    vm: any;
    f: (props: any, attrs?: {}) => {};
    a: (attrs: any, filters: any, include: any) => {};
    d: (props: any) => void;
    dp: (props: any) => void;
    gcls: (key: any) => any;
    m: (...cssClasses: any[]) => string;
}, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("update:modelValue" | "select-change" | "pick" | "dodestroy")[], "update:modelValue" | "select-change" | "pick" | "dodestroy", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    emitter: ObjectConstructor;
    modelValue: {
        type: ArrayConstructor;
        default: () => never[];
    };
    format: {
        type: StringConstructor;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
    shortcuts: {
        type: ArrayConstructor;
        default: () => never[];
    };
    disabledDate: {
        type: FunctionConstructor;
        default: null;
    };
    popperClass: {
        type: StringConstructor;
    };
    unlinkPanels: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
}>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onPick?: ((...args: any[]) => any) | undefined;
    "onSelect-change"?: ((...args: any[]) => any) | undefined;
    onDodestroy?: ((...args: any[]) => any) | undefined;
}, {
    tiny_mode_root: boolean;
    modelValue: unknown[];
    readonly: boolean;
    unlinkPanels: boolean;
    disabledDate: Function;
    shortcuts: unknown[];
}, {}>;
export default _default;
