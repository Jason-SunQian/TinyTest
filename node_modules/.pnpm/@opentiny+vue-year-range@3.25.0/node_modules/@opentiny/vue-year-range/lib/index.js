function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var t = arguments[e];
      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);
    }
    return n;
  }, _extends.apply(null, arguments);
}
import { $props, $setup, $prefix } from "@opentiny/vue-common";
import PcTemplate from "./pc.js";
import MobileFirstTemplate from "./mobile-first.js";
var template = function template2(mode) {
  var _process$env;
  var tinyMode = typeof process === "object" ? (_process$env = process.env) == null ? void 0 : _process$env.TINY_MODE : null;
  if ("pc" === (tinyMode || mode)) {
    return PcTemplate;
  }
  if ("mobile-first" === (tinyMode || mode)) {
    return MobileFirstTemplate;
  }
  return PcTemplate;
};
var YearRange = {
  name: $prefix + "YearRange",
  props: _extends({}, $props, {
    emitter: Object,
    modelValue: {
      type: Array,
      default: function _default() {
        return [];
      }
    },
    format: {
      type: String
    },
    readonly: {
      type: Boolean,
      default: false
    },
    shortcuts: {
      type: Array,
      default: function _default2() {
        return [];
      }
    },
    disabledDate: {
      type: Function,
      default: null
    },
    popperClass: {
      type: String
    },
    unlinkPanels: {
      type: Boolean,
      default: false
    }
  }),
  setup: function setup(props, context) {
    return $setup({
      props,
      context,
      template
    });
  }
};
var version = "3.undefined";
YearRange.install = function(Vue) {
  Vue.component(YearRange.name, YearRange);
};
YearRange.version = version;
export {
  YearRange as default
};
