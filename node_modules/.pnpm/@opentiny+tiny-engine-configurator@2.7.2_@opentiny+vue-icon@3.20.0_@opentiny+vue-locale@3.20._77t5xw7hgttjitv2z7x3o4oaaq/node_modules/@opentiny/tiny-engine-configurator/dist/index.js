import "./style.css";
import { defineComponent as Hn, resolveComponent as _, h as rn, createElementBlock as y, openBlock as h, createVNode as S, withCtx as E, createElementVNode as v, Fragment as j, renderList as J, toDisplayString as G, computed as re, reactive as Ce, createBlock as A, ref as O, watchEffect as ce, createTextVNode as ue, Teleport as Wn, createCommentVNode as F, resolveDynamicComponent as Me, getCurrentInstance as Yn, nextTick as Jt, withDirectives as St, vModelText as wn, onMounted as wt, normalizeClass as ve, watch as nt, inject as Jn, normalizeStyle as Rt, vModelRadio as Kn, mergeProps as Lt, onUnmounted as qn, renderSlot as Zn, vShow as Qn, unref as Re, withModifiers as xt } from "vue";
import He, { iconEdit as eo, iconDel as Vn, IconClose as En, iconConmentRefresh as to, IconDel as no, IconEdit as oo, iconClose as ao, iconHelpCircle as lo } from "@opentiny/vue-icon";
import { MetaChildItem as In, MetaListItem as io, MetaList as ro, VueMonaco as xn, MetaListItems as so, Pane as co, SplitPanes as uo, SvgButton as po, MetaCodeEditor as fo } from "@opentiny/tiny-engine-common";
import { MetaCodeEditor as rs, I18nInput as ss, I18nInput as cs, MetaCodeEditor as ds } from "@opentiny/tiny-engine-common";
import { useTranslate as mo, getMetaApi as Ke, META_SERVICE as ht, useModal as gt, useProperties as X, useMaterial as Vt, useCanvas as Z, useHistory as ho, useMessage as $t, META_APP as go, useResource as sn, usePage as vo } from "@opentiny/tiny-engine-meta-register";
import { ButtonGroup as Kt, Cascader as _o, Checkbox as yo, CheckboxGroup as bo, Input as Ie, TabItem as Co, Tabs as So, Button as Et, Select as ze, Switch as qt, Tooltip as Ue, Option as Zt, DatePicker as wo, Popover as Qt, FormItem as en, Form as tn, Numeric as Vo, RadioButton as Eo, RadioGroup as Io, Alert as xo, Search as Tn, DialogBox as To, OptionGroup as Do, Dropdown as Ao, DropdownMenu as ko, DropdownItem as Oo } from "@opentiny/vue";
import ot from "@opentiny/tiny-engine-common/js/i18n";
import { utils as jt, constants as No } from "@opentiny/tiny-engine-utils";
import { verifyJsVarSymbolName as Po } from "@opentiny/tiny-engine-common/js/verification";
import { getCommentByKey as Mo } from "@opentiny/tiny-engine-common/js/comment";
import { parse as Uo, traverse as Fo, generate as Bo } from "@opentiny/tiny-engine-common/js/ast";
import { DEFAULT_LOOP_NAME as cn } from "@opentiny/tiny-engine-common/js/constants";
/*!
  * vue-draggable-next v2.2.0
  * (c) 2023 Anish George
  * @license MIT
  */
/**!
 * Sortable 1.14.0
 * @author	RubaXa   <trash@rubaxa.org>
 * @author	owenm    <owen23355@gmail.com>
 * @license MIT
 */
function dn(n, e) {
  var o = Object.keys(n);
  if (Object.getOwnPropertySymbols) {
    var t = Object.getOwnPropertySymbols(n);
    e && (t = t.filter(function(a) {
      return Object.getOwnPropertyDescriptor(n, a).enumerable;
    })), o.push.apply(o, t);
  }
  return o;
}
function Ve(n) {
  for (var e = 1; e < arguments.length; e++) {
    var o = arguments[e] != null ? arguments[e] : {};
    e % 2 ? dn(Object(o), !0).forEach(function(t) {
      Ro(n, t, o[t]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(n, Object.getOwnPropertyDescriptors(o)) : dn(Object(o)).forEach(function(t) {
      Object.defineProperty(n, t, Object.getOwnPropertyDescriptor(o, t));
    });
  }
  return n;
}
function dt(n) {
  "@babel/helpers - typeof";
  return typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? dt = function(e) {
    return typeof e;
  } : dt = function(e) {
    return e && typeof Symbol == "function" && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
  }, dt(n);
}
function Ro(n, e, o) {
  return e in n ? Object.defineProperty(n, e, {
    value: o,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : n[e] = o, n;
}
function xe() {
  return xe = Object.assign || function(n) {
    for (var e = 1; e < arguments.length; e++) {
      var o = arguments[e];
      for (var t in o)
        Object.prototype.hasOwnProperty.call(o, t) && (n[t] = o[t]);
    }
    return n;
  }, xe.apply(this, arguments);
}
function Lo(n, e) {
  if (n == null) return {};
  var o = {}, t = Object.keys(n), a, l;
  for (l = 0; l < t.length; l++)
    a = t[l], !(e.indexOf(a) >= 0) && (o[a] = n[a]);
  return o;
}
function $o(n, e) {
  if (n == null) return {};
  var o = Lo(n, e), t, a;
  if (Object.getOwnPropertySymbols) {
    var l = Object.getOwnPropertySymbols(n);
    for (a = 0; a < l.length; a++)
      t = l[a], !(e.indexOf(t) >= 0) && Object.prototype.propertyIsEnumerable.call(n, t) && (o[t] = n[t]);
  }
  return o;
}
var jo = "1.14.0";
function Ee(n) {
  if (typeof window < "u" && window.navigator)
    return !!/* @__PURE__ */ navigator.userAgent.match(n);
}
var Te = Ee(/(?:Trident.*rv[ :]?11\.|msie|iemobile|Windows Phone)/i), at = Ee(/Edge/i), un = Ee(/firefox/i), qe = Ee(/safari/i) && !Ee(/chrome/i) && !Ee(/android/i), Dn = Ee(/iP(ad|od|hone)/i), Go = Ee(/chrome/i) && Ee(/android/i), An = {
  capture: !1,
  passive: !1
};
function B(n, e, o) {
  n.addEventListener(e, o, !Te && An);
}
function M(n, e, o) {
  n.removeEventListener(e, o, !Te && An);
}
function vt(n, e) {
  if (e) {
    if (e[0] === ">" && (e = e.substring(1)), n)
      try {
        if (n.matches)
          return n.matches(e);
        if (n.msMatchesSelector)
          return n.msMatchesSelector(e);
        if (n.webkitMatchesSelector)
          return n.webkitMatchesSelector(e);
      } catch {
        return !1;
      }
    return !1;
  }
}
function zo(n) {
  return n.host && n !== document && n.host.nodeType ? n.host : n.parentNode;
}
function Se(n, e, o, t) {
  if (n) {
    o = o || document;
    do {
      if (e != null && (e[0] === ">" ? n.parentNode === o && vt(n, e) : vt(n, e)) || t && n === o)
        return n;
      if (n === o) break;
    } while (n = zo(n));
  }
  return null;
}
var pn = /\s+/g;
function me(n, e, o) {
  if (n && e)
    if (n.classList)
      n.classList[o ? "add" : "remove"](e);
    else {
      var t = (" " + n.className + " ").replace(pn, " ").replace(" " + e + " ", " ");
      n.className = (t + (o ? " " + e : "")).replace(pn, " ");
    }
}
function x(n, e, o) {
  var t = n && n.style;
  if (t) {
    if (o === void 0)
      return document.defaultView && document.defaultView.getComputedStyle ? o = document.defaultView.getComputedStyle(n, "") : n.currentStyle && (o = n.currentStyle), e === void 0 ? o : o[e];
    !(e in t) && e.indexOf("webkit") === -1 && (e = "-webkit-" + e), t[e] = o + (typeof o == "string" ? "" : "px");
  }
}
function je(n, e) {
  var o = "";
  if (typeof n == "string")
    o = n;
  else
    do {
      var t = x(n, "transform");
      t && t !== "none" && (o = t + " " + o);
    } while (!e && (n = n.parentNode));
  var a = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;
  return a && new a(o);
}
function kn(n, e, o) {
  if (n) {
    var t = n.getElementsByTagName(e), a = 0, l = t.length;
    if (o)
      for (; a < l; a++)
        o(t[a], a);
    return t;
  }
  return [];
}
function we() {
  var n = document.scrollingElement;
  return n || document.documentElement;
}
function ae(n, e, o, t, a) {
  if (!(!n.getBoundingClientRect && n !== window)) {
    var l, i, s, r, d, c, p;
    if (n !== window && n.parentNode && n !== we() ? (l = n.getBoundingClientRect(), i = l.top, s = l.left, r = l.bottom, d = l.right, c = l.height, p = l.width) : (i = 0, s = 0, r = window.innerHeight, d = window.innerWidth, c = window.innerHeight, p = window.innerWidth), (e || o) && n !== window && (a = a || n.parentNode, !Te))
      do
        if (a && a.getBoundingClientRect && (x(a, "transform") !== "none" || o && x(a, "position") !== "static")) {
          var u = a.getBoundingClientRect();
          i -= u.top + parseInt(x(a, "border-top-width")), s -= u.left + parseInt(x(a, "border-left-width")), r = i + l.height, d = s + l.width;
          break;
        }
      while (a = a.parentNode);
    if (t && n !== window) {
      var g = je(a || n), m = g && g.a, f = g && g.d;
      g && (i /= f, s /= m, p /= m, c /= f, r = i + c, d = s + p);
    }
    return {
      top: i,
      left: s,
      bottom: r,
      right: d,
      width: p,
      height: c
    };
  }
}
function fn(n, e, o) {
  for (var t = ke(n, !0), a = ae(n)[e]; t; ) {
    var l = ae(t)[o], i = void 0;
    if (i = a >= l, !i) return t;
    if (t === we()) break;
    t = ke(t, !1);
  }
  return !1;
}
function Ge(n, e, o, t) {
  for (var a = 0, l = 0, i = n.children; l < i.length; ) {
    if (i[l].style.display !== "none" && i[l] !== T.ghost && (t || i[l] !== T.dragged) && Se(i[l], o.draggable, n, !1)) {
      if (a === e)
        return i[l];
      a++;
    }
    l++;
  }
  return null;
}
function nn(n, e) {
  for (var o = n.lastElementChild; o && (o === T.ghost || x(o, "display") === "none" || e && !vt(o, e)); )
    o = o.previousElementSibling;
  return o || null;
}
function _e(n, e) {
  var o = 0;
  if (!n || !n.parentNode)
    return -1;
  for (; n = n.previousElementSibling; )
    n.nodeName.toUpperCase() !== "TEMPLATE" && n !== T.clone && (!e || vt(n, e)) && o++;
  return o;
}
function mn(n) {
  var e = 0, o = 0, t = we();
  if (n)
    do {
      var a = je(n), l = a.a, i = a.d;
      e += n.scrollLeft * l, o += n.scrollTop * i;
    } while (n !== t && (n = n.parentNode));
  return [e, o];
}
function Xo(n, e) {
  for (var o in n)
    if (n.hasOwnProperty(o)) {
      for (var t in e)
        if (e.hasOwnProperty(t) && e[t] === n[o][t]) return Number(o);
    }
  return -1;
}
function ke(n, e) {
  if (!n || !n.getBoundingClientRect) return we();
  var o = n, t = !1;
  do
    if (o.clientWidth < o.scrollWidth || o.clientHeight < o.scrollHeight) {
      var a = x(o);
      if (o.clientWidth < o.scrollWidth && (a.overflowX == "auto" || a.overflowX == "scroll") || o.clientHeight < o.scrollHeight && (a.overflowY == "auto" || a.overflowY == "scroll")) {
        if (!o.getBoundingClientRect || o === document.body) return we();
        if (t || e) return o;
        t = !0;
      }
    }
  while (o = o.parentNode);
  return we();
}
function Ho(n, e) {
  if (n && e)
    for (var o in e)
      e.hasOwnProperty(o) && (n[o] = e[o]);
  return n;
}
function Tt(n, e) {
  return Math.round(n.top) === Math.round(e.top) && Math.round(n.left) === Math.round(e.left) && Math.round(n.height) === Math.round(e.height) && Math.round(n.width) === Math.round(e.width);
}
var Ze;
function On(n, e) {
  return function() {
    if (!Ze) {
      var o = arguments, t = this;
      o.length === 1 ? n.call(t, o[0]) : n.apply(t, o), Ze = setTimeout(function() {
        Ze = void 0;
      }, e);
    }
  };
}
function Wo() {
  clearTimeout(Ze), Ze = void 0;
}
function Nn(n, e, o) {
  n.scrollLeft += e, n.scrollTop += o;
}
function Pn(n) {
  var e = window.Polymer, o = window.jQuery || window.Zepto;
  return e && e.dom ? e.dom(n).cloneNode(!0) : o ? o(n).clone(!0)[0] : n.cloneNode(!0);
}
var ge = "Sortable" + (/* @__PURE__ */ new Date()).getTime();
function Yo() {
  var n = [], e;
  return {
    captureAnimationState: function() {
      if (n = [], !!this.options.animation) {
        var t = [].slice.call(this.el.children);
        t.forEach(function(a) {
          if (!(x(a, "display") === "none" || a === T.ghost)) {
            n.push({
              target: a,
              rect: ae(a)
            });
            var l = Ve({}, n[n.length - 1].rect);
            if (a.thisAnimationDuration) {
              var i = je(a, !0);
              i && (l.top -= i.f, l.left -= i.e);
            }
            a.fromRect = l;
          }
        });
      }
    },
    addAnimationState: function(t) {
      n.push(t);
    },
    removeAnimationState: function(t) {
      n.splice(Xo(n, {
        target: t
      }), 1);
    },
    animateAll: function(t) {
      var a = this;
      if (!this.options.animation) {
        clearTimeout(e), typeof t == "function" && t();
        return;
      }
      var l = !1, i = 0;
      n.forEach(function(s) {
        var r = 0, d = s.target, c = d.fromRect, p = ae(d), u = d.prevFromRect, g = d.prevToRect, m = s.rect, f = je(d, !0);
        f && (p.top -= f.f, p.left -= f.e), d.toRect = p, d.thisAnimationDuration && Tt(u, p) && !Tt(c, p) && // Make sure animatingRect is on line between toRect & fromRect
        (m.top - p.top) / (m.left - p.left) === (c.top - p.top) / (c.left - p.left) && (r = Ko(m, u, g, a.options)), Tt(p, c) || (d.prevFromRect = c, d.prevToRect = p, r || (r = a.options.animation), a.animate(d, m, p, r)), r && (l = !0, i = Math.max(i, r), clearTimeout(d.animationResetTimer), d.animationResetTimer = setTimeout(function() {
          d.animationTime = 0, d.prevFromRect = null, d.fromRect = null, d.prevToRect = null, d.thisAnimationDuration = null;
        }, r), d.thisAnimationDuration = r);
      }), clearTimeout(e), l ? e = setTimeout(function() {
        typeof t == "function" && t();
      }, i) : typeof t == "function" && t(), n = [];
    },
    animate: function(t, a, l, i) {
      if (i) {
        x(t, "transition", ""), x(t, "transform", "");
        var s = je(this.el), r = s && s.a, d = s && s.d, c = (a.left - l.left) / (r || 1), p = (a.top - l.top) / (d || 1);
        t.animatingX = !!c, t.animatingY = !!p, x(t, "transform", "translate3d(" + c + "px," + p + "px,0)"), this.forRepaintDummy = Jo(t), x(t, "transition", "transform " + i + "ms" + (this.options.easing ? " " + this.options.easing : "")), x(t, "transform", "translate3d(0,0,0)"), typeof t.animated == "number" && clearTimeout(t.animated), t.animated = setTimeout(function() {
          x(t, "transition", ""), x(t, "transform", ""), t.animated = !1, t.animatingX = !1, t.animatingY = !1;
        }, i);
      }
    }
  };
}
function Jo(n) {
  return n.offsetWidth;
}
function Ko(n, e, o, t) {
  return Math.sqrt(Math.pow(e.top - n.top, 2) + Math.pow(e.left - n.left, 2)) / Math.sqrt(Math.pow(e.top - o.top, 2) + Math.pow(e.left - o.left, 2)) * t.animation;
}
var Fe = [], Dt = {
  initializeByDefault: !0
}, lt = {
  mount: function(e) {
    for (var o in Dt)
      Dt.hasOwnProperty(o) && !(o in e) && (e[o] = Dt[o]);
    Fe.forEach(function(t) {
      if (t.pluginName === e.pluginName)
        throw "Sortable: Cannot mount plugin ".concat(e.pluginName, " more than once");
    }), Fe.push(e);
  },
  pluginEvent: function(e, o, t) {
    var a = this;
    this.eventCanceled = !1, t.cancel = function() {
      a.eventCanceled = !0;
    };
    var l = e + "Global";
    Fe.forEach(function(i) {
      o[i.pluginName] && (o[i.pluginName][l] && o[i.pluginName][l](Ve({
        sortable: o
      }, t)), o.options[i.pluginName] && o[i.pluginName][e] && o[i.pluginName][e](Ve({
        sortable: o
      }, t)));
    });
  },
  initializePlugins: function(e, o, t, a) {
    Fe.forEach(function(s) {
      var r = s.pluginName;
      if (!(!e.options[r] && !s.initializeByDefault)) {
        var d = new s(e, o, e.options);
        d.sortable = e, d.options = e.options, e[r] = d, xe(t, d.defaults);
      }
    });
    for (var l in e.options)
      if (e.options.hasOwnProperty(l)) {
        var i = this.modifyOption(e, l, e.options[l]);
        typeof i < "u" && (e.options[l] = i);
      }
  },
  getEventProperties: function(e, o) {
    var t = {};
    return Fe.forEach(function(a) {
      typeof a.eventProperties == "function" && xe(t, a.eventProperties.call(o[a.pluginName], e));
    }), t;
  },
  modifyOption: function(e, o, t) {
    var a;
    return Fe.forEach(function(l) {
      e[l.pluginName] && l.optionListeners && typeof l.optionListeners[o] == "function" && (a = l.optionListeners[o].call(e[l.pluginName], t));
    }), a;
  }
};
function qo(n) {
  var e = n.sortable, o = n.rootEl, t = n.name, a = n.targetEl, l = n.cloneEl, i = n.toEl, s = n.fromEl, r = n.oldIndex, d = n.newIndex, c = n.oldDraggableIndex, p = n.newDraggableIndex, u = n.originalEvent, g = n.putSortable, m = n.extraEventProperties;
  if (e = e || o && o[ge], !!e) {
    var f, w = e.options, k = "on" + t.charAt(0).toUpperCase() + t.substr(1);
    window.CustomEvent && !Te && !at ? f = new CustomEvent(t, {
      bubbles: !0,
      cancelable: !0
    }) : (f = document.createEvent("Event"), f.initEvent(t, !0, !0)), f.to = i || o, f.from = s || o, f.item = a || o, f.clone = l, f.oldIndex = r, f.newIndex = d, f.oldDraggableIndex = c, f.newDraggableIndex = p, f.originalEvent = u, f.pullMode = g ? g.lastPutMode : void 0;
    var C = Ve(Ve({}, m), lt.getEventProperties(t, e));
    for (var P in C)
      f[P] = C[P];
    o && o.dispatchEvent(f), w[k] && w[k].call(e, f);
  }
}
var Zo = ["evt"], fe = function(e, o) {
  var t = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, a = t.evt, l = $o(t, Zo);
  lt.pluginEvent.bind(T)(e, o, Ve({
    dragEl: b,
    parentEl: Q,
    ghostEl: D,
    rootEl: Y,
    nextEl: Pe,
    lastDownEl: ut,
    cloneEl: ee,
    cloneHidden: Ae,
    dragStarted: We,
    putSortable: ie,
    activeSortable: T.active,
    originalEvent: a,
    oldIndex: $e,
    oldDraggableIndex: Qe,
    newIndex: he,
    newDraggableIndex: De,
    hideGhostForTarget: Bn,
    unhideGhostForTarget: Rn,
    cloneNowHidden: function() {
      Ae = !0;
    },
    cloneNowShown: function() {
      Ae = !1;
    },
    dispatchSortableEvent: function(s) {
      de({
        sortable: o,
        name: s,
        originalEvent: a
      });
    }
  }, l));
};
function de(n) {
  qo(Ve({
    putSortable: ie,
    cloneEl: ee,
    targetEl: b,
    rootEl: Y,
    oldIndex: $e,
    oldDraggableIndex: Qe,
    newIndex: he,
    newDraggableIndex: De
  }, n));
}
var b, Q, D, Y, Pe, ut, ee, Ae, $e, he, Qe, De, it, ie, Le = !1, _t = !1, yt = [], Oe, be, At, kt, hn, gn, We, Be, et, tt = !1, rt = !1, pt, se, Ot = [], Gt = !1, bt = [], It = typeof document < "u", st = Dn, vn = at || Te ? "cssFloat" : "float", Qo = It && !Go && !Dn && "draggable" in document.createElement("div"), Mn = function() {
  if (It) {
    if (Te)
      return !1;
    var n = document.createElement("x");
    return n.style.cssText = "pointer-events:auto", n.style.pointerEvents === "auto";
  }
}(), Un = function(e, o) {
  var t = x(e), a = parseInt(t.width) - parseInt(t.paddingLeft) - parseInt(t.paddingRight) - parseInt(t.borderLeftWidth) - parseInt(t.borderRightWidth), l = Ge(e, 0, o), i = Ge(e, 1, o), s = l && x(l), r = i && x(i), d = s && parseInt(s.marginLeft) + parseInt(s.marginRight) + ae(l).width, c = r && parseInt(r.marginLeft) + parseInt(r.marginRight) + ae(i).width;
  if (t.display === "flex")
    return t.flexDirection === "column" || t.flexDirection === "column-reverse" ? "vertical" : "horizontal";
  if (t.display === "grid")
    return t.gridTemplateColumns.split(" ").length <= 1 ? "vertical" : "horizontal";
  if (l && s.float && s.float !== "none") {
    var p = s.float === "left" ? "left" : "right";
    return i && (r.clear === "both" || r.clear === p) ? "vertical" : "horizontal";
  }
  return l && (s.display === "block" || s.display === "flex" || s.display === "table" || s.display === "grid" || d >= a && t[vn] === "none" || i && t[vn] === "none" && d + c > a) ? "vertical" : "horizontal";
}, ea = function(e, o, t) {
  var a = t ? e.left : e.top, l = t ? e.right : e.bottom, i = t ? e.width : e.height, s = t ? o.left : o.top, r = t ? o.right : o.bottom, d = t ? o.width : o.height;
  return a === s || l === r || a + i / 2 === s + d / 2;
}, ta = function(e, o) {
  var t;
  return yt.some(function(a) {
    var l = a[ge].options.emptyInsertThreshold;
    if (!(!l || nn(a))) {
      var i = ae(a), s = e >= i.left - l && e <= i.right + l, r = o >= i.top - l && o <= i.bottom + l;
      if (s && r)
        return t = a;
    }
  }), t;
}, Fn = function(e) {
  function o(l, i) {
    return function(s, r, d, c) {
      var p = s.options.group.name && r.options.group.name && s.options.group.name === r.options.group.name;
      if (l == null && (i || p))
        return !0;
      if (l == null || l === !1)
        return !1;
      if (i && l === "clone")
        return l;
      if (typeof l == "function")
        return o(l(s, r, d, c), i)(s, r, d, c);
      var u = (i ? s : r).options.group.name;
      return l === !0 || typeof l == "string" && l === u || l.join && l.indexOf(u) > -1;
    };
  }
  var t = {}, a = e.group;
  (!a || dt(a) != "object") && (a = {
    name: a
  }), t.name = a.name, t.checkPull = o(a.pull, !0), t.checkPut = o(a.put), t.revertClone = a.revertClone, e.group = t;
}, Bn = function() {
  !Mn && D && x(D, "display", "none");
}, Rn = function() {
  !Mn && D && x(D, "display", "");
};
It && document.addEventListener("click", function(n) {
  if (_t)
    return n.preventDefault(), n.stopPropagation && n.stopPropagation(), n.stopImmediatePropagation && n.stopImmediatePropagation(), _t = !1, !1;
}, !0);
var Ne = function(e) {
  if (b) {
    e = e.touches ? e.touches[0] : e;
    var o = ta(e.clientX, e.clientY);
    if (o) {
      var t = {};
      for (var a in e)
        e.hasOwnProperty(a) && (t[a] = e[a]);
      t.target = t.rootEl = o, t.preventDefault = void 0, t.stopPropagation = void 0, o[ge]._onDragOver(t);
    }
  }
}, na = function(e) {
  b && b.parentNode[ge]._isOutsideThisEl(e.target);
};
function T(n, e) {
  if (!(n && n.nodeType && n.nodeType === 1))
    throw "Sortable: `el` must be an HTMLElement, not ".concat({}.toString.call(n));
  this.el = n, this.options = e = xe({}, e), n[ge] = this;
  var o = {
    group: null,
    sort: !0,
    disabled: !1,
    store: null,
    handle: null,
    draggable: /^[uo]l$/i.test(n.nodeName) ? ">li" : ">*",
    swapThreshold: 1,
    // percentage; 0 <= x <= 1
    invertSwap: !1,
    // invert always
    invertedSwapThreshold: null,
    // will be set to same as swapThreshold if default
    removeCloneOnHide: !0,
    direction: function() {
      return Un(n, this.options);
    },
    ghostClass: "sortable-ghost",
    chosenClass: "sortable-chosen",
    dragClass: "sortable-drag",
    ignore: "a, img",
    filter: null,
    preventOnFilter: !0,
    animation: 0,
    easing: null,
    setData: function(i, s) {
      i.setData("Text", s.textContent);
    },
    dropBubble: !1,
    dragoverBubble: !1,
    dataIdAttr: "data-id",
    delay: 0,
    delayOnTouchOnly: !1,
    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,
    forceFallback: !1,
    fallbackClass: "sortable-fallback",
    fallbackOnBody: !1,
    fallbackTolerance: 0,
    fallbackOffset: {
      x: 0,
      y: 0
    },
    supportPointer: T.supportPointer !== !1 && "PointerEvent" in window && !qe,
    emptyInsertThreshold: 5
  };
  lt.initializePlugins(this, n, o);
  for (var t in o)
    !(t in e) && (e[t] = o[t]);
  Fn(e);
  for (var a in this)
    a.charAt(0) === "_" && typeof this[a] == "function" && (this[a] = this[a].bind(this));
  this.nativeDraggable = e.forceFallback ? !1 : Qo, this.nativeDraggable && (this.options.touchStartThreshold = 1), e.supportPointer ? B(n, "pointerdown", this._onTapStart) : (B(n, "mousedown", this._onTapStart), B(n, "touchstart", this._onTapStart)), this.nativeDraggable && (B(n, "dragover", this), B(n, "dragenter", this)), yt.push(this.el), e.store && e.store.get && this.sort(e.store.get(this) || []), xe(this, Yo());
}
T.prototype = /** @lends Sortable.prototype */
{
  constructor: T,
  _isOutsideThisEl: function(e) {
    !this.el.contains(e) && e !== this.el && (Be = null);
  },
  _getDirection: function(e, o) {
    return typeof this.options.direction == "function" ? this.options.direction.call(this, e, o, b) : this.options.direction;
  },
  _onTapStart: function(e) {
    if (e.cancelable) {
      var o = this, t = this.el, a = this.options, l = a.preventOnFilter, i = e.type, s = e.touches && e.touches[0] || e.pointerType && e.pointerType === "touch" && e, r = (s || e).target, d = e.target.shadowRoot && (e.path && e.path[0] || e.composedPath && e.composedPath()[0]) || r, c = a.filter;
      if (da(t), !b && !(/mousedown|pointerdown/.test(i) && e.button !== 0 || a.disabled) && !d.isContentEditable && !(!this.nativeDraggable && qe && r && r.tagName.toUpperCase() === "SELECT") && (r = Se(r, a.draggable, t, !1), !(r && r.animated) && ut !== r)) {
        if ($e = _e(r), Qe = _e(r, a.draggable), typeof c == "function") {
          if (c.call(this, e, r, this)) {
            de({
              sortable: o,
              rootEl: d,
              name: "filter",
              targetEl: r,
              toEl: t,
              fromEl: t
            }), fe("filter", o, {
              evt: e
            }), l && e.cancelable && e.preventDefault();
            return;
          }
        } else if (c && (c = c.split(",").some(function(p) {
          if (p = Se(d, p.trim(), t, !1), p)
            return de({
              sortable: o,
              rootEl: p,
              name: "filter",
              targetEl: r,
              fromEl: t,
              toEl: t
            }), fe("filter", o, {
              evt: e
            }), !0;
        }), c)) {
          l && e.cancelable && e.preventDefault();
          return;
        }
        a.handle && !Se(d, a.handle, t, !1) || this._prepareDragStart(e, s, r);
      }
    }
  },
  _prepareDragStart: function(e, o, t) {
    var a = this, l = a.el, i = a.options, s = l.ownerDocument, r;
    if (t && !b && t.parentNode === l) {
      var d = ae(t);
      if (Y = l, b = t, Q = b.parentNode, Pe = b.nextSibling, ut = t, it = i.group, T.dragged = b, Oe = {
        target: b,
        clientX: (o || e).clientX,
        clientY: (o || e).clientY
      }, hn = Oe.clientX - d.left, gn = Oe.clientY - d.top, this._lastX = (o || e).clientX, this._lastY = (o || e).clientY, b.style["will-change"] = "all", r = function() {
        if (fe("delayEnded", a, {
          evt: e
        }), T.eventCanceled) {
          a._onDrop();
          return;
        }
        a._disableDelayedDragEvents(), !un && a.nativeDraggable && (b.draggable = !0), a._triggerDragStart(e, o), de({
          sortable: a,
          name: "choose",
          originalEvent: e
        }), me(b, i.chosenClass, !0);
      }, i.ignore.split(",").forEach(function(c) {
        kn(b, c.trim(), Nt);
      }), B(s, "dragover", Ne), B(s, "mousemove", Ne), B(s, "touchmove", Ne), B(s, "mouseup", a._onDrop), B(s, "touchend", a._onDrop), B(s, "touchcancel", a._onDrop), un && this.nativeDraggable && (this.options.touchStartThreshold = 4, b.draggable = !0), fe("delayStart", this, {
        evt: e
      }), i.delay && (!i.delayOnTouchOnly || o) && (!this.nativeDraggable || !(at || Te))) {
        if (T.eventCanceled) {
          this._onDrop();
          return;
        }
        B(s, "mouseup", a._disableDelayedDrag), B(s, "touchend", a._disableDelayedDrag), B(s, "touchcancel", a._disableDelayedDrag), B(s, "mousemove", a._delayedDragTouchMoveHandler), B(s, "touchmove", a._delayedDragTouchMoveHandler), i.supportPointer && B(s, "pointermove", a._delayedDragTouchMoveHandler), a._dragStartTimer = setTimeout(r, i.delay);
      } else
        r();
    }
  },
  _delayedDragTouchMoveHandler: function(e) {
    var o = e.touches ? e.touches[0] : e;
    Math.max(Math.abs(o.clientX - this._lastX), Math.abs(o.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1)) && this._disableDelayedDrag();
  },
  _disableDelayedDrag: function() {
    b && Nt(b), clearTimeout(this._dragStartTimer), this._disableDelayedDragEvents();
  },
  _disableDelayedDragEvents: function() {
    var e = this.el.ownerDocument;
    M(e, "mouseup", this._disableDelayedDrag), M(e, "touchend", this._disableDelayedDrag), M(e, "touchcancel", this._disableDelayedDrag), M(e, "mousemove", this._delayedDragTouchMoveHandler), M(e, "touchmove", this._delayedDragTouchMoveHandler), M(e, "pointermove", this._delayedDragTouchMoveHandler);
  },
  _triggerDragStart: function(e, o) {
    o = o || e.pointerType == "touch" && e, !this.nativeDraggable || o ? this.options.supportPointer ? B(document, "pointermove", this._onTouchMove) : o ? B(document, "touchmove", this._onTouchMove) : B(document, "mousemove", this._onTouchMove) : (B(b, "dragend", this), B(Y, "dragstart", this._onDragStart));
    try {
      document.selection ? ft(function() {
        document.selection.empty();
      }) : window.getSelection().removeAllRanges();
    } catch {
    }
  },
  _dragStarted: function(e, o) {
    if (Le = !1, Y && b) {
      fe("dragStarted", this, {
        evt: o
      }), this.nativeDraggable && B(document, "dragover", na);
      var t = this.options;
      !e && me(b, t.dragClass, !1), me(b, t.ghostClass, !0), T.active = this, e && this._appendGhost(), de({
        sortable: this,
        name: "start",
        originalEvent: o
      });
    } else
      this._nulling();
  },
  _emulateDragOver: function() {
    if (be) {
      this._lastX = be.clientX, this._lastY = be.clientY, Bn();
      for (var e = document.elementFromPoint(be.clientX, be.clientY), o = e; e && e.shadowRoot && (e = e.shadowRoot.elementFromPoint(be.clientX, be.clientY), e !== o); )
        o = e;
      if (b.parentNode[ge]._isOutsideThisEl(e), o)
        do {
          if (o[ge]) {
            var t = void 0;
            if (t = o[ge]._onDragOver({
              clientX: be.clientX,
              clientY: be.clientY,
              target: e,
              rootEl: o
            }), t && !this.options.dragoverBubble)
              break;
          }
          e = o;
        } while (o = o.parentNode);
      Rn();
    }
  },
  _onTouchMove: function(e) {
    if (Oe) {
      var o = this.options, t = o.fallbackTolerance, a = o.fallbackOffset, l = e.touches ? e.touches[0] : e, i = D && je(D, !0), s = D && i && i.a, r = D && i && i.d, d = st && se && mn(se), c = (l.clientX - Oe.clientX + a.x) / (s || 1) + (d ? d[0] - Ot[0] : 0) / (s || 1), p = (l.clientY - Oe.clientY + a.y) / (r || 1) + (d ? d[1] - Ot[1] : 0) / (r || 1);
      if (!T.active && !Le) {
        if (t && Math.max(Math.abs(l.clientX - this._lastX), Math.abs(l.clientY - this._lastY)) < t)
          return;
        this._onDragStart(e, !0);
      }
      if (D) {
        i ? (i.e += c - (At || 0), i.f += p - (kt || 0)) : i = {
          a: 1,
          b: 0,
          c: 0,
          d: 1,
          e: c,
          f: p
        };
        var u = "matrix(".concat(i.a, ",").concat(i.b, ",").concat(i.c, ",").concat(i.d, ",").concat(i.e, ",").concat(i.f, ")");
        x(D, "webkitTransform", u), x(D, "mozTransform", u), x(D, "msTransform", u), x(D, "transform", u), At = c, kt = p, be = l;
      }
      e.cancelable && e.preventDefault();
    }
  },
  _appendGhost: function() {
    if (!D) {
      var e = this.options.fallbackOnBody ? document.body : Y, o = ae(b, !0, st, !0, e), t = this.options;
      if (st) {
        for (se = e; x(se, "position") === "static" && x(se, "transform") === "none" && se !== document; )
          se = se.parentNode;
        se !== document.body && se !== document.documentElement ? (se === document && (se = we()), o.top += se.scrollTop, o.left += se.scrollLeft) : se = we(), Ot = mn(se);
      }
      D = b.cloneNode(!0), me(D, t.ghostClass, !1), me(D, t.fallbackClass, !0), me(D, t.dragClass, !0), x(D, "transition", ""), x(D, "transform", ""), x(D, "box-sizing", "border-box"), x(D, "margin", 0), x(D, "top", o.top), x(D, "left", o.left), x(D, "width", o.width), x(D, "height", o.height), x(D, "opacity", "0.8"), x(D, "position", st ? "absolute" : "fixed"), x(D, "zIndex", "100000"), x(D, "pointerEvents", "none"), T.ghost = D, e.appendChild(D), x(D, "transform-origin", hn / parseInt(D.style.width) * 100 + "% " + gn / parseInt(D.style.height) * 100 + "%");
    }
  },
  _onDragStart: function(e, o) {
    var t = this, a = e.dataTransfer, l = t.options;
    if (fe("dragStart", this, {
      evt: e
    }), T.eventCanceled) {
      this._onDrop();
      return;
    }
    fe("setupClone", this), T.eventCanceled || (ee = Pn(b), ee.draggable = !1, ee.style["will-change"] = "", this._hideClone(), me(ee, this.options.chosenClass, !1), T.clone = ee), t.cloneId = ft(function() {
      fe("clone", t), !T.eventCanceled && (t.options.removeCloneOnHide || Y.insertBefore(ee, b), t._hideClone(), de({
        sortable: t,
        name: "clone"
      }));
    }), !o && me(b, l.dragClass, !0), o ? (_t = !0, t._loopId = setInterval(t._emulateDragOver, 50)) : (M(document, "mouseup", t._onDrop), M(document, "touchend", t._onDrop), M(document, "touchcancel", t._onDrop), a && (a.effectAllowed = "move", l.setData && l.setData.call(t, a, b)), B(document, "drop", t), x(b, "transform", "translateZ(0)")), Le = !0, t._dragStartId = ft(t._dragStarted.bind(t, o, e)), B(document, "selectstart", t), We = !0, qe && x(document.body, "user-select", "none");
  },
  // Returns true - if no further action is needed (either inserted or another condition)
  _onDragOver: function(e) {
    var o = this.el, t = e.target, a, l, i, s = this.options, r = s.group, d = T.active, c = it === r, p = s.sort, u = ie || d, g, m = this, f = !1;
    if (Gt) return;
    function w(ye, Xe) {
      fe(ye, m, Ve({
        evt: e,
        isOwner: c,
        axis: g ? "vertical" : "horizontal",
        revert: i,
        dragRect: a,
        targetRect: l,
        canSort: p,
        fromSortable: u,
        target: t,
        completed: C,
        onMove: function(ln, Xn) {
          return ct(Y, o, b, a, ln, ae(ln), e, Xn);
        },
        changed: P
      }, Xe));
    }
    function k() {
      w("dragOverAnimationCapture"), m.captureAnimationState(), m !== u && u.captureAnimationState();
    }
    function C(ye) {
      return w("dragOverCompleted", {
        insertion: ye
      }), ye && (c ? d._hideClone() : d._showClone(m), m !== u && (me(b, ie ? ie.options.ghostClass : d.options.ghostClass, !1), me(b, s.ghostClass, !0)), ie !== m && m !== T.active ? ie = m : m === T.active && ie && (ie = null), u === m && (m._ignoreWhileAnimating = t), m.animateAll(function() {
        w("dragOverAnimationComplete"), m._ignoreWhileAnimating = null;
      }), m !== u && (u.animateAll(), u._ignoreWhileAnimating = null)), (t === b && !b.animated || t === o && !t.animated) && (Be = null), !s.dragoverBubble && !e.rootEl && t !== document && (b.parentNode[ge]._isOutsideThisEl(e.target), !ye && Ne(e)), !s.dragoverBubble && e.stopPropagation && e.stopPropagation(), f = !0;
    }
    function P() {
      he = _e(b), De = _e(b, s.draggable), de({
        sortable: m,
        name: "change",
        toEl: o,
        newIndex: he,
        newDraggableIndex: De,
        originalEvent: e
      });
    }
    if (e.preventDefault !== void 0 && e.cancelable && e.preventDefault(), t = Se(t, s.draggable, o, !0), w("dragOver"), T.eventCanceled) return f;
    if (b.contains(e.target) || t.animated && t.animatingX && t.animatingY || m._ignoreWhileAnimating === t)
      return C(!1);
    if (_t = !1, d && !s.disabled && (c ? p || (i = Q !== Y) : ie === this || (this.lastPutMode = it.checkPull(this, d, b, e)) && r.checkPut(this, d, b, e))) {
      if (g = this._getDirection(e, t) === "vertical", a = ae(b), w("dragOverValid"), T.eventCanceled) return f;
      if (i)
        return Q = Y, k(), this._hideClone(), w("revert"), T.eventCanceled || (Pe ? Y.insertBefore(b, Pe) : Y.appendChild(b)), C(!0);
      var z = nn(o, s.draggable);
      if (!z || ia(e, g, this) && !z.animated) {
        if (z === b)
          return C(!1);
        if (z && o === e.target && (t = z), t && (l = ae(t)), ct(Y, o, b, a, t, l, e, !!t) !== !1)
          return k(), o.appendChild(b), Q = o, P(), C(!0);
      } else if (z && la(e, g, this)) {
        var V = Ge(o, 0, s, !0);
        if (V === b)
          return C(!1);
        if (t = V, l = ae(t), ct(Y, o, b, a, t, l, e, !1) !== !1)
          return k(), o.insertBefore(b, V), Q = o, P(), C(!0);
      } else if (t.parentNode === o) {
        l = ae(t);
        var I = 0, N, H = b.parentNode !== o, R = !ea(b.animated && b.toRect || a, t.animated && t.toRect || l, g), K = g ? "top" : "left", q = fn(t, "top", "top") || fn(b, "top", "top"), U = q ? q.scrollTop : void 0;
        Be !== t && (N = l[K], tt = !1, rt = !R && s.invertSwap || H), I = ra(e, t, l, g, R ? 1 : s.swapThreshold, s.invertedSwapThreshold == null ? s.swapThreshold : s.invertedSwapThreshold, rt, Be === t);
        var $;
        if (I !== 0) {
          var W = _e(b);
          do
            W -= I, $ = Q.children[W];
          while ($ && (x($, "display") === "none" || $ === D));
        }
        if (I === 0 || $ === t)
          return C(!1);
        Be = t, et = I;
        var te = t.nextElementSibling, oe = !1;
        oe = I === 1;
        var pe = ct(Y, o, b, a, t, l, e, oe);
        if (pe !== !1)
          return (pe === 1 || pe === -1) && (oe = pe === 1), Gt = !0, setTimeout(aa, 30), k(), oe && !te ? o.appendChild(b) : t.parentNode.insertBefore(b, oe ? te : t), q && Nn(q, 0, U - q.scrollTop), Q = b.parentNode, N !== void 0 && !rt && (pt = Math.abs(N - ae(t)[K])), P(), C(!0);
      }
      if (o.contains(b))
        return C(!1);
    }
    return !1;
  },
  _ignoreWhileAnimating: null,
  _offMoveEvents: function() {
    M(document, "mousemove", this._onTouchMove), M(document, "touchmove", this._onTouchMove), M(document, "pointermove", this._onTouchMove), M(document, "dragover", Ne), M(document, "mousemove", Ne), M(document, "touchmove", Ne);
  },
  _offUpEvents: function() {
    var e = this.el.ownerDocument;
    M(e, "mouseup", this._onDrop), M(e, "touchend", this._onDrop), M(e, "pointerup", this._onDrop), M(e, "touchcancel", this._onDrop), M(document, "selectstart", this);
  },
  _onDrop: function(e) {
    var o = this.el, t = this.options;
    if (he = _e(b), De = _e(b, t.draggable), fe("drop", this, {
      evt: e
    }), Q = b && b.parentNode, he = _e(b), De = _e(b, t.draggable), T.eventCanceled) {
      this._nulling();
      return;
    }
    Le = !1, rt = !1, tt = !1, clearInterval(this._loopId), clearTimeout(this._dragStartTimer), zt(this.cloneId), zt(this._dragStartId), this.nativeDraggable && (M(document, "drop", this), M(o, "dragstart", this._onDragStart)), this._offMoveEvents(), this._offUpEvents(), qe && x(document.body, "user-select", ""), x(b, "transform", ""), e && (We && (e.cancelable && e.preventDefault(), !t.dropBubble && e.stopPropagation()), D && D.parentNode && D.parentNode.removeChild(D), (Y === Q || ie && ie.lastPutMode !== "clone") && ee && ee.parentNode && ee.parentNode.removeChild(ee), b && (this.nativeDraggable && M(b, "dragend", this), Nt(b), b.style["will-change"] = "", We && !Le && me(b, ie ? ie.options.ghostClass : this.options.ghostClass, !1), me(b, this.options.chosenClass, !1), de({
      sortable: this,
      name: "unchoose",
      toEl: Q,
      newIndex: null,
      newDraggableIndex: null,
      originalEvent: e
    }), Y !== Q ? (he >= 0 && (de({
      rootEl: Q,
      name: "add",
      toEl: Q,
      fromEl: Y,
      originalEvent: e
    }), de({
      sortable: this,
      name: "remove",
      toEl: Q,
      originalEvent: e
    }), de({
      rootEl: Q,
      name: "sort",
      toEl: Q,
      fromEl: Y,
      originalEvent: e
    }), de({
      sortable: this,
      name: "sort",
      toEl: Q,
      originalEvent: e
    })), ie && ie.save()) : he !== $e && he >= 0 && (de({
      sortable: this,
      name: "update",
      toEl: Q,
      originalEvent: e
    }), de({
      sortable: this,
      name: "sort",
      toEl: Q,
      originalEvent: e
    })), T.active && ((he == null || he === -1) && (he = $e, De = Qe), de({
      sortable: this,
      name: "end",
      toEl: Q,
      originalEvent: e
    }), this.save()))), this._nulling();
  },
  _nulling: function() {
    fe("nulling", this), Y = b = Q = D = Pe = ee = ut = Ae = Oe = be = We = he = De = $e = Qe = Be = et = ie = it = T.dragged = T.ghost = T.clone = T.active = null, bt.forEach(function(e) {
      e.checked = !0;
    }), bt.length = At = kt = 0;
  },
  handleEvent: function(e) {
    switch (e.type) {
      case "drop":
      case "dragend":
        this._onDrop(e);
        break;
      case "dragenter":
      case "dragover":
        b && (this._onDragOver(e), oa(e));
        break;
      case "selectstart":
        e.preventDefault();
        break;
    }
  },
  /**
   * Serializes the item into an array of string.
   * @returns {String[]}
   */
  toArray: function() {
    for (var e = [], o, t = this.el.children, a = 0, l = t.length, i = this.options; a < l; a++)
      o = t[a], Se(o, i.draggable, this.el, !1) && e.push(o.getAttribute(i.dataIdAttr) || ca(o));
    return e;
  },
  /**
   * Sorts the elements according to the array.
   * @param  {String[]}  order  order of the items
   */
  sort: function(e, o) {
    var t = {}, a = this.el;
    this.toArray().forEach(function(l, i) {
      var s = a.children[i];
      Se(s, this.options.draggable, a, !1) && (t[l] = s);
    }, this), o && this.captureAnimationState(), e.forEach(function(l) {
      t[l] && (a.removeChild(t[l]), a.appendChild(t[l]));
    }), o && this.animateAll();
  },
  /**
   * Save the current sorting
   */
  save: function() {
    var e = this.options.store;
    e && e.set && e.set(this);
  },
  /**
   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.
   * @param   {HTMLElement}  el
   * @param   {String}       [selector]  default: `options.draggable`
   * @returns {HTMLElement|null}
   */
  closest: function(e, o) {
    return Se(e, o || this.options.draggable, this.el, !1);
  },
  /**
   * Set/get option
   * @param   {string} name
   * @param   {*}      [value]
   * @returns {*}
   */
  option: function(e, o) {
    var t = this.options;
    if (o === void 0)
      return t[e];
    var a = lt.modifyOption(this, e, o);
    typeof a < "u" ? t[e] = a : t[e] = o, e === "group" && Fn(t);
  },
  /**
   * Destroy
   */
  destroy: function() {
    fe("destroy", this);
    var e = this.el;
    e[ge] = null, M(e, "mousedown", this._onTapStart), M(e, "touchstart", this._onTapStart), M(e, "pointerdown", this._onTapStart), this.nativeDraggable && (M(e, "dragover", this), M(e, "dragenter", this)), Array.prototype.forEach.call(e.querySelectorAll("[draggable]"), function(o) {
      o.removeAttribute("draggable");
    }), this._onDrop(), this._disableDelayedDragEvents(), yt.splice(yt.indexOf(this.el), 1), this.el = e = null;
  },
  _hideClone: function() {
    if (!Ae) {
      if (fe("hideClone", this), T.eventCanceled) return;
      x(ee, "display", "none"), this.options.removeCloneOnHide && ee.parentNode && ee.parentNode.removeChild(ee), Ae = !0;
    }
  },
  _showClone: function(e) {
    if (e.lastPutMode !== "clone") {
      this._hideClone();
      return;
    }
    if (Ae) {
      if (fe("showClone", this), T.eventCanceled) return;
      b.parentNode == Y && !this.options.group.revertClone ? Y.insertBefore(ee, b) : Pe ? Y.insertBefore(ee, Pe) : Y.appendChild(ee), this.options.group.revertClone && this.animate(b, ee), x(ee, "display", ""), Ae = !1;
    }
  }
};
function oa(n) {
  n.dataTransfer && (n.dataTransfer.dropEffect = "move"), n.cancelable && n.preventDefault();
}
function ct(n, e, o, t, a, l, i, s) {
  var r, d = n[ge], c = d.options.onMove, p;
  return window.CustomEvent && !Te && !at ? r = new CustomEvent("move", {
    bubbles: !0,
    cancelable: !0
  }) : (r = document.createEvent("Event"), r.initEvent("move", !0, !0)), r.to = e, r.from = n, r.dragged = o, r.draggedRect = t, r.related = a || e, r.relatedRect = l || ae(e), r.willInsertAfter = s, r.originalEvent = i, n.dispatchEvent(r), c && (p = c.call(d, r, i)), p;
}
function Nt(n) {
  n.draggable = !1;
}
function aa() {
  Gt = !1;
}
function la(n, e, o) {
  var t = ae(Ge(o.el, 0, o.options, !0)), a = 10;
  return e ? n.clientX < t.left - a || n.clientY < t.top && n.clientX < t.right : n.clientY < t.top - a || n.clientY < t.bottom && n.clientX < t.left;
}
function ia(n, e, o) {
  var t = ae(nn(o.el, o.options.draggable)), a = 10;
  return e ? n.clientX > t.right + a || n.clientX <= t.right && n.clientY > t.bottom && n.clientX >= t.left : n.clientX > t.right && n.clientY > t.top || n.clientX <= t.right && n.clientY > t.bottom + a;
}
function ra(n, e, o, t, a, l, i, s) {
  var r = t ? n.clientY : n.clientX, d = t ? o.height : o.width, c = t ? o.top : o.left, p = t ? o.bottom : o.right, u = !1;
  if (!i) {
    if (s && pt < d * a) {
      if (!tt && (et === 1 ? r > c + d * l / 2 : r < p - d * l / 2) && (tt = !0), tt)
        u = !0;
      else if (et === 1 ? r < c + pt : r > p - pt)
        return -et;
    } else if (r > c + d * (1 - a) / 2 && r < p - d * (1 - a) / 2)
      return sa(e);
  }
  return u = u || i, u && (r < c + d * l / 2 || r > p - d * l / 2) ? r > c + d / 2 ? 1 : -1 : 0;
}
function sa(n) {
  return _e(b) < _e(n) ? 1 : -1;
}
function ca(n) {
  for (var e = n.tagName + n.className + n.src + n.href + n.textContent, o = e.length, t = 0; o--; )
    t += e.charCodeAt(o);
  return t.toString(36);
}
function da(n) {
  bt.length = 0;
  for (var e = n.getElementsByTagName("input"), o = e.length; o--; ) {
    var t = e[o];
    t.checked && bt.push(t);
  }
}
function ft(n) {
  return setTimeout(n, 0);
}
function zt(n) {
  return clearTimeout(n);
}
It && B(document, "touchmove", function(n) {
  (T.active || Le) && n.cancelable && n.preventDefault();
});
T.utils = {
  on: B,
  off: M,
  css: x,
  find: kn,
  is: function(e, o) {
    return !!Se(e, o, e, !1);
  },
  extend: Ho,
  throttle: On,
  closest: Se,
  toggleClass: me,
  clone: Pn,
  index: _e,
  nextTick: ft,
  cancelNextTick: zt,
  detectDirection: Un,
  getChild: Ge
};
T.get = function(n) {
  return n[ge];
};
T.mount = function() {
  for (var n = arguments.length, e = new Array(n), o = 0; o < n; o++)
    e[o] = arguments[o];
  e[0].constructor === Array && (e = e[0]), e.forEach(function(t) {
    if (!t.prototype || !t.prototype.constructor)
      throw "Sortable: Mounted plugin must be a constructor function, not ".concat({}.toString.call(t));
    t.utils && (T.utils = Ve(Ve({}, T.utils), t.utils)), lt.mount(t);
  });
};
T.create = function(n, e) {
  return new T(n, e);
};
T.version = jo;
var ne = [], Ye, Xt, Ht = !1, Pt, Mt, Ct, Je;
function ua() {
  function n() {
    this.defaults = {
      scroll: !0,
      forceAutoScrollFallback: !1,
      scrollSensitivity: 30,
      scrollSpeed: 10,
      bubbleScroll: !0
    };
    for (var e in this)
      e.charAt(0) === "_" && typeof this[e] == "function" && (this[e] = this[e].bind(this));
  }
  return n.prototype = {
    dragStarted: function(o) {
      var t = o.originalEvent;
      this.sortable.nativeDraggable ? B(document, "dragover", this._handleAutoScroll) : this.options.supportPointer ? B(document, "pointermove", this._handleFallbackAutoScroll) : t.touches ? B(document, "touchmove", this._handleFallbackAutoScroll) : B(document, "mousemove", this._handleFallbackAutoScroll);
    },
    dragOverCompleted: function(o) {
      var t = o.originalEvent;
      !this.options.dragOverBubble && !t.rootEl && this._handleAutoScroll(t);
    },
    drop: function() {
      this.sortable.nativeDraggable ? M(document, "dragover", this._handleAutoScroll) : (M(document, "pointermove", this._handleFallbackAutoScroll), M(document, "touchmove", this._handleFallbackAutoScroll), M(document, "mousemove", this._handleFallbackAutoScroll)), _n(), mt(), Wo();
    },
    nulling: function() {
      Ct = Xt = Ye = Ht = Je = Pt = Mt = null, ne.length = 0;
    },
    _handleFallbackAutoScroll: function(o) {
      this._handleAutoScroll(o, !0);
    },
    _handleAutoScroll: function(o, t) {
      var a = this, l = (o.touches ? o.touches[0] : o).clientX, i = (o.touches ? o.touches[0] : o).clientY, s = document.elementFromPoint(l, i);
      if (Ct = o, t || this.options.forceAutoScrollFallback || at || Te || qe) {
        Ut(o, this.options, s, t);
        var r = ke(s, !0);
        Ht && (!Je || l !== Pt || i !== Mt) && (Je && _n(), Je = setInterval(function() {
          var d = ke(document.elementFromPoint(l, i), !0);
          d !== r && (r = d, mt()), Ut(o, a.options, d, t);
        }, 10), Pt = l, Mt = i);
      } else {
        if (!this.options.bubbleScroll || ke(s, !0) === we()) {
          mt();
          return;
        }
        Ut(o, this.options, ke(s, !1), !1);
      }
    }
  }, xe(n, {
    pluginName: "scroll",
    initializeByDefault: !0
  });
}
function mt() {
  ne.forEach(function(n) {
    clearInterval(n.pid);
  }), ne = [];
}
function _n() {
  clearInterval(Je);
}
var Ut = On(function(n, e, o, t) {
  if (e.scroll) {
    var a = (n.touches ? n.touches[0] : n).clientX, l = (n.touches ? n.touches[0] : n).clientY, i = e.scrollSensitivity, s = e.scrollSpeed, r = we(), d = !1, c;
    Xt !== o && (Xt = o, mt(), Ye = e.scroll, c = e.scrollFn, Ye === !0 && (Ye = ke(o, !0)));
    var p = 0, u = Ye;
    do {
      var g = u, m = ae(g), f = m.top, w = m.bottom, k = m.left, C = m.right, P = m.width, z = m.height, V = void 0, I = void 0, N = g.scrollWidth, H = g.scrollHeight, R = x(g), K = g.scrollLeft, q = g.scrollTop;
      g === r ? (V = P < N && (R.overflowX === "auto" || R.overflowX === "scroll" || R.overflowX === "visible"), I = z < H && (R.overflowY === "auto" || R.overflowY === "scroll" || R.overflowY === "visible")) : (V = P < N && (R.overflowX === "auto" || R.overflowX === "scroll"), I = z < H && (R.overflowY === "auto" || R.overflowY === "scroll"));
      var U = V && (Math.abs(C - a) <= i && K + P < N) - (Math.abs(k - a) <= i && !!K), $ = I && (Math.abs(w - l) <= i && q + z < H) - (Math.abs(f - l) <= i && !!q);
      if (!ne[p])
        for (var W = 0; W <= p; W++)
          ne[W] || (ne[W] = {});
      (ne[p].vx != U || ne[p].vy != $ || ne[p].el !== g) && (ne[p].el = g, ne[p].vx = U, ne[p].vy = $, clearInterval(ne[p].pid), (U != 0 || $ != 0) && (d = !0, ne[p].pid = setInterval((function() {
        t && this.layer === 0 && T.active._onTouchMove(Ct);
        var te = ne[this.layer].vy ? ne[this.layer].vy * s : 0, oe = ne[this.layer].vx ? ne[this.layer].vx * s : 0;
        typeof c == "function" && c.call(T.dragged.parentNode[ge], oe, te, n, Ct, ne[this.layer].el) !== "continue" || Nn(ne[this.layer].el, oe, te);
      }).bind({
        layer: p
      }), 24))), p++;
    } while (e.bubbleScroll && u !== r && (u = ke(u, !1)));
    Ht = d;
  }
}, 30), Ln = function(e) {
  var o = e.originalEvent, t = e.putSortable, a = e.dragEl, l = e.activeSortable, i = e.dispatchSortableEvent, s = e.hideGhostForTarget, r = e.unhideGhostForTarget;
  if (o) {
    var d = t || l;
    s();
    var c = o.changedTouches && o.changedTouches.length ? o.changedTouches[0] : o, p = document.elementFromPoint(c.clientX, c.clientY);
    r(), d && !d.el.contains(p) && (i("spill"), this.onSpill({
      dragEl: a,
      putSortable: t
    }));
  }
};
function on() {
}
on.prototype = {
  startIndex: null,
  dragStart: function(e) {
    var o = e.oldDraggableIndex;
    this.startIndex = o;
  },
  onSpill: function(e) {
    var o = e.dragEl, t = e.putSortable;
    this.sortable.captureAnimationState(), t && t.captureAnimationState();
    var a = Ge(this.sortable.el, this.startIndex, this.options);
    a ? this.sortable.el.insertBefore(o, a) : this.sortable.el.appendChild(o), this.sortable.animateAll(), t && t.animateAll();
  },
  drop: Ln
};
xe(on, {
  pluginName: "revertOnSpill"
});
function an() {
}
an.prototype = {
  onSpill: function(e) {
    var o = e.dragEl, t = e.putSortable, a = t || this.sortable;
    a.captureAnimationState(), o.parentNode && o.parentNode.removeChild(o), a.animateAll();
  },
  drop: Ln
};
xe(an, {
  pluginName: "removeOnSpill"
});
T.mount(new ua());
T.mount(an, on);
function pa() {
  return typeof window < "u" ? window.console : global.console;
}
const fa = pa();
function ma(n) {
  const e = /* @__PURE__ */ Object.create(null);
  return function(t) {
    return e[t] || (e[t] = n(t));
  };
}
const ha = /-(\w)/g, yn = ma((n) => n.replace(ha, (e, o) => o ? o.toUpperCase() : ""));
function Ft(n) {
  n.parentElement !== null && n.parentElement.removeChild(n);
}
function bn(n, e, o) {
  const t = o === 0 ? n.children[0] : n.children[o - 1].nextSibling;
  n.insertBefore(e, t);
}
function ga(n, e) {
  return Object.values(n).indexOf(e);
}
function va(n, e, o, t) {
  if (!n)
    return [];
  const a = Object.values(n), l = e.length - t;
  return [...e].map((s, r) => r >= l ? a.length : a.indexOf(s));
}
function $n(n, e) {
  this.$nextTick(() => this.$emit(n.toLowerCase(), e));
}
function _a(n) {
  return (e) => {
    this.realList !== null && this["onDrag" + n](e), $n.call(this, n, e);
  };
}
function ya(n) {
  return ["transition-group", "TransitionGroup"].includes(n);
}
function ba(n) {
  if (!n || n.length !== 1)
    return !1;
  const [{ type: e }] = n;
  return e ? ya(e.name) : !1;
}
function Ca(n, e) {
  return e ? { ...e.props, ...e.attrs } : n;
}
const Wt = ["Start", "Add", "Remove", "Update", "End"], Yt = ["Choose", "Unchoose", "Sort", "Filter", "Clone"], Sa = ["Move", ...Wt, ...Yt].map((n) => "on" + n);
let Bt = null;
const wa = {
  options: Object,
  list: {
    type: Array,
    required: !1,
    default: null
  },
  noTransitionOnDrag: {
    type: Boolean,
    default: !1
  },
  clone: {
    type: Function,
    default: (n) => n
  },
  tag: {
    type: String,
    default: "div"
  },
  move: {
    type: Function,
    default: null
  },
  componentData: {
    type: Object,
    required: !1,
    default: null
  },
  component: {
    type: String,
    default: null
  },
  modelValue: {
    type: Array,
    required: !1,
    default: null
  }
}, Va = Hn({
  name: "VueDraggableNext",
  inheritAttrs: !1,
  emits: [
    "update:modelValue",
    "move",
    "change",
    ...Wt.map((n) => n.toLowerCase()),
    ...Yt.map((n) => n.toLowerCase())
  ],
  props: wa,
  data() {
    return {
      transitionMode: !1,
      noneFunctionalComponentMode: !1,
      headerOffset: 0,
      footerOffset: 0,
      _sortable: {},
      visibleIndexes: [],
      context: {}
    };
  },
  render() {
    const n = this.$slots.default ? this.$slots.default() : null, e = Ca(this.$attrs, this.componentData);
    return n ? (this.transitionMode = ba(n), rn(this.getTag(), e, n)) : rn(this.getTag(), e, []);
  },
  created() {
    this.list !== null && this.modelValue !== null && fa.error("list props are mutually exclusive! Please set one.");
  },
  mounted() {
    const n = {};
    Wt.forEach((a) => {
      n["on" + a] = _a.call(this, a);
    }), Yt.forEach((a) => {
      n["on" + a] = $n.bind(this, a);
    });
    const e = Object.keys(this.$attrs).reduce((a, l) => (a[yn(l)] = this.$attrs[l], a), {}), o = Object.assign({}, e, n, {
      onMove: (a, l) => this.onDragMove(a, l)
    });
    !("draggable" in o) && (o.draggable = ">*");
    const t = this.$el.nodeType === 1 ? this.$el : this.$el.parentElement;
    this._sortable = new T(t, o), t.__draggable_component__ = this, this.computeIndexes();
  },
  beforeUnmount() {
    try {
      this._sortable !== void 0 && this._sortable.destroy();
    } catch {
    }
  },
  computed: {
    realList() {
      return this.list ? this.list : this.modelValue;
    }
  },
  watch: {
    $attrs: {
      handler(n) {
        this.updateOptions(n);
      },
      deep: !0
    },
    realList() {
      this.computeIndexes();
    }
  },
  methods: {
    getTag() {
      return this.component ? _(this.component) : this.tag;
    },
    updateOptions(n) {
      for (var e in n) {
        const o = yn(e);
        Sa.indexOf(o) === -1 && this._sortable.option(o, n[e]);
      }
    },
    getChildrenNodes() {
      return this.$el.children;
    },
    computeIndexes() {
      this.$nextTick(() => {
        this.visibleIndexes = va(this.getChildrenNodes(), this.$el.children, this.transitionMode, this.footerOffset);
      });
    },
    getUnderlyingVm(n) {
      const e = ga(this.getChildrenNodes() || [], n);
      if (e === -1)
        return null;
      const o = this.realList[e];
      return { index: e, element: o };
    },
    emitChanges(n) {
      this.$nextTick(() => {
        this.$emit("change", n);
      });
    },
    alterList(n) {
      if (this.list) {
        n(this.list);
        return;
      }
      const e = [...this.modelValue];
      n(e), this.$emit("update:modelValue", e);
    },
    spliceList() {
      const n = (e) => e.splice(...arguments);
      this.alterList(n);
    },
    updatePosition(n, e) {
      const o = (t) => t.splice(e, 0, t.splice(n, 1)[0]);
      this.alterList(o);
    },
    getVmIndex(n) {
      const e = this.visibleIndexes, o = e.length;
      return n > o - 1 ? o : e[n];
    },
    getComponent() {
      return this.$slots.default ? (
        //@ts-ignore
        this.$slots.default()[0].componentInstance
      ) : null;
    },
    resetTransitionData(n) {
      if (!this.noTransitionOnDrag || !this.transitionMode)
        return;
      var e = this.getChildrenNodes();
      e[n].data = null;
      const o = this.getComponent();
      o.children = [], o.kept = void 0;
    },
    onDragStart(n) {
      this.computeIndexes(), this.context = this.getUnderlyingVm(n.item), this.context && (n.item._underlying_vm_ = this.clone(this.context.element), Bt = n.item);
    },
    onDragAdd(n) {
      const e = n.item._underlying_vm_;
      if (e === void 0)
        return;
      Ft(n.item);
      const o = this.getVmIndex(n.newIndex);
      this.spliceList(o, 0, e), this.computeIndexes();
      const t = { element: e, newIndex: o };
      this.emitChanges({ added: t });
    },
    onDragRemove(n) {
      if (bn(this.$el, n.item, n.oldIndex), n.pullMode === "clone") {
        Ft(n.clone);
        return;
      }
      if (!this.context)
        return;
      const e = this.context.index;
      this.spliceList(e, 1);
      const o = { element: this.context.element, oldIndex: e };
      this.resetTransitionData(e), this.emitChanges({ removed: o });
    },
    onDragUpdate(n) {
      Ft(n.item), bn(n.from, n.item, n.oldIndex);
      const e = this.context.index, o = this.getVmIndex(n.newIndex);
      this.updatePosition(e, o);
      const t = { element: this.context.element, oldIndex: e, newIndex: o };
      this.emitChanges({ moved: t });
    },
    updateProperty(n, e) {
      n.hasOwnProperty(e) && (n[e] += this.headerOffset);
    },
    onDragMove(n, e) {
      const o = this.move;
      if (!o || !this.realList)
        return !0;
      const t = this.getRelatedContextFromMoveEvent(n), a = this.context, l = this.computeFutureIndex(t, n);
      Object.assign(a, { futureIndex: l });
      const i = Object.assign({}, n, {
        relatedContext: t,
        draggedContext: a
      });
      return o(i, e);
    },
    onDragEnd() {
      this.computeIndexes(), Bt = null;
    },
    getTrargetedComponent(n) {
      return n.__draggable_component__;
    },
    getRelatedContextFromMoveEvent({ to: n, related: e }) {
      const o = this.getTrargetedComponent(n);
      if (!o)
        return { component: o };
      const t = o.realList, a = { list: t, component: o };
      if (n !== e && t && o.getUnderlyingVm) {
        const l = o.getUnderlyingVm(e);
        if (l)
          return Object.assign(l, a);
      }
      return a;
    },
    computeFutureIndex(n, e) {
      const o = [...e.to.children].filter((i) => i.style.display !== "none");
      if (o.length === 0)
        return 0;
      const t = o.indexOf(e.related), a = n.component.getVmIndex(t);
      return o.indexOf(Bt) !== -1 || !e.willInsertAfter ? a : a + 1;
    }
  }
}), L = (n, e) => {
  const o = n.__vccOpts || n;
  for (const [t, a] of e)
    o[t] = a;
  return o;
}, Ea = {
  name: "ArrayItemConfigurator",
  components: {
    MetaList: ro,
    MetaListItem: io,
    MetaChildItem: In,
    VueDraggableNext: Va
  },
  inheritAttrs: !1,
  props: {
    meta: {
      type: Object,
      default: () => {
      }
    },
    expand: {
      type: Boolean,
      default: !1
    },
    disableDrag: {
      type: Boolean,
      default: !1
    }
  },
  setup(n, { emit: e }) {
    const o = re(() => {
      var u;
      return ((u = n.meta.widget.props.modelValue) == null ? void 0 : u.value) || n.meta.widget.props.modelValue || [];
    }), t = re(() => ({
      valueField: "field",
      textField: n.meta.widget.props.textField || "value",
      btnList: [
        {
          title: "编辑",
          type: "edit",
          icon: eo()
        },
        {
          title: "删除",
          type: "delete",
          icon: Vn()
        }
      ],
      optionsList: o.value,
      name: n.name,
      draggable: !0
    })), a = Ce({
      currentIndex: -1
    }), l = (u) => {
      a.currentIndex = u.index;
    }, i = () => {
      e("update:modelValue", [...o.value]);
    }, s = () => {
      var m;
      const u = ((m = n.meta.defaultValue) == null ? void 0 : m[0]) || null, g = ["string", "boolean", "number"].includes(n.meta.widget.props.type) ? u : { ...u };
      o.value.push(g), a.currentIndex = o.value.length - 1, i();
    }, r = (u) => {
      o.value.splice(u.index, 1), i();
    }, d = (u) => {
      o.value[u.index] = u.data, i();
    }, c = (u, { propertyKey: g, propertyValue: m }) => {
      m === "" || m === void 0 || m === null ? delete o.value[u][g] : o.value[u][g] = m, i();
    }, p = () => {
      i();
    };
    return {
      state: a,
      itemsOptions: t,
      columnsList: o,
      editItem: l,
      addItem: s,
      deleteItem: r,
      changeItem: d,
      onValueChange: c,
      translate: mo().translate,
      dragEnd: p
    };
  }
}, Ia = { class: "meta-array-wrap" };
function xa(n, e, o, t, a, l) {
  const i = _("meta-child-item"), s = _("meta-list-item"), r = _("vue-draggable-next"), d = _("svg-icon"), c = _("meta-list");
  return h(), y("div", Ia, [
    S(c, null, {
      title: E(() => {
        var p, u;
        return [
          v("label", null, G((u = (p = o.meta.label) == null ? void 0 : p.text) == null ? void 0 : u.zh_CN), 1)
        ];
      }),
      items: E(() => [
        S(r, {
          list: t.itemsOptions.optionsList,
          disabled: o.disableDrag,
          handle: ".tiny-svg-size",
          onChange: t.dragEnd
        }, {
          default: E(() => [
            (h(!0), y(j, null, J(t.itemsOptions.optionsList, (p, u) => (h(), y("div", { key: u }, [
              S(s, {
                item: p,
                index: u,
                dataScource: t.itemsOptions,
                currentIndex: t.state.currentIndex,
                expand: o.expand,
                onChangeItem: t.changeItem,
                onDeleteItem: t.deleteItem,
                onEditItem: t.editItem
              }, {
                content: E(() => [
                  v("span", null, G(t.translate(p[t.itemsOptions.textField]) || p.type), 1)
                ]),
                metaForm: E(() => [
                  S(i, {
                    type: "array",
                    meta: o.meta,
                    index: u,
                    arrayIndex: t.state.currentIndex,
                    "onUpdate:modelValue": (g) => t.onValueChange(u, g)
                  }, null, 8, ["meta", "index", "arrayIndex", "onUpdate:modelValue"])
                ]),
                _: 2
              }, 1032, ["item", "index", "dataScource", "currentIndex", "expand", "onChangeItem", "onDeleteItem", "onEditItem"])
            ]))), 128))
          ]),
          _: 1
        }, 8, ["list", "disabled", "onChange"])
      ]),
      bottom: E(() => [
        v("div", {
          class: "add",
          onClick: e[0] || (e[0] = (...p) => t.addItem && t.addItem(...p))
        }, [
          S(d, { name: "add" }),
          e[1] || (e[1] = v("span", null, "新增一列", -1))
        ])
      ]),
      _: 1
    })
  ]);
}
const jn = /* @__PURE__ */ L(Ea, [["render", xa], ["__scopeId", "data-v-8085c5c2"]]), Ta = {
  name: "ButtonGroupConfigurator",
  components: {
    TinyButtonGroup: Kt
  },
  props: {
    modelValue: {
      type: String
    },
    options: {
      type: Array,
      default: () => []
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const { locale: o } = ot.global, t = O(n.modelValue || ""), a = (s) => !s || !s.length ? [] : s.map(({ label: r, ...d }) => ({ ...d, text: r[o.value] ?? r })), l = O(a(n.options));
    return ce(() => {
      t.value = n.modelValue, l.value = a(n.options);
    }), {
      value: t,
      optionsData: l,
      change: (s) => {
        e("update:modelValue", s);
      }
    };
  }
};
function Da(n, e, o, t, a, l) {
  const i = _("tiny-button-group");
  return h(), A(i, {
    class: "meta-button-group",
    type: "mini",
    modelValue: t.value,
    "onUpdate:modelValue": [
      e[0] || (e[0] = (s) => t.value = s),
      t.change
    ],
    data: t.optionsData
  }, null, 8, ["modelValue", "data", "onUpdate:modelValue"]);
}
const Or = /* @__PURE__ */ L(Ta, [["render", Da], ["__scopeId", "data-v-3d032c3f"]]), Aa = {
  name: "CascaderConfigurator",
  components: {
    TinyCascader: _o
  },
  props: {
    modelValue: {
      type: String
    },
    options: {
      type: Array,
      default: () => []
    },
    placeholder: {
      type: String
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    clearable: {
      type: Boolean,
      default: !0
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const { locale: o } = ot.global, t = O(n.modelValue || ""), a = (r) => {
      const { label: d, children: c, ...p } = r, u = { ...p, label: d[o.value] ?? d };
      return c != null && c.length && (u.children = c.map((g) => a(g))), u;
    }, l = (r) => !r || !r.length ? [] : r.map((d) => a(d)), i = O(l(n.options));
    return ce(() => {
      t.value = n.modelValue, i.value = l(n.options);
    }), {
      optionsData: i,
      selected: t,
      change: (r) => {
        e("update:modelValue", r);
      }
    };
  }
}, ka = { class: "meta-cascader" };
function Oa(n, e, o, t, a, l) {
  const i = _("tiny-cascader");
  return h(), y("div", ka, [
    S(i, {
      filterable: "",
      modelValue: t.selected,
      "onUpdate:modelValue": [
        e[0] || (e[0] = (s) => t.selected = s),
        t.change
      ],
      placeholder: o.placeholder,
      disabled: o.disabled,
      clearable: o.clearable,
      options: t.optionsData,
      props: { emitPath: !1 }
    }, null, 8, ["modelValue", "placeholder", "disabled", "clearable", "options", "onUpdate:modelValue"])
  ]);
}
const Nr = /* @__PURE__ */ L(Aa, [["render", Oa], ["__scopeId", "data-v-a0ed01fa"]]), Na = {
  components: {
    TinyCheckbox: yo
  },
  props: {
    modelValue: { type: Boolean, default: !1 }
  },
  inheritAttrs: !1,
  setup(n, e) {
    const o = O(n.modelValue);
    return ce(() => {
      o.value = n.modelValue;
    }), {
      checked: o,
      change: (a) => {
        e.emit("update:modelValue", a);
      }
    };
  }
};
function Pa(n, e, o, t, a, l) {
  const i = _("tiny-checkbox");
  return h(), A(i, {
    modelValue: t.checked,
    "onUpdate:modelValue": e[0] || (e[0] = (s) => t.checked = s),
    onChange: t.change
  }, null, 8, ["modelValue", "onChange"]);
}
const Pr = /* @__PURE__ */ L(Na, [["render", Pa]]), Ma = {
  name: "CheckboxGroupConfigurator",
  components: {
    TinyCheckboxGroup: bo
  },
  props: {
    modelValue: {
      type: Array,
      default: () => []
    },
    options: {
      type: Array,
      default: () => []
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const o = ot.global.locale.value, t = O(n.modelValue);
    ce(() => {
      t.value = n.modelValue || [];
    });
    const a = () => {
      e("update:modelValue", t.value);
    }, l = re(() => Array.isArray(n.options) ? n.options.map(
      (i) => {
        var s;
        return typeof i == "object" ? {
          ...i,
          text: ((s = i.text) == null ? void 0 : s[o]) || i.text
        } : { label: i, text: String(i) };
      }
    ) : []);
    return {
      value: t,
      handleChange: a,
      parsedOptions: l
    };
  }
};
function Ua(n, e, o, t, a, l) {
  const i = _("tiny-checkbox-group");
  return h(), A(i, {
    modelValue: t.value,
    "onUpdate:modelValue": e[0] || (e[0] = (s) => t.value = s),
    type: "checkbox",
    options: t.parsedOptions,
    onChange: t.handleChange
  }, null, 8, ["modelValue", "options", "onChange"]);
}
const Mr = /* @__PURE__ */ L(Ma, [["render", Ua]]), Fa = {
  components: {
    MonacoEditor: xn,
    TinyButton: Et,
    IconClose: En(),
    TinyTabs: So,
    TinyTabItem: Co,
    TinyInput: Ie,
    TinyButtonGroup: Kt
  },
  props: {
    buttonText: {
      type: String,
      default: "编辑代码"
    },
    modelValue: {
      type: [String, Object, Array],
      default: ""
    },
    title: String,
    language: {
      type: String,
      default: "javascript"
    },
    single: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["save"],
  setup(n, { emit: e }) {
    const o = Ce({
      show: !1,
      created: !1,
      groupData: [
        { text: "商品编号", value: "商品编号" },
        { text: "项目名称", value: "项目名称" },
        { text: "生命状态", value: "生命状态" },
        { text: "流程状态", value: "流程状态" },
        { text: "客户名称", value: "客户名称" },
        { text: "客户账户", value: "客户账户" },
        { text: "产业目录", value: "产业目录" },
        { text: "伙伴名称", value: "伙伴名称" }
      ],
      checkedVal: "商品编号",
      columnData: [
        {
          title: "列表题",
          component: "input",
          value: "商品编号"
        },
        {
          title: "开启搜索",
          component: "switch",
          value: !1
        },
        {
          title: "开启排序",
          component: "switch",
          value: !1
        },
        {
          title: "隐藏",
          component: "switch",
          value: !1
        },
        {
          title: "显示位置",
          component: "select",
          value: "left",
          options: [
            {
              label: "left",
              value: "left"
            },
            {
              label: "right",
              value: "right"
            }
          ]
        }
      ],
      components: { input: Ie, switch: qt, select: ze }
    }), t = O("");
    ce(() => {
      t.value = typeof n.modelValue == "string" ? n.modelValue : JSON.stringify(n.modelValue, null, 2);
    });
    const a = () => {
      o.show = !1, e("close");
    }, l = () => {
      o.created || (o.created = !0), o.show = !0;
    }, i = Yn(), s = () => {
      const c = i.refs.editor.getEditor().getValue();
      if (e("save", { content: c }), !n.single) {
        const p = typeof n.modelValue == "string" ? c : JSON.parse(c);
        e("update:modelValue", p);
      }
      a();
    }, r = O("monaco");
    return {
      save: s,
      close: a,
      open: l,
      tabClick: (c) => {
        r.value = c.name;
      },
      confirm,
      editorState: o,
      value: t,
      editorMode: r,
      options: {
        language: n.language,
        minimap: {
          enabled: !1
        }
      },
      changeColumnConfig: (c) => {
        const p = c.target.textContent;
        o.columnData[0].value = p;
      }
    };
  }
}, Ba = { class: "editorWarp" }, Ra = {
  key: 0,
  class: "source-code"
}, La = { class: "source-code-header" }, $a = { class: "header-text" }, ja = { class: "icon-wrap" }, Ga = { class: "source-code-footer" }, za = { class: "column-config-list" };
function Xa(n, e, o, t, a, l) {
  const i = _("tiny-button"), s = _("icon-close"), r = _("monaco-editor"), d = _("tiny-tab-item"), c = _("tiny-button-group"), p = _("tiny-tabs");
  return h(), y("div", Ba, [
    S(i, { onClick: t.open }, {
      default: E(() => [
        ue(G(o.buttonText), 1)
      ]),
      _: 1
    }, 8, ["onClick"]),
    (h(), A(Wn, { to: "body" }, [
      t.editorState.show ? (h(), y("div", Ra, [
        v("div", La, [
          v("span", $a, G(o.title), 1),
          v("span", ja, [
            S(s, {
              class: "header-icon",
              onClick: t.close
            }, null, 8, ["onClick"])
          ])
        ]),
        S(p, {
          modelValue: t.editorMode,
          "onUpdate:modelValue": e[1] || (e[1] = (u) => t.editorMode = u),
          "tab-style": "card",
          style: { height: "650px" },
          onClick: t.tabClick
        }, {
          default: E(() => [
            S(d, {
              title: "monaco编辑",
              name: "monaco",
              style: { height: "650px" }
            }, {
              default: E(() => [
                S(r, {
                  ref: "editor",
                  class: "source-code-content",
                  value: t.value,
                  options: t.options
                }, null, 8, ["value", "options"]),
                v("div", Ga, [
                  S(i, { onClick: t.close }, {
                    default: E(() => e[2] || (e[2] = [
                      ue("关闭", -1)
                    ])),
                    _: 1,
                    __: [2]
                  }, 8, ["onClick"]),
                  S(i, {
                    type: "info",
                    onClick: t.save
                  }, {
                    default: E(() => e[3] || (e[3] = [
                      ue("保存", -1)
                    ])),
                    _: 1,
                    __: [3]
                  }, 8, ["onClick"])
                ])
              ]),
              _: 1
            }),
            S(d, {
              title: "列编辑",
              name: "column"
            }, {
              default: E(() => [
                v("div", null, [
                  S(c, {
                    modelValue: t.editorState.checkedVal,
                    "onUpdate:modelValue": e[0] || (e[0] = (u) => t.editorState.checkedVal = u),
                    data: t.editorState.groupData,
                    onClick: t.changeColumnConfig
                  }, null, 8, ["modelValue", "data", "onClick"])
                ]),
                v("div", za, [
                  (h(!0), y(j, null, J(t.editorState.columnData, (u, g) => (h(), y("div", {
                    key: g,
                    class: "config-list-item"
                  }, [
                    v("label", null, G(u.title), 1),
                    (h(), A(Me(t.editorState.components[u.component]), {
                      modelValue: u.value,
                      "onUpdate:modelValue": (m) => u.value = m,
                      options: u.options
                    }, null, 8, ["modelValue", "onUpdate:modelValue", "options"])),
                    e[4] || (e[4] = v("div", null, null, -1))
                  ]))), 128))
                ])
              ]),
              _: 1
            })
          ]),
          _: 1
        }, 8, ["modelValue", "onClick"])
      ])) : F("", !0)
    ]))
  ]);
}
const Ur = /* @__PURE__ */ L(Fa, [["render", Xa], ["__scopeId", "data-v-676f75f8"]]), Ha = {
  components: {
    TinySelect: ze,
    TinyOption: Zt,
    IconCommonRefresh: to(),
    TinyTooltip: Ue
  },
  props: {
    modelValue: [String, Number]
  },
  setup(n, {
    emit: e
  }) {
    const o = O([]), t = O(Array.isArray(n.modelValue) ? n.modelValue[0] : n.modelValue), a = (r) => {
      n.modelValue ? gt().confirm({
        message: "修改数据源将导致当前自定义配置失效，是否继续？",
        exec() {
          e("update:modelValue", r);
        },
        cancel() {
          t.value = Array.isArray(n.modelValue) ? n.modelValue[0] : n.modelValue;
        }
      }) : e("update:modelValue", r);
    }, l = (r) => Ke(ht.Http).get(`/app-center/api/sources/list/${r}`), i = Ke(ht.GlobalService).getBaseInfo().id;
    return l(i).then((r) => {
      o.value = r;
    }), {
      options: o,
      selected: t,
      sourceChange: a,
      refreshData: () => {
        gt().confirm({
          message: () => [S("div", {
            class: "update-type"
          }, [S("div", {
            style: "margin-bottom:10px"
          }, [ue("确定更新数据源吗？")])])],
          exec() {
            e("update:modelValue", ""), Jt(() => {
              e("update:modelValue", t.value);
            });
          }
        });
      }
    };
  }
}, Wa = { class: "meta-dataSource-wrap" };
function Ya(n, e, o, t, a, l) {
  const i = _("tiny-option"), s = _("tiny-select"), r = _("icon-common-refresh"), d = _("tiny-tooltip");
  return h(), y("div", Wa, [
    S(s, {
      modelValue: t.selected,
      "onUpdate:modelValue": e[0] || (e[0] = (c) => t.selected = c),
      placeholder: "请选择",
      onChange: t.sourceChange
    }, {
      default: E(() => [
        (h(!0), y(j, null, J(t.options, (c) => (h(), A(i, {
          key: c.id,
          label: c.name,
          value: c.id
        }, null, 8, ["label", "value"]))), 128))
      ]),
      _: 1
    }, 8, ["modelValue", "onChange"]),
    S(d, {
      class: "item",
      effect: "light",
      content: "刷新数据源",
      placement: "top"
    }, {
      default: E(() => [
        S(r, { onClick: t.refreshData }, null, 8, ["onClick"])
      ]),
      _: 1
    })
  ]);
}
const Fr = /* @__PURE__ */ L(Ha, [["render", Ya], ["__scopeId", "data-v-50246551"]]), Ja = {
  components: {
    TinyInput: Ie
  },
  props: {
    name: {
      type: String,
      default: ""
    },
    modelValue: {
      type: String,
      default: ""
    }
  },
  emits: ["change", "update:modelValue"],
  setup(n, { emit: e }) {
    const o = O(n.modelValue), t = re(() => o.value || "#FFFFFF"), a = (i) => {
      e("update:modelValue", i), e("change", i);
    };
    return ce(() => {
      o.value = n.modelValue;
    }), {
      color: o,
      inputColor: t,
      change: a,
      changeColor: (i) => {
        a(i.target.value);
      }
    };
  }
}, Ka = { class: "background-input" };
function qa(n, e, o, t, a, l) {
  const i = _("tiny-input");
  return h(), y("div", Ka, [
    S(i, {
      modelValue: t.color,
      "onUpdate:modelValue": e[2] || (e[2] = (s) => t.color = s),
      placeholder: "请输入颜色",
      onChange: t.change
    }, {
      prefix: E(() => [
        St(v("input", {
          "onUpdate:modelValue": e[0] || (e[0] = (s) => t.inputColor = s),
          type: "color",
          class: "input-color",
          onChange: e[1] || (e[1] = (...s) => t.changeColor && t.changeColor(...s))
        }, null, 544), [
          [wn, t.inputColor]
        ])
      ]),
      _: 1
    }, 8, ["modelValue", "onChange"])
  ]);
}
const Br = /* @__PURE__ */ L(Ja, [["render", qa], ["__scopeId", "data-v-9d556938"]]), Za = {
  components: {
    MetaListItems: so,
    IconDel: Vn(),
    TinyInput: Ie
  },
  setup() {
    var c, p, u, g;
    const { children: n, componentName: e } = X().getSchema(), t = ((u = (p = (c = Vt().getConfigureMap()[e]) == null ? void 0 : c.nestingRule) == null ? void 0 : p.childWhitelist) == null ? void 0 : u[0]) || ((g = n == null ? void 0 : n[0]) == null ? void 0 : g.componentName), a = () => {
      const m = X().getSchema(), f = m.children || [];
      let w = !1;
      const k = f.map((P) => (P.props || (w = !0, P.props = {
        title: "选项卡",
        name: ""
      }), P)), { operateNode: C } = Z();
      w && C({ type: "updateAttributes", id: m.id, value: { children: k } });
    };
    wt(() => {
      a();
    });
    const l = O(n);
    return { children: l, addChildren: () => {
      const m = jt.guid(), f = X().getSchema(), w = {
        componentName: t,
        props: {
          title: "选项卡",
          name: m
        },
        children: [{ componentName: "div" }]
      }, { operateNode: k } = Z();
      k({ type: "insert", parentId: f.id, newNodeData: w, position: "after" }), l.value = [...n];
    }, delChildren: (m) => {
      const { operateNode: f } = Z();
      f({ type: "delete", id: m.id }), l.value = [...n], ho().addHistory();
    }, dragEnd: (m = {}) => {
      const { oldIndex: f, newIndex: w } = (m == null ? void 0 : m.moved) || {};
      if (f === void 0 || w === void 0)
        return;
      const k = X().getSchema(), C = k.children, { operateNode: P } = Z(), z = C[f], V = C[w].id;
      P({ type: "delete", id: C[f].id }), P({
        type: "insert",
        parentId: k.id,
        newNodeData: z,
        position: w < f ? "before" : "after",
        referTargetNodeId: V
      }), l.value = [...C];
    }, onTitleUpdate: (m) => {
      const { operateNode: f } = Z(), w = m.id;
      f({ type: "changeProps", id: w, value: { props: m.props } });
    }, componentName: e };
  }
}, Qa = { class: "item-text" }, el = { class: "tiny-input" }, tl = { class: "item-icon" }, nl = { class: "bottom" };
function ol(n, e, o, t, a, l) {
  const i = _("tiny-input"), s = _("icon-del"), r = _("tiny-tooltip"), d = _("meta-list-items"), c = _("svg-icon");
  return h(), y("div", null, [
    e[2] || (e[2] = v("div", { class: "tabs-header" }, [
      v("div", null, "页签标题"),
      v("div", { class: "tabs-header-id" }, "页签值")
    ], -1)),
    S(d, {
      class: "list",
      optionsList: t.children,
      onDragEnd: t.dragEnd
    }, {
      content: E(({ data: p }) => [
        v("div", Qa, [
          v("div", el, [
            S(i, {
              modelValue: p.props.title,
              "onUpdate:modelValue": [(u) => p.props.title = u, (u) => t.onTitleUpdate(p)]
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            S(i, {
              modelValue: p.props.name,
              "onUpdate:modelValue": [(u) => p.props.name = u, (u) => t.onTitleUpdate(p)]
            }, null, 8, ["modelValue", "onUpdate:modelValue"])
          ])
        ])
      ]),
      operate: E(({ data: p }) => [
        S(r, {
          class: "item",
          effect: "light",
          content: "删除",
          placement: "top"
        }, {
          default: E(() => [
            v("span", tl, [
              S(s, {
                onClick: (u) => t.delChildren(p)
              }, null, 8, ["onClick"])
            ])
          ]),
          _: 2
        }, 1024)
      ]),
      _: 1
    }, 8, ["optionsList", "onDragEnd"]),
    v("div", nl, [
      v("div", {
        class: "add-btn",
        onClick: e[0] || (e[0] = (...p) => t.addChildren && t.addChildren(...p))
      }, [
        S(c, { name: "add" }),
        e[1] || (e[1] = v("span", null, "添加标签页", -1))
      ])
    ])
  ]);
}
const Rr = /* @__PURE__ */ L(Za, [["render", ol], ["__scopeId", "data-v-27323d91"]]), al = {
  components: {
    TinyDatePicker: wo
  },
  inheritAttrs: !1,
  props: {
    name: {
      type: String,
      default: ""
    },
    modelValue: {
      type: [String, Date],
      default: ""
    },
    valueFormat: {
      type: String,
      default: "yyyy-MM-dd"
    }
  },
  setup(n, { emit: e }) {
    const o = O(n.modelValue), t = (a) => {
      e("update:modelValue", a);
    };
    return ce(() => {
      o.value = n.modelValue;
    }), {
      value: o,
      change: t
    };
  }
};
function ll(n, e, o, t, a, l) {
  const i = _("tiny-date-picker");
  return h(), A(i, {
    modelValue: t.value,
    "onUpdate:modelValue": e[0] || (e[0] = (s) => t.value = s),
    "value-format": o.valueFormat,
    onChange: t.change
  }, null, 8, ["modelValue", "value-format", "onChange"]);
}
const Lr = /* @__PURE__ */ L(al, [["render", ll]]), il = {
  name: "GroupItemConfigurator",
  components: {
    MetaChildItem: In
  },
  inheritAttrs: !1,
  props: {
    meta: {
      type: Object,
      default: () => {
      }
    }
  },
  setup(n, { emit: e }) {
    return { onValueChange: ({ propertyKey: t, propertyValue: a }) => {
      var i, s;
      const l = { ...(s = (i = n.meta.widget) == null ? void 0 : i.props) == null ? void 0 : s.modelValue, [t]: a };
      e("update:modelValue", l);
    } };
  }
}, rl = { class: "meta-group-container" }, sl = {
  key: 0,
  class: "meta-group-label"
}, cl = {
  key: 1,
  class: "sep-line top-line"
}, dl = {
  key: 2,
  class: "sep-line bottom-line"
};
function ul(n, e, o, t, a, l) {
  var s, r;
  const i = _("meta-child-item");
  return h(), y("div", rl, [
    o.meta.label && !o.meta.label.hidden ? (h(), y("label", sl, G((r = (s = o.meta.label) == null ? void 0 : s.text) == null ? void 0 : r.zh_CN), 1)) : F("", !0),
    S(i, {
      meta: o.meta,
      "onUpdate:modelValue": t.onValueChange
    }, null, 8, ["meta", "onUpdate:modelValue"]),
    o.meta.widget.props.hiddenTopLine ? F("", !0) : (h(), y("div", cl)),
    o.meta.widget.props.hiddenBottomLine ? F("", !0) : (h(), y("div", dl))
  ]);
}
const $r = /* @__PURE__ */ L(il, [["render", ul], ["__scopeId", "data-v-f0968681"]]), pl = {
  inheritAttrs: !1,
  components: {
    TinyForm: tn,
    TinyFormItem: en,
    TinyInput: Ie,
    TinyButton: Et,
    IconEdit: oo(),
    IconDel: no(),
    TinyPopover: Qt,
    IconClose: En(),
    TinyTooltip: Ue
  },
  props: {
    modelValue: {
      type: String,
      default: "h1"
    },
    show: Boolean
  },
  setup() {
    const n = Ce({
      visible: !1,
      formData: {},
      currentAttr: {}
    }), e = O([]), o = ["style"];
    ce(() => {
      var p, u, g;
      if (!((p = X().getSchema()) != null && p.props))
        return;
      const { schema: c } = Vt().getMaterial(X().getSchema().componentName);
      (u = c == null ? void 0 : c.properties) == null || u.forEach(({ content: m }) => {
        m.forEach(({ property: f }) => o.push(f));
      });
      for (const [m, f] of Object.entries((g = X().getSchema()) == null ? void 0 : g.props)) {
        if (o.includes(m))
          continue;
        const k = e.value.findIndex(({ data: { key: C } }) => C === m);
        k === -1 ? e.value.push({
          text: `${m} = '${f}'`,
          data: { key: m, value: f },
          id: jt.guid()
        }) : Object.assign(e.value[k], {
          text: `${m} = '${f}'`,
          data: { key: m, value: f }
        });
      }
    });
    const t = () => {
      n.visible = !1;
    }, a = () => {
      const c = {}, { operateNode: p } = Z(), { getSchema: u } = X(), { props: g } = u();
      for (const [f, w] of Object.entries(g))
        o.includes(f) && (c[f] = w);
      e.value.forEach((f) => {
        c[f.data.key] = f.data.value;
      });
      const m = X().getSchema();
      p({ type: "updateAttributes", id: m.id, value: { props: c } });
    };
    return {
      state: n,
      cancel: t,
      save: () => {
        n.visible = !1;
        const c = {};
        let p = -1;
        n.currentAttr.id ? (p = e.value.findIndex((u) => u.id === n.currentAttr.id), c.id = n.currentAttr.id, n.currentAttr = {}) : (c.id = jt.guid(), p = e.value.length), c.text = `${n.formData.key} = '${n.formData.value}'`, c.data = { key: n.formData.key, value: n.formData.value }, e.value.splice(p, 1, c), a();
      },
      attrs: e,
      edit: (c) => {
        n.visible = !0, n.currentAttr = c, n.formData = c.data;
      },
      addAttr: () => {
        n.visible = !n.visible, n.formData = {};
      },
      deleteAttr: (c) => {
        const p = e.value.findIndex((u) => u.id === c.id);
        e.value.splice(p, 1), e.value = [...e.value], a();
      },
      closePopover: () => {
        n.visible = !1;
      }
    };
  }
}, fl = { class: "attr-header" }, ml = { class: "attr-form" }, hl = { class: "footer" }, gl = { class: "icon-wrap" }, vl = { class: "attr-list" }, _l = { class: "item-content" }, yl = { class: "item-controller" }, bl = {
  key: 0,
  class: "list-item"
};
function Cl(n, e, o, t, a, l) {
  const i = _("icon-close"), s = _("tiny-input"), r = _("tiny-form-item"), d = _("tiny-button"), c = _("tiny-form"), p = _("svg-icon"), u = _("tiny-tooltip"), g = _("tiny-popover"), m = _("icon-edit"), f = _("icon-del");
  return h(), y(j, null, [
    v("div", fl, [
      e[5] || (e[5] = v("span", { class: "header-title" }, "自定义属性", -1)),
      S(g, {
        modelValue: t.state.visible,
        "onUpdate:modelValue": e[2] || (e[2] = (w) => t.state.visible = w),
        placement: "bottom",
        title: "",
        width: "200",
        "popper-class": "option-popper",
        trigger: "manual"
      }, {
        reference: E(() => [
          S(u, {
            class: "item",
            effect: "light",
            content: "新增原生属性",
            placement: "top"
          }, {
            default: E(() => [
              v("span", gl, [
                S(p, {
                  name: "add",
                  onClick: t.addAttr
                }, null, 8, ["onClick"])
              ])
            ]),
            _: 1
          })
        ]),
        default: E(() => [
          v("div", ml, [
            S(i, {
              class: "icon-close",
              onClick: t.closePopover
            }, null, 8, ["onClick"]),
            S(c, {
              "label-position": "left",
              "label-width": "53px"
            }, {
              default: E(() => [
                S(r, { label: "name" }, {
                  default: E(() => [
                    S(s, {
                      modelValue: t.state.formData.key,
                      "onUpdate:modelValue": e[0] || (e[0] = (w) => t.state.formData.key = w)
                    }, null, 8, ["modelValue"])
                  ]),
                  _: 1
                }),
                S(r, { label: "value" }, {
                  default: E(() => [
                    S(s, {
                      modelValue: t.state.formData.value,
                      "onUpdate:modelValue": e[1] || (e[1] = (w) => t.state.formData.value = w)
                    }, null, 8, ["modelValue"])
                  ]),
                  _: 1
                }),
                v("div", hl, [
                  S(d, {
                    size: "small",
                    onClick: t.cancel
                  }, {
                    default: E(() => e[3] || (e[3] = [
                      ue("取消", -1)
                    ])),
                    _: 1,
                    __: [3]
                  }, 8, ["onClick"]),
                  S(d, {
                    size: "small",
                    type: "primary",
                    onClick: t.save
                  }, {
                    default: E(() => e[4] || (e[4] = [
                      ue("保存", -1)
                    ])),
                    _: 1,
                    __: [4]
                  }, 8, ["onClick"])
                ])
              ]),
              _: 1
            })
          ])
        ]),
        _: 1
      }, 8, ["modelValue"])
    ]),
    v("div", vl, [
      (h(!0), y(j, null, J(t.attrs, (w) => (h(), y("div", {
        key: w,
        class: "list-item"
      }, [
        v("div", _l, G(w.text), 1),
        v("div", yl, [
          S(m, {
            onClick: (k) => t.edit(w)
          }, null, 8, ["onClick"]),
          S(f, {
            onClick: (k) => t.deleteAttr(w)
          }, null, 8, ["onClick"])
        ])
      ]))), 128)),
      t.attrs.length ? F("", !0) : (h(), y("div", bl, e[6] || (e[6] = [
        v("div", { class: "item-content" }, "无数据", -1)
      ])))
    ]),
    e[7] || (e[7] = v("div", { class: "attr-popover" }, null, -1))
  ], 64);
}
const jr = /* @__PURE__ */ L(pl, [["render", Cl], ["__scopeId", "data-v-bc0bdcf6"]]), Sl = {
  name: "InputConfigurator",
  components: {
    TinyInput: Ie
  },
  props: {
    modelValue: {
      type: String
    },
    type: {
      type: String
    },
    placeholder: {
      type: String
    },
    suffixIcons: {
      type: Array,
      default: () => []
    },
    dataType: {
      type: String
    },
    rows: {
      type: Number,
      default: 10
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const o = O(n.modelValue), t = (a) => {
      e("update:modelValue", n.dataType === "Array" ? a.split(",") : a);
    };
    return ce(() => {
      o.value = X().translateProp(n.modelValue);
    }), {
      value: o,
      change: t
    };
  }
};
function wl(n, e, o, t, a, l) {
  const i = _("svg-icon"), s = _("tiny-input");
  return h(), A(s, {
    modelValue: t.value,
    "onUpdate:modelValue": [
      e[0] || (e[0] = (r) => t.value = r),
      t.change
    ],
    type: o.type,
    placeholder: o.placeholder,
    rows: o.rows
  }, {
    suffix: E(() => [
      (h(!0), y(j, null, J(o.suffixIcons, (r) => (h(), y("div", {
        key: r.icon
      }, [
        r.icon ? (h(), A(i, {
          key: 0,
          name: r.icon,
          class: "tiny-svg-size",
          onClick: r.onClick.action
        }, null, 8, ["name", "onClick"])) : F("", !0)
      ]))), 128))
    ]),
    _: 1
  }, 8, ["modelValue", "type", "placeholder", "rows", "onUpdate:modelValue"]);
}
const Vl = /* @__PURE__ */ L(Sl, [["render", wl], ["__scopeId", "data-v-2d4d72a7"]]), El = {
  inheritAttrs: !1,
  components: {
    InputConfigurator: Vl
  },
  props: {
    modelValue: {
      type: String,
      default: "h1"
    },
    showRadioButton: {
      type: Boolean,
      default: !1
    }
  },
  setup(n) {
    const e = ["H1", "H2", "H3", "H4", "H5", "H6"], o = Ce({
      active: e.findIndex((l) => {
        var i;
        return l === ((i = X().getSchema()) == null ? void 0 : i.componentName.toUpperCase());
      }),
      text: X().getSchema().children,
      show: re(() => n.showRadioButton)
    });
    return {
      data: e,
      state: o,
      triggerType: (l, i) => {
        o.active = i;
        const { operateNode: s } = Z(), r = X().getSchema();
        r && s({ type: "updateAttributes", id: r.id, value: { componentName: l.toLowerCase() } });
      },
      change: (l) => {
        const { operateNode: i } = Z(), s = X().getSchema();
        s && i({ type: "updateAttributes", id: s.id, value: { children: l } });
      }
    };
  }
}, Il = {
  key: 0,
  class: "tiny-radio-buttons"
}, xl = ["onClick"], Tl = { class: "head-content" };
function Dl(n, e, o, t, a, l) {
  const i = _("input-configurator");
  return h(), y(j, null, [
    t.state.show ? (h(), y("div", Il, [
      (h(!0), y(j, null, J(t.data, (s, r) => (h(), y("div", {
        key: s,
        class: ve(["tiny-radio-button", t.state.active === r ? "active" : ""]),
        onClick: (d) => t.triggerType(s, r, d)
      }, [
        v("span", null, G(s), 1)
      ], 10, xl))), 128))
    ])) : F("", !0),
    v("div", Tl, [
      S(i, {
        modelValue: t.state.text,
        "onUpdate:modelValue": [
          e[0] || (e[0] = (s) => t.state.text = s),
          t.change
        ],
        type: "textarea"
      }, null, 8, ["modelValue", "onUpdate:modelValue"])
    ])
  ], 64);
}
const Gr = /* @__PURE__ */ L(El, [["render", Dl], ["__scopeId", "data-v-1f12b343"]]), Al = {
  name: "IpSectionConfigurator",
  components: {
    TinyInput: Ie,
    TinyForm: tn,
    TinyFormItem: en,
    TinySelect: ze,
    TinyOption: Zt,
    TinyTooltip: Ue
  },
  props: {
    modelValue: {
      type: String,
      default: ""
    },
    configs: {
      type: Array,
      default: () => []
    },
    configsGroup: {
      type: Array,
      default: () => []
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const o = O(null), t = Ce({
      configs: n.configs,
      ipArray: n.modelValue ? n.modelValue.replace(/\//, ".").split(".") : []
    }), a = re(() => {
      let s = t.ipArray.join(".");
      return t.ipArray.length > 4 && (s = s.replace(/(.*)\./, "$1/")), s;
    }), l = () => {
      const s = t.ipArray.every((r) => r) ? a.value : "";
      e("update:modelValue", s);
    }, i = (s) => {
      t.ipArray = s.ipValue ? s.ipValue.replace(/\//, ".").split(".") : [], l();
    };
    return nt(
      () => n.configs,
      (s) => {
        t.configs = s;
      }
    ), {
      state: t,
      ipChange: l,
      selectProposal: i,
      selectRef: o
    };
  }
}, kl = { class: "meta-ip-section" }, Ol = {
  key: 2,
  class: "spot"
}, Nl = {
  key: 3,
  class: "line"
}, Pl = {
  key: 0,
  class: "proposal"
}, Ml = ["onClick"];
function Ul(n, e, o, t, a, l) {
  const i = _("tiny-option"), s = _("tiny-select"), r = _("tiny-input"), d = _("tiny-tooltip"), c = _("tiny-form-item"), p = _("tiny-form");
  return h(), y("div", kl, [
    S(p, null, {
      default: E(() => [
        (h(!0), y(j, null, J(t.state.configs, (u, g) => (h(), A(c, { key: g }, {
          default: E(() => [
            u.options ? (h(), A(s, {
              key: 0,
              ref_for: !0,
              ref: "selectRef",
              modelValue: t.state.ipArray[g],
              "onUpdate:modelValue": [(m) => t.state.ipArray[g] = m, t.ipChange],
              disabled: u.disabled,
              placeholder: "",
              filterable: ""
            }, {
              default: E(() => [
                (h(!0), y(j, null, J(u.options, (m, f) => (h(), A(i, {
                  key: f,
                  label: m,
                  value: m
                }, null, 8, ["label", "value"]))), 128))
              ]),
              _: 2
            }, 1032, ["modelValue", "onUpdate:modelValue", "disabled"])) : (h(), A(d, {
              key: 1,
              class: "item",
              effect: "light",
              content: u.tip || "",
              placement: "top",
              disabled: !u.tip
            }, {
              default: E(() => [
                S(r, {
                  modelValue: t.state.ipArray[g],
                  "onUpdate:modelValue": [(m) => t.state.ipArray[g] = m, t.ipChange],
                  disabled: u.disabled
                }, null, 8, ["modelValue", "onUpdate:modelValue", "disabled"])
              ]),
              _: 2
            }, 1032, ["content", "disabled"])),
            g < 3 ? (h(), y("span", Ol, "·")) : F("", !0),
            g === 3 && t.state.configs.length === 5 ? (h(), y("span", Nl, "/")) : F("", !0)
          ]),
          _: 2
        }, 1024))), 128))
      ]),
      _: 1
    }),
    o.configsGroup.length ? (h(), y("ul", Pl, [
      ue(G(n.$t("common.proposal")) + " ", 1),
      (h(!0), y(j, null, J(o.configsGroup, (u, g) => (h(), y("li", {
        key: g,
        class: "proposal-item"
      }, [
        ue(G(u.ipLabel || "") + " (", 1),
        v("span", {
          class: "proposal-select",
          onClick: (m) => t.selectProposal(u)
        }, G(n.$t("common.select")), 9, Ml),
        e[0] || (e[0] = ue(") ", -1))
      ]))), 128))
    ])) : F("", !0)
  ]);
}
const zr = /* @__PURE__ */ L(Al, [["render", Ul], ["__scopeId", "data-v-099e22b9"]]), Fl = {
  components: {
    TinyInput: Ie,
    TinyForm: tn,
    TinyFormItem: en,
    TinyTooltip: Ue
  },
  props: {
    modelValue: {
      type: Object
    },
    slots: {
      type: Array,
      default: () => []
    }
  },
  setup(n, { emit: e }) {
    const o = Jn("path", ""), t = O(
      n.slots.map((u) => {
        var m, f;
        const g = (m = n.modelValue) == null ? void 0 : m[u];
        return {
          bind: !!g,
          name: u,
          params: ((f = g == null ? void 0 : g.params) == null ? void 0 : f.join(",")) || ""
        };
      })
    ), a = {
      TinyGrid: {
        content: "暴露给插槽使用的变量，为解构的参数，可以使用多个用逗号分隔，如：row(行数据)，column(列数据)，$table(内部表格实例)，seq(序号)，cell(单元格)，columnIndex(列索引)，$rowIndex(行索引)",
        icon: He.IconHelpCircle()
      }
    }, l = Ce({
      currentComponent: {}
    }), i = O(null), s = (u) => `${u}.params`, r = (u, g, m) => {
      g && g.split(",").some((f) => !Po(f)) ? m(new Error("仅支持JavaScript中有效的变量名")) : m();
    }, d = (u, { bind: g, name: m, params: f = "" }, w = !0) => {
      var H, R;
      const C = { ...{
        [m]: {
          type: "JSSlot",
          value: [
            {
              componentName: "div"
            }
          ]
        }
      }, ...n.modelValue || {} }, { setProp: P } = X(), { setNode: z, operateNode: V } = Z();
      f.length ? C[m].params = f.split(",") : delete C[m].params, g && w ? gt().confirm({
        title: "提示",
        message: "关闭后插槽内的内容将被清空，是否继续？",
        exec: () => {
          t.value[u].bind = !1, V({ type: "delete", id: C[m].value[0].id }), delete C[m], e("update:modelValue", C);
          const [K] = o.split("."), q = X().getSchema();
          P(K, q.props[K]);
        }
      }) : t.value[u].bind = !0, e("update:modelValue", C);
      const [I] = o.split("."), N = X().getSchema();
      for (const K of Object.values(C))
        (H = K.value) != null && H[0] && !((R = K.value[0]) != null && R.id) && z(K.value[0], N);
      P(I, N.props[I]);
    }, c = (u) => {
      if (u.bind) {
        const g = n.modelValue, { params: m, name: f } = u;
        m.length ? g[f].params = m.split(",") : delete g[f].params;
      }
    }, p = (u, g) => {
      i.value.validateField([g], (m) => {
        m || c(u);
      });
    };
    return ce(() => {
      var g;
      const u = (g = Z().getCurrentSchema()) == null ? void 0 : g.componentName;
      l.currentComponent = a[u];
    }), {
      updateSlot: d,
      slotList: t,
      paramsPropPath: s,
      slotRef: i,
      paramsStringValidator: r,
      validParams: p,
      setParams: c,
      state: l,
      componentsMap: a
    };
  }
}, Bl = { class: "meta-slot-container" }, Rl = { class: "use-slot-item-name" }, Ll = { class: "item-icon" }, $l = { class: "use-slot-item-content" }, jl = { class: "use-slot-switch-wrap" }, Gl = ["onClick"];
function zl(n, e, o, t, a, l) {
  const i = _("tiny-tooltip"), s = _("tiny-input"), r = _("tiny-form-item"), d = _("tiny-form");
  return h(), y("div", Bl, [
    e[0] || (e[0] = v("div", { class: "label" }, "使用插槽", -1)),
    S(d, {
      ref: "slotRef",
      class: "slot-form",
      model: t.slotList,
      "label-width": "0",
      inline: ""
    }, {
      default: E(() => [
        (h(!0), y(j, null, J(t.slotList, (c, p) => {
          var u;
          return h(), y("div", {
            key: c.name,
            class: "use-slot"
          }, [
            v("div", Rl, [
              ue(G(c.name) + " ", 1),
              S(i, {
                effect: "light",
                content: (u = t.state.currentComponent) == null ? void 0 : u.content,
                placement: "bottom",
                width: "260"
              }, {
                default: E(() => {
                  var g;
                  return [
                    v("span", Ll, [
                      (h(), A(Me((g = t.state.currentComponent) == null ? void 0 : g.icon)))
                    ])
                  ];
                }),
                _: 1
              }, 8, ["content"])
            ]),
            v("div", $l, [
              v("div", jl, [
                v("div", {
                  class: ve(["e__switch", { "e_is-checked": c.bind }])
                }, [
                  v("span", {
                    class: "e__switch-core",
                    onClick: (g) => t.updateSlot(p, c)
                  }, null, 8, Gl)
                ], 2)
              ]),
              S(r, {
                prop: t.paramsPropPath(p),
                rules: [{ validator: t.paramsStringValidator, trigger: "blur" }],
                class: "slot-name-form-item"
              }, {
                default: E(() => [
                  S(s, {
                    modelValue: c.params,
                    "onUpdate:modelValue": (g) => c.params = g,
                    class: "use-slot-params",
                    onChange: (g) => t.validParams(c, t.paramsPropPath(p))
                  }, null, 8, ["modelValue", "onUpdate:modelValue", "onChange"])
                ]),
                _: 2
              }, 1032, ["prop", "rules"])
            ])
          ]);
        }), 128))
      ]),
      _: 1
    }, 8, ["model"])
  ]);
}
const Xr = /* @__PURE__ */ L(Fl, [["render", zl], ["__scopeId", "data-v-05ca1938"]]), Xl = {
  components: {
    SplitPanes: uo,
    Pane: co
  },
  inheritAttrs: !1,
  setup() {
    var c;
    const n = [{ props: { span: 6 } }, { props: { span: 6 } }], e = ((c = X().getSchema()) == null ? void 0 : c.children) || n, o = O(e.map((p) => p.props.span).join(":")), t = 12, a = O(!1), l = re(() => ({
      mode: o.value,
      modeArray: o.value.split(":"),
      len: o.value.split(":").length
    })), i = Ce([
      {
        col: 1,
        colScale: "12",
        spans: [
          {
            span: 12
          }
        ]
      },
      {
        col: 2,
        colScale: "6:6",
        spans: [
          {
            span: 6
          },
          {
            span: 6
          }
        ]
      },
      {
        col: 2,
        colScale: "3:9",
        spans: [
          {
            span: 3
          },
          {
            span: 9
          }
        ]
      },
      {
        col: 2,
        colScale: "8:4",
        spans: [
          {
            span: 8
          },
          {
            span: 4
          }
        ]
      },
      {
        col: 2,
        colScale: "9:3",
        spans: [
          {
            span: 9
          },
          {
            span: 3
          }
        ]
      },
      {
        col: 3,
        colScale: "4:4:4",
        spans: [
          {
            span: 4
          },
          {
            span: 4
          },
          {
            span: 4
          }
        ]
      },
      {
        col: 3,
        colScale: "3:6:3",
        spans: [
          {
            span: 3
          },
          {
            span: 6
          },
          {
            span: 3
          }
        ]
      },
      {
        col: 4,
        colScale: "3:3:3:3",
        spans: [
          {
            span: 3
          },
          {
            span: 3
          },
          {
            span: 3
          },
          {
            span: 3
          }
        ]
      },
      {
        col: 6,
        colScale: "2:2:2:2:2:2",
        spans: [
          {
            span: 2
          },
          {
            span: 2
          },
          {
            span: 2
          },
          {
            span: 2
          },
          {
            span: 2
          },
          {
            span: 2
          }
        ]
      }
    ]), s = (p) => {
      const u = p.split(":");
      o.value = p;
      const { operateNode: g } = Z(), m = X().getSchema();
      if (!m) {
        console.error("Error! There is no node selected. 错误！当前没有节点被选中。");
        return;
      }
      const f = [...(m == null ? void 0 : m.children) || []];
      u.forEach((w, k) => {
        f[k] ? f[k].props.span = w : f.push({
          componentName: "TinyCol",
          props: {
            style: "height: 100%;",
            span: w
          },
          children: [
            {
              componentName: "div",
              props: {
                style: "height: 100%;"
              }
            }
          ]
        });
      }), g({ type: "updateAttributes", id: m.id, value: { children: f.slice(0, u.length) } });
    };
    return {
      mode: o,
      modeList: i,
      setting: l,
      total: t,
      customizeShow: a,
      resize: (p) => {
        const u = [];
        let g = t;
        for (let m = 0; m < p.length - 1; m++) {
          let f = p[m].size;
          f = Math.floor(f * t / 100), f = Math.max(f, 1), g = g - f, u.push(f);
        }
        u.push(g), s(u.join(":"));
      },
      modeClick: (p, u) => {
        s(u);
      }
    };
  }
}, Hl = { class: "layout-container" }, Wl = { class: "layout-container-module" }, Yl = { class: "list" }, Jl = ["title", "onClick"], Kl = { class: "layout-splitpanes" }, ql = { class: "customize" }, Zl = {
  key: 0,
  style: { color: "#de504e" }
};
function Ql(n, e, o, t, a, l) {
  const i = _("pane"), s = _("split-panes");
  return h(), y("div", Hl, [
    v("div", Wl, [
      v("ul", Yl, [
        (h(!0), y(j, null, J(t.modeList, (r, d) => (h(), y("li", {
          key: d,
          title: r.colScale,
          class: ve([`col-${r.col}`, "li-item", { active: r.colScale === t.mode }]),
          onClick: (c) => t.modeClick(d, r.colScale)
        }, [
          (h(!0), y(j, null, J(r.spans, (c, p) => (h(), y("div", {
            key: p,
            class: ve([`span-${c.span}`, "col-span"])
          }, null, 2))), 128))
        ], 10, Jl))), 128))
      ])
    ]),
    v("div", Kl, [
      v("div", ql, [
        e[0] || (e[0] = ue(" Customize: ", -1)),
        t.customizeShow ? (h(), y("span", Zl, "*")) : F("", !0)
      ]),
      S(s, {
        class: "default-theme",
        style: { height: "28px" },
        onResize: t.resize
      }, {
        default: E(() => [
          (h(!0), y(j, null, J(t.setting.len, (r) => (h(), A(i, {
            key: r,
            class: "layout-pane",
            size: t.setting.modeArray[r - 1] * 100 / t.total,
            "min-size": "8.3"
          }, {
            default: E(() => [
              v("span", null, G(t.setting.modeArray[r - 1]), 1)
            ]),
            _: 2
          }, 1032, ["size"]))), 128))
        ]),
        _: 1
      }, 8, ["onResize"])
    ])
  ]);
}
const Hr = /* @__PURE__ */ L(Xl, [["render", Ql], ["__scopeId", "data-v-41777b23"]]), ei = {
  components: {
    TinyNumeric: Vo,
    TinySelect: ze
  },
  // 2.4.0 新增的属性，关闭默认绑定属性的默认行为
  inheritAttrs: !1,
  props: {
    // 控制按钮显示位置
    controlsPosition: {
      type: String,
      default: "right"
    },
    controls: {
      type: Boolean,
      default: !0
    },
    max: {
      type: Number,
      default: 1 / 0
    },
    min: {
      type: Number,
      default: -1 / 0
    },
    step: {
      type: Number,
      default: 1
    },
    // 是否显示单位
    showUnit: {
      type: Boolean,
      default: !1
    },
    // 单位列表
    units: {
      type: Array,
      default: () => [
        { value: "px", label: "px" },
        { value: "%", label: "%" }
      ]
    },
    // 默认选中的单位
    selectedUnit: {
      type: String,
      default: "px"
    },
    unitSelectWidth: {
      type: String,
      default: "25px"
    },
    // 初始默认值
    modelValue: {
      type: [Number, String],
      default: ""
    },
    // 默认设置的属性名称
    attrName: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    allowEmpty: {
      type: Boolean,
      default: !1
    },
    addonAfter: {
      type: String,
      default: ""
    }
  },
  emits: ["numberChange", "unitChange", "update:modelValue"],
  setup(n, { emit: e }) {
    const o = (s) => {
      if (typeof s != "string")
        return { value: typeof s == "number" ? s : null, unit: null };
      const r = /^([\d.]+)([a-zA-Z/°²³]+)$/, d = s.trim().match(r);
      if (d) {
        const c = parseFloat(d[1]), p = d[2];
        return { value: c, unit: p };
      } else {
        const c = parseFloat(s);
        return { value: isNaN(c) ? null : c, unit: null };
      }
    }, t = O(o(n.modelValue).value), a = O(o(n.modelValue).unit || n.addonAfter || n.selectedUnit);
    return ce(() => {
      t.value = o(n.modelValue).value, a.value = o(n.modelValue).unit || n.addonAfter || n.selectedUnit;
    }), {
      change: () => {
        const s = n.showUnit ? `${t.value}${a.value}` : t.value;
        e("numberChange", t.value), e("update:modelValue", s);
      },
      changeUnit: (s) => {
        a.value = s, e("unitChange", s), e("update:modelValue", `${t.value}${s}`);
      },
      numberRef: t,
      unitRef: a
    };
  }
}, ti = { class: "meta-numeric-input" }, ni = {
  key: 1,
  class: "meta-numeric-addon-after"
};
function oi(n, e, o, t, a, l) {
  var r;
  const i = _("tiny-numeric"), s = _("tiny-select");
  return h(), y("div", ti, [
    S(i, {
      modelValue: t.numberRef,
      "onUpdate:modelValue": e[0] || (e[0] = (d) => t.numberRef = d),
      controls: o.controls,
      "controls-position": o.controlsPosition,
      min: o.min,
      max: o.max,
      step: o.step,
      "allow-empty": o.allowEmpty,
      disabled: o.disabled,
      onChange: t.change
    }, null, 8, ["modelValue", "controls", "controls-position", "min", "max", "step", "allow-empty", "disabled", "onChange"]),
    !o.addonAfter && o.showUnit && ((r = o.units) != null && r.length) ? (h(), y("div", {
      key: 0,
      class: "meta-numeric-unit",
      style: Rt({ width: o.unitSelectWidth })
    }, [
      S(s, {
        modelValue: t.unitRef,
        "onUpdate:modelValue": e[1] || (e[1] = (d) => t.unitRef = d),
        "popper-class": "select-popper",
        options: o.units,
        disabled: o.disabled,
        size: "mini",
        title: t.unitRef,
        onChange: t.changeUnit
      }, null, 8, ["modelValue", "options", "disabled", "title", "onChange"])
    ], 4)) : F("", !0),
    o.addonAfter ? (h(), y("div", ni, G(o.addonAfter), 1)) : F("", !0)
  ]);
}
const ai = /* @__PURE__ */ L(ei, [["render", oi], ["__scopeId", "data-v-1223e8f7"]]), li = {
  components: {
    TinyTooltip: Ue
  },
  props: {
    options: {
      type: Array,
      required: !0,
      default: () => [
        {
          value: "block",
          title: "",
          tip: "block",
          icon: "display-block"
        }
      ]
    },
    value: {
      type: String,
      default: ""
    },
    disabled: {
      type: Boolean,
      default: !1
    }
  },
  emits: ["pickedChange"],
  setup(n, e) {
    return {
      picked: O(n.value),
      change: (a) => {
        const l = a.target.value;
        e.emit("pickedChange", l);
      }
    };
  }
}, ii = { class: "radio-group" }, ri = ["value"], si = { key: 2 };
function ci(n, e, o, t, a, l) {
  const i = _("svg-icon"), s = _("tiny-tooltip");
  return h(), y("div", ii, [
    (h(!0), y(j, null, J(o.options, (r) => (h(), A(s, {
      key: r.value,
      "open-delay": 500,
      disabled: o.disabled,
      content: r.tip,
      placement: "top",
      effect: "light"
    }, {
      default: E(() => [
        v("label", {
          class: ve(["radio-button", { active: r.value === o.value }])
        }, [
          St(v("input", {
            "onUpdate:modelValue": e[0] || (e[0] = (d) => t.picked = d),
            type: "radio",
            name: "radio-buttons",
            value: r.value,
            onClick: e[1] || (e[1] = (...d) => t.change && t.change(...d))
          }, null, 8, ri), [
            [Kn, t.picked]
          ]),
          r.isTinyIcon ? (h(), A(Me(r.icon), { key: 0 })) : F("", !0),
          !r.isTinyIcon && r.icon ? (h(), A(i, {
            key: 1,
            name: r.icon
          }, null, 8, ["name"])) : F("", !0),
          r.text ? (h(), y("span", si, G(r.text), 1)) : F("", !0),
          ue(" " + G(r.title || ""), 1)
        ], 2)
      ]),
      _: 2
    }, 1032, ["disabled", "content"]))), 128))
  ]);
}
const Wr = /* @__PURE__ */ L(li, [["render", ci], ["__scopeId", "data-v-d9946c05"]]), di = {
  name: "RadioGroupConfigurator",
  components: {
    TinyRadioGroup: Io,
    TinyRadioButton: Eo
  },
  props: {
    modelValue: {
      type: String
    },
    options: {
      type: Array,
      default: () => []
    },
    type: {
      type: String,
      default: "radio"
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const o = ot.global.locale.value, t = O(n.modelValue);
    ce(() => {
      t.value = n.modelValue ?? "";
    });
    const a = () => {
      e("update:modelValue", t.value);
    }, l = re(
      () => n.options.map(
        (i) => {
          var s;
          return typeof i == "object" ? {
            ...i,
            text: ((s = i.text) == null ? void 0 : s[o]) || i.text
          } : { label: i, text: String(i) };
        }
      )
    );
    return {
      value: t,
      handleChange: a,
      parsedOptions: l
    };
  }
}, ui = { class: "meta-radio-group-container" };
function pi(n, e, o, t, a, l) {
  const i = _("tiny-radio-button"), s = _("tiny-radio-group");
  return h(), y("div", ui, [
    o.type === "button" ? (h(), A(s, Lt({
      key: 0,
      modelValue: t.value,
      "onUpdate:modelValue": e[0] || (e[0] = (r) => t.value = r)
    }, n.$attrs, { onChange: t.handleChange }), {
      default: E(() => [
        (h(!0), y(j, null, J(t.parsedOptions, (r) => (h(), A(i, {
          key: r,
          label: r.label ?? r,
          text: r.text ?? r.label
        }, null, 8, ["label", "text"]))), 128))
      ]),
      _: 1
    }, 16, ["modelValue", "onChange"])) : F("", !0),
    o.type === "radio" ? (h(), A(s, Lt({
      key: 1,
      modelValue: t.value,
      "onUpdate:modelValue": e[1] || (e[1] = (r) => t.value = r)
    }, n.$attrs, {
      options: t.parsedOptions,
      onChange: t.handleChange
    }), null, 16, ["modelValue", "options", "onChange"])) : F("", !0)
  ]);
}
const Yr = /* @__PURE__ */ L(di, [["render", pi], ["__scopeId", "data-v-da013a00"]]), fi = {
  components: {
    ArrayItemConfigurator: jn
  },
  props: {
    meta: {
      type: Object,
      default: () => ({})
    },
    expand: {
      type: Boolean,
      default: !1
    },
    disableDrag: {
      type: Boolean,
      default: !1
    }
  },
  setup(n, { emit: e }) {
    var s;
    const t = `lowcode.${(s = Z().getCurrentSchema()) == null ? void 0 : s.componentName}.dataChange`, a = {
      FIELD: "field",
      COMPONENT: "SelectConfigurator"
    }, l = (r) => e("update:modelValue", r), i = (r) => {
      var p, u, g, m;
      const d = (g = (u = (p = n.meta) == null ? void 0 : p.properties) == null ? void 0 : u[0]) == null ? void 0 : g.content, c = d == null ? void 0 : d.find(
        (f) => {
          var w;
          return f.property === a.FIELD && ((w = f.widget) == null ? void 0 : w.component) === a.COMPONENT;
        }
      );
      c && (r != null && r[0] ? c.widget.props.options = (m = Object.keys(r[0])) == null ? void 0 : m.map((f) => ({
        label: f,
        value: f
      })) : c.widget.props.options = []);
    };
    return wt(() => {
      const { subscribe: r } = $t();
      r({ topic: t, callback: (d) => i(d) });
    }), qn(() => {
      const { unsubscribe: r } = $t();
      r({ topic: t });
    }), {
      saveValue: l
    };
  }
};
function mi(n, e, o, t, a, l) {
  const i = _("array-item-configurator");
  return h(), A(i, {
    meta: o.meta,
    expand: o.expand,
    disableDrag: o.disableDrag,
    "onUpdate:modelValue": t.saveValue
  }, null, 8, ["meta", "expand", "disableDrag", "onUpdate:modelValue"]);
}
const Jr = /* @__PURE__ */ L(fi, [["render", mi]]);
/**
* @vue/shared v3.5.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/
process.env.NODE_ENV !== "production" && Object.freeze({});
process.env.NODE_ENV !== "production" && Object.freeze([]);
const Gn = (n) => {
  const e = /* @__PURE__ */ Object.create(null);
  return (o) => e[o] || (e[o] = n(o));
}, hi = /-(\w)/g, Cn = Gn(
  (n) => n.replace(hi, (e, o) => o ? o.toUpperCase() : "")
), Sn = Gn((n) => n.charAt(0).toUpperCase() + n.slice(1)), { EXPRESSION_TYPE: gi } = No, le = {
  THIS: "this.",
  STATE: "this.state.",
  STORE: "this.stores.",
  PROPS: "this.props.",
  DATASOUCE: "datasource",
  DATASOUCEPREFIX: "数据源： ",
  DATASOURCEMAP: "this.dataSourceMap.",
  INTERVALID: "intervalId"
}, zn = () => {
  var t, a, l;
  const { getCurrent: n } = Z().canvasApi.value || {};
  if (!n)
    return [!1, {}];
  const { getNodeWithParentById: e } = Z(), o = (l = e((a = (t = n()) == null ? void 0 : t.parent) == null ? void 0 : a.id, !0)) == null ? void 0 : l.parent;
  return [(o == null ? void 0 : o.type) === "JSSlot", o];
}, vi = () => {
  const [n, e] = zn();
  return n ? (e == null ? void 0 : e.params) || [] : [];
}, _i = {
  name: "VariableConfigurator",
  components: {
    MonacoEditor: xn,
    TinyDialogBox: To,
    TinyButton: Et,
    TinySearch: Tn,
    TinySwitch: qt,
    TinyInput: Ie,
    TinyTooltip: Ue,
    SvgButton: po,
    TinyAlert: xo
  },
  inheritAttrs: !1,
  props: {
    name: {
      type: String,
      default: ""
    },
    modelValue: {
      type: [String, Number, Boolean, Array, Object, Date],
      default: ""
    },
    lazyLoad: {
      type: Boolean,
      default: !0
    }
  },
  setup(n, { emit: e }) {
    var z;
    const o = O(null);
    let t = "";
    const a = [
      { id: "state", content: "State 属性" },
      { id: "store", content: "应用状态" },
      { id: "function", content: "自定义处理函数" },
      { id: "utils", content: "工具类" },
      { id: "bridge", content: "桥接源" },
      { id: "datasource", content: "数据源" }
    ], l = Ce({
      isBlock: re(() => Z().isBlock()),
      variables: {},
      // 控制变量列表显示/隐藏
      isVisible: !1,
      // 搜索框value
      value: "",
      active: "state",
      // 某一类型下的变量列表
      variableList: re(() => {
        const V = [], [I] = zn();
        return l.isBlock && V.push({ id: "props", content: "props" }), l.loopData && V.push({ id: "loop", content: "循环变量" }), I && V.push({ id: "slotScope", content: "暴露给插槽使用的变量" }), [...a, ...V];
      }),
      // 绑定的变量名/变量表达式
      variable: "",
      // 绑定的变量指向的值内容
      variableContent: null,
      // 引用的state变量名
      variableName: "",
      // 编辑器状态：只读状态(false)、编辑状态(true)
      isEditorEditMode: !0,
      dataSouce: null,
      // 静态值
      mock: ((z = n.modelValue) == null ? void 0 : z.value) || n.modelValue,
      bindPrefix: "",
      loopData: null,
      loopArgs: "",
      isPoll: !1,
      pollInterval: 5e3
    }), i = re(() => l.active === le.DATASOUCE);
    nt(
      () => l.isVisible,
      (V) => {
        var I;
        V && (t = l.variable, l.loopData = (I = X().getSchema()) == null ? void 0 : I.loop);
      }
    );
    const s = re(() => {
      var V, I, N;
      return ((N = (I = (V = n.modelValue) == null ? void 0 : V.value) == null ? void 0 : I.replace) == null ? void 0 : N.call(I, "this.state.", "")) || "";
    }), r = {
      language: "javascript",
      lineNumbers: !1,
      minimap: {
        enabled: !1
      },
      tabSize: 2,
      insertSpaces: !0,
      formatOnPaste: !0,
      formatOnType: !0,
      autoIndent: "full",
      newLineCharacter: `
`,
      convertTabsToSpaces: !0,
      trimAutoWhitespace: !0,
      wordWrap: "on",
      wordWrapColumn: 120,
      wordWrapMinChars: 10,
      wordWrapStrategy: "advanced"
    }, d = () => {
      if (!o.value)
        return;
      const V = o.value.getMonaco().languages.typescript.javascriptDefaults.getDiagnosticsOptions();
      o.value.getMonaco().languages.typescript.javascriptDefaults.setDiagnosticsOptions({
        ...V,
        noSyntaxValidation: !0,
        noSemanticValidation: !0
      });
    }, c = (V, I, N, H) => {
      var q, U;
      const R = (U = (q = H.lifeCycles) == null ? void 0 : q.onUnmounted) == null ? void 0 : U.value, K = `
      /** ${V} */
      clearInterval(state.${N});
      /** ${I} */`;
      R ? R.includes(`${N}`) || (H.lifeCycles.onUnmounted.value = R.trim().replace(/\}$/, K + "}")) : (H.lifeCycles = H.lifeCycles || {}, H.lifeCycles.onUnmounted = {
        type: "JSFunction",
        value: `function onUnmounted() {${K}}`
      });
    }, p = (V, I, N) => {
      var H, R, K;
      if ((H = I == null ? void 0 : I.data) != null && H.data) {
        const q = (K = (R = N.lifeCycles) == null ? void 0 : R.setup) == null ? void 0 : K.value, { start: U, end: $ } = Mo(V), W = `${le.INTERVALID}${Sn(Cn(I.name))}`, te = l.isPoll && l.pollInterval !== void 0;
        let oe = `${le.DATASOURCEMAP}${I.name}.load().then(res => {
          state.${V} = res?.data?.items || res?.data || res
        })`;
        te && (oe = `state.${W} = setInterval(() => {${le.DATASOURCEMAP}${I.name}.load().then(res => {
            state.${V} = res?.data?.items || res?.data || res
          })}, ${l.pollInterval})`);
        const pe = `
        /** ${U} */
        ${oe};
        /** ${$} */`;
        if (!q)
          N.lifeCycles = N.lifeCycles || {}, N.lifeCycles.setup = {
            type: "JSFunction",
            value: `function setup({ props, state, watch, onMounted }) {${pe}}`
          };
        else if (!q.includes(`${le.DATASOURCEMAP}${I.name}`))
          N.lifeCycles.setup.value = q.trim().replace(/\}$/, pe + "}");
        else {
          const ye = Uo(q);
          Fo(ye, {
            ExpressionStatement(Xe) {
              Xe.toString().includes(I.name) && (Xe.replaceWithSourceString(oe), Xe.stop());
            }
          }), N.lifeCycles.setup.value = Bo(ye).code;
        }
        te && c(U, $, W, N);
      }
    }, u = (V, I) => {
      var N;
      if (l.bindPrefix === le.DATASOUCEPREFIX) {
        const H = `${le.DATASOUCE}${Sn(Cn(V))}`, R = ((N = I == null ? void 0 : I.data) == null ? void 0 : N.data) || [];
        l.dataSouce = I, l.variable = `${le.STATE}${H}`, o.value.getEditor().setValue(l.variable), l.variableName = V, l.variableContent = R;
      } else
        l.variable = l.bindPrefix ? `${l.bindPrefix}${V}` : `${l.loopArgs}${V}`, o.value.getEditor().setValue(l.variable), l.variableName = V, l.variableContent = l.variables[V];
    }, g = () => {
      l.variable = "", l.isVisible = !1;
    }, m = () => {
      e("update:modelValue", ""), g();
    }, f = async () => {
      var U;
      const V = (U = o.value) == null ? void 0 : U.getEditor();
      await V.getAction("editor.action.formatDocument").run();
      const I = l.isEditorEditMode ? V.getValue() : l.variable, { setSaved: N, getSchema: H, updateSchema: R } = Z();
      t !== I && N(!1);
      const K = /^[\s]*{[\s]*api[\s]*:[\s\w.]*}$/, q = n.name === "fetchData" && !K.test(I);
      if (I) {
        if (l.bindPrefix === le.DATASOUCEPREFIX) {
          const $ = H(), W = l.variable.replace(`${le.STATE}`, ""), te = l.variableContent.map(({ _id: oe, ...pe }) => pe);
          R({ state: { ...$.state, [W]: te } }), p(W, l.dataSouce, $);
        }
        e("update:modelValue", {
          type: "JSExpression",
          value: q ? `{api:${I}}` : I
        });
      } else
        e("update:modelValue", "");
      g();
    }, w = () => {
      var V, I, N;
      return (V = n.modelValue) != null && V.value && ((I = n.modelValue) == null ? void 0 : I.type) === gi.JS_EXPRESSION && Object.keys(n.modelValue || {}).length === 2 ? String((N = n.modelValue) == null ? void 0 : N.value) : "";
    }, k = O(!n.lazyLoad);
    return {
      editorDidMount: d,
      editorOptions: r,
      variableClick: u,
      remove: m,
      cancel: g,
      confirm: f,
      dialogShouldInitialize: k,
      open: () => {
        var V;
        k.value = !0, l.isVisible = !0, l.variableName = s.value, l.variable = w(), l.variables = ((V = Z().getSchema()) == null ? void 0 : V.state) || {}, l.bindPrefix = le.STATE, l.variableContent = l.variables[s.value], Jt(() => window.dispatchEvent(new Event("resize")));
      },
      selectItem: (V) => {
        var N, H, R, K, q;
        l.active = V.id;
        const { getSchema: I } = Z();
        if (V.id === "function") {
          l.bindPrefix = le.THIS;
          const { getMethods: U } = Ke(go.Page);
          l.variables = { ...U == null ? void 0 : U() };
        } else if (V.id === "bridge" || V.id === "utils") {
          l.bindPrefix = `${le.THIS}${V.id}.`;
          const U = {};
          (N = sn().appSchemaState[V.id]) == null || N.forEach(($) => {
            U[$.name] = `${V.id}.${$.content.exportName}`;
          }), l.variables = U;
        } else if (V.id === "props") {
          l.bindPrefix = le.PROPS;
          const U = (R = (H = I()) == null ? void 0 : H.schema) == null ? void 0 : R.properties, $ = {};
          U == null || U.forEach(({ content: W }) => {
            W.forEach(({ property: te }) => {
              $[te] = te;
            });
          }), l.variables = $;
        } else if (V.id === "datasource") {
          l.bindPrefix = le.DATASOUCEPREFIX;
          const U = new URLSearchParams(location.search), W = Ke(ht.GlobalService).getBaseInfo().id || U.get("id");
          Ke(ht.Http).get(`/app-center/api/sources/list/${W}`).then((te) => {
            const oe = {};
            te.forEach((pe) => {
              oe[pe.name] = pe;
            }), l.variables = oe;
          });
        } else if (V.id === "store")
          l.bindPrefix = le.STORE, l.variables = {}, sn().appSchemaState.globalState.forEach(({ id: $, state: W = {}, getters: te = {} }) => {
            const oe = (pe) => {
              const ye = `${$}.${pe}`;
              l.variables[ye] = ye;
            };
            Object.keys(W).forEach(oe), Object.keys(te).forEach(oe);
          });
        else if (V.id === "loop") {
          l.bindPrefix = "";
          const [U = cn.ITEM, $ = cn.INDEX] = ((K = X().getSchema()) == null ? void 0 : K.loopArgs) || [];
          l.variables = [U, $].reduce((W, te) => ({ ...W, [te]: te }), {});
        } else if (V.id === "slotScope") {
          l.bindPrefix = "";
          const U = vi();
          l.variables = U.reduce(($, W) => ({ ...$, [W]: W }), {});
        } else
          l.bindPrefix = le.STATE, l.variables = (q = I()) == null ? void 0 : q[V.id];
      },
      state: l,
      editor: o,
      isDataSource: i
    };
  }
}, yi = { class: "bind-dialog-container" }, bi = { class: "bind-dialog-container-header" }, Ci = { class: "bind-dialog-content" }, Si = { class: "content-left" }, wi = { class: "list-wrap" }, Vi = { class: "content-left__list" }, Ei = ["onClick"], Ii = { class: "item-content" }, xi = { class: "item-content-list lowcode-scrollbar-thin" }, Ti = ["onClick"], Di = ["title"], Ai = { class: "content-right" }, ki = { class: "content-wrap" }, Oi = {
  key: 0,
  class: "top"
}, Ni = {
  key: 0,
  class: "datasource-poll-wrap"
}, Pi = {
  key: 0,
  class: "datasource-poll-interval"
}, Mi = { class: "bind-dialog-footer" }, Ui = { class: "right" };
function Fi(n, e, o, t, a, l) {
  const i = _("svg-button"), s = _("tiny-alert"), r = _("tiny-search"), d = _("monaco-editor"), c = _("tiny-tooltip"), p = _("tiny-switch"), u = _("tiny-input"), g = _("tiny-button"), m = _("tiny-dialog-box");
  return h(), y(j, null, [
    Zn(n.$slots, "default", {}, () => {
      var f;
      return [
        v("span", {
          class: ve(["icon", { "icon-bind": (f = o.modelValue) == null ? void 0 : f.variable }]),
          onClick: e[0] || (e[0] = (...w) => t.open && t.open(...w))
        }, [
          S(i, {
            name: "cloud-shell",
            placement: "top",
            tips: "变量绑定"
          })
        ], 2)
      ];
    }, !0),
    t.dialogShouldInitialize ? (h(), A(m, {
      key: 0,
      visible: t.state.isVisible,
      title: "变量绑定",
      width: "48%",
      "append-to-body": !0,
      class: "meta-bind-variable-dialog-box",
      "onUpdate:visible": e[4] || (e[4] = (f) => t.state.isVisible = f),
      onClose: t.cancel
    }, {
      footer: E(() => [
        v("div", Mi, [
          S(g, {
            type: "danger",
            plain: "",
            onClick: t.remove
          }, {
            default: E(() => e[11] || (e[11] = [
              ue("移除绑定", -1)
            ])),
            _: 1,
            __: [11]
          }, 8, ["onClick"]),
          v("div", Ui, [
            S(g, { onClick: t.cancel }, {
              default: E(() => e[12] || (e[12] = [
                ue("取 消", -1)
              ])),
              _: 1,
              __: [12]
            }, 8, ["onClick"]),
            S(g, {
              type: "info",
              onClick: t.confirm
            }, {
              default: E(() => e[13] || (e[13] = [
                ue("确 定", -1)
              ])),
              _: 1,
              __: [13]
            }, 8, ["onClick"])
          ])
        ])
      ]),
      default: E(() => [
        v("div", yi, [
          v("div", bi, [
            S(s, {
              type: "info",
              description: "你可以通过点击左侧区域变量列表绑定变量或处理函数，也可以在右边输入模式输入复杂的表达式。",
              class: "header-alert",
              closable: !1
            })
          ]),
          v("div", Ci, [
            v("div", Si, [
              e[5] || (e[5] = v("span", { class: "content-left__title" }, "变量列表", -1)),
              v("div", wi, [
                v("ul", Vi, [
                  (h(!0), y(j, null, J(t.state.variableList, (f) => (h(), y("li", {
                    key: f.id,
                    class: ve({ "content-left__list-item": !0, active: f.id === t.state.active }),
                    onClick: (w) => t.selectItem(f)
                  }, G(f.content), 11, Ei))), 128))
                ]),
                v("div", Ii, [
                  S(r, {
                    modelValue: t.state.value,
                    "onUpdate:modelValue": e[1] || (e[1] = (f) => t.state.value = f),
                    placeholder: "搜索"
                  }, null, 8, ["modelValue"]),
                  v("div", xi, [
                    v("ul", null, [
                      (h(!0), y(j, null, J(t.state.variables, (f, w) => St((h(), y("li", {
                        key: w,
                        class: ve({ "item-selected": t.state.variableName === w }),
                        onClick: (k) => t.variableClick(w, f)
                      }, [
                        v("div", {
                          class: "item-text",
                          title: t.state.bindPrefix + w
                        }, G(`${t.state.bindPrefix}${w}`), 9, Di)
                      ], 10, Ti)), [
                        [Qn, w.includes(t.state.value)]
                      ])), 128))
                    ])
                  ])
                ])
              ])
            ]),
            v("div", Ai, [
              e[10] || (e[10] = v("div", { class: "content-detail-header" }, [
                v("div", { class: "header-name" }, [
                  v("span", { class: "content-right__title" }, "变量")
                ])
              ], -1)),
              v("div", ki, [
                t.state.isEditorEditMode ? (h(), y("div", {
                  key: 1,
                  class: ve(["top", { "poll-top": t.isDataSource }])
                }, [
                  S(d, {
                    ref: "editor",
                    value: t.state.variable,
                    options: t.editorOptions,
                    onEditorDidMount: t.editorDidMount
                  }, null, 8, ["value", "options", "onEditorDidMount"]),
                  t.isDataSource ? (h(), y("div", Ni, [
                    S(c, {
                      placement: "top",
                      content: "定时更新开启后，页面运行时将会定期请求远程数据源，实现数据定时更新。",
                      effect: "light"
                    }, {
                      default: E(() => e[6] || (e[6] = [
                        v("span", null, "定时更新：", -1)
                      ])),
                      _: 1,
                      __: [6]
                    }),
                    S(p, {
                      modelValue: t.state.isPoll,
                      "onUpdate:modelValue": e[2] || (e[2] = (f) => t.state.isPoll = f)
                    }, null, 8, ["modelValue"]),
                    t.state.isPoll ? (h(), y("div", Pi, [
                      e[7] || (e[7] = v("span", null, "更新时间：", -1)),
                      S(u, {
                        type: "number",
                        modelValue: t.state.pollInterval,
                        "onUpdate:modelValue": e[3] || (e[3] = (f) => t.state.pollInterval = f)
                      }, null, 8, ["modelValue"]),
                      e[8] || (e[8] = v("span", null, "ms", -1))
                    ])) : F("", !0)
                  ])) : F("", !0)
                ], 2)) : (h(), y("div", Oi, G(t.state.variable), 1)),
                e[9] || (e[9] = v("div", { class: "bottom lowcode-scrollbar-thin" }, [
                  v("span", { class: "bottom-title" }, "用法"),
                  v("div", { class: "bottom-demo" }, [
                    v("p", null, " 你可以通过点击左侧区域绑定变量或处理函数，或者点击右边的铅笔按钮切换到输入模式，输入复杂的表达式。 "),
                    v("p", null, "输入框内默认支持变量，写法和 JS 写法完全一致。"),
                    v("div", null, "页面状态: this.state.xxx"),
                    v("div", null, '字符串: "string"'),
                    v("div", null, "数字: 123"),
                    v("div", null, "布尔值: true / false"),
                    v("div", null, '对象: { name: "张三" }'),
                    v("div", null, '数组: ["1", "2"]'),
                    v("div", null, "空值: null")
                  ])
                ], -1))
              ])
            ])
          ])
        ])
      ]),
      _: 1
    }, 8, ["visible", "onClose"])) : F("", !0)
  ], 64);
}
const Bi = /* @__PURE__ */ L(_i, [["render", Fi], ["__scopeId", "data-v-c0640a3b"]]), Ri = {
  components: {
    MetaCodeEditor: fo,
    VariableConfigurator: Bi
  },
  props: {
    buttonText: {
      type: String,
      default: "编辑代码"
    },
    modelValue: {
      type: [String, Object, Array],
      default: ""
    },
    title: {
      type: String,
      default: ""
    },
    language: {
      type: String,
      default: "json"
    },
    dataType: {
      type: String,
      default: ""
    },
    single: {
      type: Boolean,
      default: !1
    },
    showFormatBtn: {
      type: Boolean,
      default: !0
    },
    showErrorMsg: {
      type: Boolean,
      default: !0
    },
    name: {
      type: String,
      default: ""
    },
    bindValue: {
      type: [String, Number, Boolean, Array, Object, Date],
      default: ""
    }
  },
  setup(n, { emit: e }) {
    var d;
    const o = {
      STATE: "this.state.",
      JSEXPRESSION: "JSExpression"
    }, t = O(!1), l = `lowcode.${(d = Z().getCurrentSchema()) == null ? void 0 : d.componentName}.dataChange`, i = (c) => {
      const { publish: p } = $t();
      p({ topic: l, data: c });
    }, s = (c) => {
      var u, g;
      let p = c;
      if ((c == null ? void 0 : c.type) === o.JSEXPRESSION) {
        const m = Z().getSchema(), f = (u = c == null ? void 0 : c.value) == null ? void 0 : u.replace(o.STATE, "");
        p = (g = m == null ? void 0 : m.state) == null ? void 0 : g[f];
      }
      return p;
    }, r = (c) => {
      const p = s(c);
      i(p), e("update:modelValue", c);
    };
    return wt(() => {
      if (n.modelValue) {
        const c = s(n.modelValue);
        i(c);
      }
    }), ce(() => {
      var c;
      t.value = ((c = n.modelValue) == null ? void 0 : c.type) === o.JSEXPRESSION;
    }), {
      isBindingState: t,
      saveValue: r
    };
  }
}, Li = { class: "meta-related-components" }, $i = {
  key: 0,
  class: "meta-binding-state"
};
function ji(n, e, o, t, a, l) {
  var r;
  const i = _("meta-code-editor"), s = _("variable-configurator");
  return h(), y("div", Li, [
    t.isBindingState ? (h(), y("div", $i, G(`已绑定：${(r = o.modelValue) == null ? void 0 : r.value}`), 1)) : (h(), A(i, {
      key: 1,
      modelValue: o.modelValue,
      language: o.language,
      buttonText: o.buttonText,
      title: o.title,
      dataType: o.dataType,
      single: o.single,
      showFormatBtn: o.showFormatBtn,
      showErrorMsg: o.showErrorMsg,
      "onUpdate:modelValue": t.saveValue
    }, null, 8, ["modelValue", "language", "buttonText", "title", "dataType", "single", "showFormatBtn", "showErrorMsg", "onUpdate:modelValue"])),
    S(s, {
      modelValue: o.bindValue,
      name: o.name,
      "onUpdate:modelValue": t.saveValue
    }, null, 8, ["modelValue", "name", "onUpdate:modelValue"])
  ]);
}
const Kr = /* @__PURE__ */ L(Ri, [["render", ji], ["__scopeId", "data-v-18db0677"]]), qr = {
  __name: "RouterSelectConfigurator",
  props: {
    modelValue: {
      type: String,
      default: () => ""
    }
  },
  emits: ["update:modelValue"],
  setup(n, {
    emit: e
  }) {
    var m;
    const o = n, t = e, a = Ce({
      selected: ((m = o.modelValue) == null ? void 0 : m.name) ?? ""
    });
    nt(() => {
      var f;
      return (f = o.modelValue) == null ? void 0 : f.name;
    }, (f) => {
      a.selected = f ?? "";
    });
    const {
      pageSettingState: l,
      getPageList: i,
      STATIC_PAGE_GROUP_ID: s,
      COMMON_PAGE_GROUP_ID: r
    } = vo(), d = re(() => l.pages[s].data.concat(l.pages[r].data));
    wt(() => {
      Array.isArray(d.value) || i();
    });
    const c = (f) => {
      const {
        id: w,
        name: k,
        isPage: C,
        children: P
      } = f, z = {
        id: String(w),
        name: k,
        isPage: C,
        disabled: !C
      };
      return Array.isArray(P) && (z.children = P.map((V) => c(V))), z;
    }, p = (f) => f.id === l.ROOT_ID ? null : f.isPage ? S(_("SvgIcon"), {
      name: "text-page-common"
    }, null) : S(_("SvgIcon"), {
      name: "text-page-folder"
    }, null), u = re(() => ({
      data: c({
        children: d.value
      }).children,
      shrinkIcon: null,
      expandIcon: null,
      renderContent: (C, {
        node: P,
        data: z
      }) => S(j, null, [p(z), S("div", null, [P.label])])
    })), g = () => {
      t("update:modelValue", {
        name: a.selected
      });
    };
    return (f, w) => (h(), A(Re(ze), {
      modelValue: a.selected,
      "onUpdate:modelValue": w[0] || (w[0] = (k) => a.selected = k),
      "value-field": "id",
      "render-type": "tree",
      "tree-op": u.value,
      "text-field": "name",
      clearable: !0,
      "popper-class": "page-tree-select-dropdown",
      onChange: g
    }, null, 8, ["modelValue", "tree-op"]));
  }
}, Gi = {
  components: {
    TinySelect: ze,
    TinyOption: Zt,
    TinyTooltip: Ue,
    TinyOptionGroup: Do
  },
  props: {
    modelValue: {
      type: [String, Array],
      default: () => ""
    },
    multi: {
      type: Boolean,
      default: !1
    },
    groups: {
      type: Array,
      default: () => []
    },
    options: {
      type: Array,
      default: () => []
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const { locale: o } = ot.global, t = Ce({
      selected: n.modelValue ?? "",
      groupOptions: re(() => {
        if (n.groups && n.groups.length > 0) {
          const l = {};
          return n.options.forEach((i) => {
            l[i.value] = i;
          }), n.groups.map(({ label: i, content: s, disabled: r }) => ({ label: i, content: s.map((d) => l[d]), disabled: r }));
        } else
          return [];
      })
    }), a = () => {
      e("update:modelValue", t.selected);
    };
    return ce(() => {
      t.selected = n.modelValue ?? "";
    }), {
      state: t,
      locale: o,
      handleChange: a
    };
  }
};
function zi(n, e, o, t, a, l) {
  const i = _("tiny-option"), s = _("tiny-option-group"), r = _("tiny-select");
  return h(), A(r, {
    modelValue: t.state.selected,
    "onUpdate:modelValue": e[0] || (e[0] = (d) => t.state.selected = d),
    multiple: o.multi,
    "is-drop-inherit-width": !0,
    "show-alloption": !1,
    clearable: !0,
    "collapse-tags": "",
    onChange: t.handleChange
  }, {
    default: E(() => {
      var d;
      return [
        (d = o.groups) != null && d.length ? (h(!0), y(j, { key: 0 }, J(t.state.groupOptions, (c) => {
          var p;
          return h(), A(s, {
            key: c.label,
            label: ((p = c.label) == null ? void 0 : p[t.locale]) ?? c.label,
            disabled: c.disabled
          }, {
            default: E(() => [
              (h(!0), y(j, null, J(c.content, (u) => {
                var g, m;
                return h(), A(i, {
                  key: u.value ?? u,
                  label: ((g = u.label) == null ? void 0 : g[t.locale]) ?? u.label ?? u,
                  value: u.value ?? u,
                  title: ((m = u.label) == null ? void 0 : m[t.locale]) ?? u.label ?? u
                }, {
                  default: E(() => {
                    var f;
                    return [
                      (h(), A(Me(u.icon))),
                      v("span", null, G(((f = u.label) == null ? void 0 : f[t.locale]) ?? u.label ?? u), 1)
                    ];
                  }),
                  _: 2
                }, 1032, ["label", "value", "title"]);
              }), 128))
            ]),
            _: 2
          }, 1032, ["label", "disabled"]);
        }), 128)) : (h(!0), y(j, { key: 1 }, J(o.options, (c) => {
          var p, u;
          return h(), A(i, {
            key: c.value ?? c,
            label: ((p = c.label) == null ? void 0 : p[t.locale]) ?? c.label ?? c,
            value: c.value ?? c,
            disabled: c == null ? void 0 : c.disabled,
            title: ((u = c.label) == null ? void 0 : u[t.locale]) ?? c.label ?? c
          }, {
            default: E(() => {
              var g;
              return [
                (h(), A(Me(c.icon))),
                v("span", null, G(((g = c.label) == null ? void 0 : g[t.locale]) ?? c.label ?? c), 1)
              ];
            }),
            _: 2
          }, 1032, ["label", "value", "disabled", "title"]);
        }), 128))
      ];
    }),
    _: 1
  }, 8, ["modelValue", "multiple", "onChange"]);
}
const Zr = /* @__PURE__ */ L(Gi, [["render", zi], ["__scopeId", "data-v-f924eb29"]]), Xi = {
  components: {
    TinySearch: Tn,
    TinyPopover: Qt,
    IconClose: ao()
  },
  props: {
    modelValue: {
      type: String,
      default: ""
      // 默认值为空
    }
  },
  setup(n, { emit: e }) {
    const o = Ce({
      iconSearchValue: "",
      icon: {
        name: n.modelValue,
        component: n.modelValue && He[n.modelValue]()
      },
      defaultIcon: {
        name: n.modelValue,
        component: n.modelValue && He[n.modelValue]()
      }
    }), t = (d) => {
      o.icon = d, e("update:modelValue", d.name);
    }, a = (d) => {
      d.stopPropagation(), o.icon = o.defaultIcon, e("update:modelValue", "");
    }, l = () => Object.keys(He).map((d) => ({
      name: d,
      component: d && He[d]()
    })), i = O(l()), s = l();
    return {
      state: o,
      SvgIConsList: i,
      searchIcon: (d) => {
        d ? i.value = s.filter((c) => c.name.toLowerCase().includes(d.toLowerCase())) : i.value = s;
      },
      selectIcon: t,
      clearIcon: a
    };
  }
}, Hi = { class: "meta-select-icon" }, Wi = {
  "aria-haspopup": "true",
  "aria-expanded": "true",
  class: "lowcode-icon"
}, Yi = {
  key: 0,
  class: "icon-box"
}, Ji = ["title"], Ki = { class: "icon-manage-search" }, qi = { class: "lowcode-icon-list lowcode-scrollbar-thin" }, Zi = ["onClick"];
function Qi(n, e, o, t, a, l) {
  const i = _("icon-close"), s = _("tiny-search"), r = _("tiny-popover");
  return h(), y("div", Hi, [
    S(r, {
      "popper-class": "icon-popover",
      placement: "left"
    }, {
      reference: E(() => [
        v("div", Wi, [
          t.state.icon.name ? (h(), y("span", Yi, [
            (h(), A(Me(t.state.icon.component)))
          ])) : F("", !0),
          v("span", {
            class: "icon-text",
            title: t.state.icon.name
          }, G(t.state.icon.name || "请选择图标"), 9, Ji),
          t.state.icon.name ? (h(), A(i, {
            key: 1,
            class: "icon-close",
            onClick: e[0] || (e[0] = (d) => t.clearIcon(d))
          })) : F("", !0)
        ])
      ]),
      default: E(() => [
        v("div", null, [
          v("div", Ki, [
            S(s, {
              modelValue: t.state.iconSearchValue,
              "onUpdate:modelValue": [
                e[1] || (e[1] = (d) => t.state.iconSearchValue = d),
                t.searchIcon
              ],
              clearable: "",
              placeholder: "搜索图标"
            }, null, 8, ["modelValue", "onUpdate:modelValue"]),
            t.state.icon.name ? (h(), y("span", {
              key: 0,
              class: "icon-manage-clear",
              onClick: e[2] || (e[2] = (d) => t.clearIcon(d))
            }, "清空")) : F("", !0)
          ]),
          v("ul", qi, [
            (h(!0), y(j, null, J(t.SvgIConsList, (d) => (h(), y("li", {
              key: d,
              onClick: (c) => t.selectIcon(d)
            }, [
              (h(), A(Me(d.component)))
            ], 8, Zi))), 128))
          ])
        ])
      ]),
      _: 1
    })
  ]);
}
const Qr = /* @__PURE__ */ L(Xi, [["render", Qi], ["__scopeId", "data-v-522562bc"]]), er = {
  components: {
    NumberConfigurator: ai
  },
  props: {
    modelValue: {
      type: Number,
      default: 0
    },
    controls: {
      type: Boolean,
      default: !1
    },
    // 默认选中的单位
    selectedUnit: {
      type: String,
      default: "%"
    },
    // 是否显示单位
    showUnit: {
      type: Boolean,
      default: !1
    },
    disabled: {
      type: Boolean,
      default: !1
    }
  },
  setup(n, { emit: e }) {
    const o = O(n.modelValue), t = O(n.selectedUnit || "px");
    nt(
      () => n.modelValue,
      (r) => {
        o.value = r;
      }
    );
    const a = (r, d = t.value) => {
      e("update:modelValue", r, d);
    };
    return { value: o, unitRef: t, onNumberCompChange: (r) => {
      o.value = r, a(r);
    }, onUnitChange: (r) => {
      t.value = r, o.value = 0, a(0, r);
    }, onSliderStop: (r) => {
      a(Number(r.target.value));
    } };
  }
}, tr = { class: "slider-container" };
function nr(n, e, o, t, a, l) {
  const i = _("number-configurator");
  return h(), y("div", tr, [
    St(v("input", {
      "onUpdate:modelValue": e[0] || (e[0] = (s) => t.value = s),
      type: "range",
      onChange: e[1] || (e[1] = (...s) => t.onSliderStop && t.onSliderStop(...s))
    }, null, 544), [
      [wn, t.value]
    ]),
    S(i, {
      min: 0,
      max: 100,
      controls: o.controls,
      modelValue: t.value,
      selectedUnit: t.unitRef,
      showUnit: o.showUnit,
      disabled: o.disabled,
      unit: [
        { value: "px", label: "px" },
        { value: "%", label: "%" }
      ],
      onNumberChange: t.onNumberCompChange,
      onUnitChange: t.onUnitChange
    }, null, 8, ["controls", "modelValue", "selectedUnit", "showUnit", "disabled", "onNumberChange", "onUnitChange"])
  ]);
}
const es = /* @__PURE__ */ L(er, [["render", nr], ["__scopeId", "data-v-7245943f"]]), or = {
  components: {
    TinyPopover: Qt,
    IconHelpCircle: lo()
  },
  props: {
    slots: {
      type: Array,
      default: () => []
    }
  },
  setup(n) {
    const e = O([]);
    return ce(() => {
      var l;
      const t = {}, a = (l = X().getSchema()) == null ? void 0 : l.children;
      Array.isArray(a) && a.forEach((i) => {
        var s, r;
        if (i.componentName === "Template" && ((s = i.props) != null && s.slot)) {
          const d = ((r = i.props.slot) == null ? void 0 : r.name) || i.props.slot;
          t[d] = i.props.slot;
        }
      }), e.value = Object.keys(n.slots).map((i) => {
        const { label: s, description: r, params: d } = n.slots[i] || {};
        return {
          label: (s == null ? void 0 : s.zh_CN) || i,
          description: r == null ? void 0 : r.zh_CN,
          name: i,
          params: d,
          bind: !!t[i]
        };
      });
    }), {
      toggleSlot: ({ name: t = "default", params: a, bind: l }, i) => {
        var p;
        const s = X().getSchema(), { operateNode: r } = Z();
        if (l)
          gt().confirm({
            title: "提示",
            message: "关闭后插槽内的内容将被清空，是否继续？",
            exec: () => {
              e.value[i].bind = !e.value[i].bind;
              const u = s.children.filter(
                ({ componentName: g, props: m }) => {
                  var f;
                  return g !== "Template" || (m == null ? void 0 : m.slot) !== t && ((f = m == null ? void 0 : m.slot) == null ? void 0 : f.name) !== t;
                }
              );
              r({ type: "updateAttributes", id: s.id, value: { children: [...u] } });
            },
            cancel: () => {
            }
          });
        else {
          e.value[i].bind = !e.value[i].bind;
          const u = {
            componentName: "Template",
            props: {
              slot: {
                name: t
              }
            },
            children: []
          };
          a != null && a.length && (u.props.slot.params = a), r({
            type: "updateAttributes",
            id: s.id,
            value: { children: [...s.children || [], u] }
          });
        }
        const d = Vt().getMaterial(s.componentName), c = (p = d == null ? void 0 : d.configure) == null ? void 0 : p.isPopper;
        if (c) {
          const u = typeof c == "string" ? c : "modelValue";
          s.props[u] = !1, Jt(() => {
            s.props[u] = !0;
          });
        }
        Z().canvasApi.value.updateRect();
      },
      slotList: e
    };
  }
}, ar = { class: "slot-name" }, lr = { class: "slot-switch" }, ir = ["onClick"];
function rr(n, e, o, t, a, l) {
  const i = _("icon-help-circle"), s = _("tiny-popover");
  return h(), y("div", null, [
    (h(!0), y(j, null, J(t.slotList, (r, d) => (h(), y("div", {
      key: r.name,
      class: "slot-list"
    }, [
      v("div", ar, [
        v("span", null, G(r.label), 1),
        r.description ? (h(), A(s, {
          key: 0,
          placement: "top",
          trigger: "hover",
          content: r.description
        }, {
          reference: E(() => [
            v("div", null, [
              S(i, { class: "help-icon" })
            ])
          ]),
          _: 2
        }, 1032, ["content"])) : F("", !0)
      ]),
      v("div", lr, [
        v("div", {
          class: ve(["e__switch", { "e_is-checked": r.bind }])
        }, [
          v("span", {
            class: "e__switch-core",
            onClick: (c) => t.toggleSlot(r, d)
          }, null, 8, ir)
        ], 2)
      ])
    ]))), 128))
  ]);
}
const ts = /* @__PURE__ */ L(or, [["render", rr], ["__scopeId", "data-v-ea4b77f5"]]), sr = {
  components: {
    TinySwitch: qt
  },
  inheritAttrs: !1,
  props: {
    // switch 默认传递的值
    modelValue: {
      type: [String, null, Boolean],
      default: () => null
    }
  },
  setup(n, { emit: e }) {
    const o = O(n.modelValue);
    return ce(() => {
      o.value = n.modelValue;
    }), {
      change: (a) => {
        e("update:modelValue", a);
      },
      valueRef: o
    };
  }
};
function cr(n, e, o, t, a, l) {
  const i = _("tiny-switch");
  return h(), A(i, {
    modelValue: t.valueRef,
    "onUpdate:modelValue": e[0] || (e[0] = (s) => t.valueRef = s),
    onChange: t.change
  }, null, 8, ["modelValue", "onChange"]);
}
const ns = /* @__PURE__ */ L(sr, [["render", cr]]), os = {
  __name: "TableColumnsConfigurator",
  setup(n) {
    var s, r, d, c;
    const { children: e, componentName: o, props: t } = X().getSchema(), l = ((d = (r = (s = Vt().getConfigureMap()[o]) == null ? void 0 : s.nestingRule) == null ? void 0 : r.childWhitelist) == null ? void 0 : d[0]) || ((c = e == null ? void 0 : e[0]) == null ? void 0 : c.componentName), i = (p) => {
      if (!(p != null && p.length))
        return;
      const u = p.map((g) => ({
        componentName: l,
        props: { ...g }
      }));
      Z().operateNode({ type: "updateAttributes", id: X().getSchema().id, value: { children: u } });
    };
    return i(t == null ? void 0 : t.columns), (p, u) => (h(), A(jn, Lt(p.$attrs, { "onUpdate:modelValue": i }), null, 16));
  }
}, dr = { class: "tab-container" }, ur = { class: "tabs-wrap" }, pr = ["title"], fr = { key: 0 }, mr = ["title"], hr = { key: 0 }, gr = ["title"], vr = { key: 0 }, _r = {
  __name: "TabsGroupConfigurator",
  props: {
    // tab选中值，用于默认选中的tab
    modelValue: {
      type: String,
      default: ""
    },
    // tab选中值如果是对象，valueKey是对象内的某个key
    valueKey: {
      type: String,
      default: ""
    },
    // tabItem宽度
    labelWidth: {
      type: [Number, String],
      default: "63"
    },
    // tab的选项，如果选项中包含collapsed，则会折叠为下拉
    options: {
      type: Array,
      default: () => []
    }
  },
  emits: ["update:modelValue"],
  setup(n, { emit: e }) {
    const o = n, t = e, a = O(null), l = re(() => o.options.filter((f) => !f.collapsed)), i = re(() => o.options.filter((f) => f.collapsed)), s = O([]), r = O(null), d = O(!1), c = (f = !1) => `${parseInt(o.labelWidth, 10) + (f ? 15 : 0)}`, p = (f) => {
      r.value = s.value.find((w) => o.valueKey ? w.value[o.valueKey] === f : w.value === f) ?? r.value;
    }, u = (f) => i.value.filter(
      (w) => o.valueKey ? w.value[o.valueKey] !== f : w.value !== f
    ), g = (f) => {
      if (!f) {
        s.value = i.value.slice(1), r.value = i.value[0];
        return;
      }
      p(f), r.value && (s.value = u(f));
    };
    nt(
      () => o.modelValue,
      (f) => {
        a.value = f, i.value.length > 0 && g(f);
      },
      { immediate: !0, deep: !0 }
    );
    const m = (f) => {
      (o.valueKey ? a.value[o.valueKey] === f.value[o.valueKey] : a.value === f.value) || (d.value = !!f.collapsed, t("update:modelValue", f.value));
    };
    return (f, w) => {
      const k = _("svg-icon");
      return h(), y("div", dr, [
        v("div", ur, [
          S(Re(Kt), null, {
            default: E(() => [
              (h(!0), y(j, null, J(l.value, (C, P) => (h(), y("div", {
                class: "button-wrap",
                key: C.label || C.icon
              }, [
                S(Re(Et), {
                  style: Rt({ width: c() + "px" }),
                  class: ve(["tab-item", { selected: a.value === (n.valueKey ? C.value[n.valueKey] : C.value) }]),
                  onClick: xt((z) => m(C), ["stop"])
                }, {
                  default: E(() => [
                    v("span", {
                      class: "label-text",
                      title: C == null ? void 0 : C.content
                    }, [
                      C != null && C.label ? (h(), y("span", fr, G(C.label), 1)) : F("", !0),
                      C != null && C.icon ? (h(), A(k, {
                        key: 1,
                        name: C.icon,
                        class: "bem-Svg"
                      }, null, 8, ["name"])) : F("", !0)
                    ], 8, pr)
                  ]),
                  _: 2
                }, 1032, ["style", "class", "onClick"]),
                v("span", {
                  class: ve([{ "border-right": i.value.length || P < l.value.length - 1 }])
                }, null, 2)
              ]))), 128)),
              i.value.length ? (h(), A(Re(Ao), {
                key: 0,
                trigger: "click",
                class: ve([
                  "drop-down-options",
                  { selected: i.value.find((C) => a.value === (n.valueKey ? C.value[n.valueKey] : C.value)) }
                ]),
                style: Rt({ width: c(!0) + "px" })
              }, {
                dropdown: E(() => [
                  S(Re(ko), { "popper-class": "dropdown-menu-list" }, {
                    default: E(() => [
                      (h(!0), y(j, null, J(s.value, (C) => (h(), A(Re(Oo), {
                        key: C.label || C.icon,
                        onClick: xt((P) => m(C), ["stop"])
                      }, {
                        default: E(() => [
                          v("span", {
                            title: C == null ? void 0 : C.content
                          }, [
                            C != null && C.label ? (h(), y("span", vr, G(C.label), 1)) : F("", !0),
                            C != null && C.icon ? (h(), A(k, {
                              key: 1,
                              name: C.icon,
                              class: "bem-Svg"
                            }, null, 8, ["name"])) : F("", !0)
                          ], 8, gr)
                        ]),
                        _: 2
                      }, 1032, ["onClick"]))), 128))
                    ]),
                    _: 1
                  })
                ]),
                default: E(() => {
                  var C, P, z;
                  return [
                    v("span", {
                      class: "selected-option",
                      title: (C = r.value) == null ? void 0 : C.content,
                      onClick: w[0] || (w[0] = xt((V) => m(r.value), ["stop"]))
                    }, [
                      (P = r.value) != null && P.label ? (h(), y("span", hr, G(r.value.label), 1)) : F("", !0),
                      (z = r.value) != null && z.icon ? (h(), A(k, {
                        key: 1,
                        name: r.value.icon,
                        class: "bem-Svg"
                      }, null, 8, ["name"])) : F("", !0)
                    ], 8, mr)
                  ];
                }),
                _: 1
              }, 8, ["class", "style"])) : F("", !0)
            ]),
            _: 1
          })
        ])
      ]);
    };
  }
}, as = /* @__PURE__ */ L(_r, [["__scopeId", "data-v-202e273b"]]);
export {
  jn as ArrayItemConfigurator,
  Or as ButtonGroupConfigurator,
  Nr as CascaderConfigurator,
  Pr as CheckBoxConfigurator,
  Mr as CheckboxGroupConfigurator,
  rs as CodeConfigurator,
  Ur as CodeListConfigurator,
  Fr as CollectionConfigurator,
  Br as ColorConfigurator,
  Rr as ContainerConfigurator,
  Lr as DatePickerConfigurator,
  $r as GroupItemConfigurator,
  jr as HtmlAttributesConfigurator,
  Gr as HtmlTextConfigurator,
  ss as I18nConfigurator,
  Vl as InputConfigurator,
  zr as IpSectionConfigurator,
  Xr as JsSlotConfigurator,
  Hr as LayoutGridConfigurator,
  jn as MetaArrayItem,
  cs as MetaBindI18n,
  Bi as MetaBindVariable,
  Or as MetaButtonGroup,
  Nr as MetaCascader,
  Pr as MetaCheckBox,
  Mr as MetaCheckboxGroup,
  ds as MetaCodeEditor,
  Ur as MetaCodeEditorList,
  Fr as MetaCollection,
  Br as MetaColor,
  Rr as MetaContainer,
  Lr as MetaDatePicker,
  $r as MetaGroupItem,
  jr as MetaHtmlAttributes,
  Gr as MetaHtmlText,
  Vl as MetaInput,
  zr as MetaIpSection,
  Xr as MetaJsSlot,
  Hr as MetaLayoutGrid,
  ai as MetaNumber,
  ai as MetaNumeric,
  Wr as MetaRadio,
  Yr as MetaRadioGroup,
  Jr as MetaRelatedColumns,
  Kr as MetaRelatedEditor,
  Zr as MetaSelect,
  Qr as MetaSelectIcon,
  es as MetaSlider,
  ts as MetaSlot,
  ns as MetaSwitch,
  os as MetaTableColumns,
  ai as NumberConfigurator,
  Wr as RadioConfigurator,
  Yr as RadioGroupConfigurator,
  Jr as RelatedColumnsConfigurator,
  Kr as RelatedEditorConfigurator,
  qr as RouterSelectConfigurator,
  Zr as SelectConfigurator,
  Qr as SelectIconConfigurator,
  es as SliderConfigurator,
  ts as SlotConfigurator,
  ns as SwitchConfigurator,
  os as TableColumnsConfigurator,
  as as TabsGroupConfigurator,
  Bi as VariableConfigurator
};
//# sourceMappingURL=index.js.map
