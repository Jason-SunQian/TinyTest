import type { PropType } from 'vue';
export declare const pagerProps: {
    accurateJumper: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    appendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    currentPage: {
        type: NumberConstructor;
        default: () => number;
    };
    disabled: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    hideOnSinglePage: BooleanConstructor;
    isBeforePageChange: BooleanConstructor;
    layout: StringConstructor;
    mode: StringConstructor;
    nextText: StringConstructor;
    pageCount: NumberConstructor;
    pageSize: {
        type: NumberConstructor;
        default: () => number;
    };
    pageSizeText: {
        type: StringConstructor;
    };
    pageSizes: {
        type: PropType<number[]>;
    };
    pagerCount: {
        type: NumberConstructor;
        validator: (value: any) => boolean;
        default: () => number;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showTotalLoading: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customTotal: {
        type: (StringConstructor | BooleanConstructor)[];
        default: () => boolean;
    };
    popperClass: StringConstructor;
    prevText: StringConstructor;
    total: NumberConstructor;
    size: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    align: {
        type: StringConstructor;
        validator: (value: string) => boolean;
    };
    totalFixedLeft: {
        type: BooleanConstructor;
        default: undefined;
    };
    changeCompat: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
};
declare const _default: import("@vue/runtime-core").DefineComponent<{
    accurateJumper: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    appendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    currentPage: {
        type: NumberConstructor;
        default: () => number;
    };
    disabled: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    hideOnSinglePage: BooleanConstructor;
    isBeforePageChange: BooleanConstructor;
    layout: StringConstructor;
    mode: StringConstructor;
    nextText: StringConstructor;
    pageCount: NumberConstructor;
    pageSize: {
        type: NumberConstructor;
        default: () => number;
    };
    pageSizeText: {
        type: StringConstructor;
    };
    pageSizes: {
        type: PropType<number[]>;
    };
    pagerCount: {
        type: NumberConstructor;
        validator: (value: any) => boolean;
        default: () => number;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showTotalLoading: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customTotal: {
        type: (StringConstructor | BooleanConstructor)[];
        default: () => boolean;
    };
    popperClass: StringConstructor;
    prevText: StringConstructor;
    total: NumberConstructor;
    size: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    align: {
        type: StringConstructor;
        validator: (value: string) => boolean;
    };
    totalFixedLeft: {
        type: BooleanConstructor;
        default: undefined;
    };
    changeCompat: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    accurateJumper: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    appendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    currentPage: {
        type: NumberConstructor;
        default: () => number;
    };
    disabled: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    hideOnSinglePage: BooleanConstructor;
    isBeforePageChange: BooleanConstructor;
    layout: StringConstructor;
    mode: StringConstructor;
    nextText: StringConstructor;
    pageCount: NumberConstructor;
    pageSize: {
        type: NumberConstructor;
        default: () => number;
    };
    pageSizeText: {
        type: StringConstructor;
    };
    pageSizes: {
        type: PropType<number[]>;
    };
    pagerCount: {
        type: NumberConstructor;
        validator: (value: any) => boolean;
        default: () => number;
    };
    popperAppendToBody: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    showTotalLoading: {
        type: BooleanConstructor;
        default: () => boolean;
    };
    customTotal: {
        type: (StringConstructor | BooleanConstructor)[];
        default: () => boolean;
    };
    popperClass: StringConstructor;
    prevText: StringConstructor;
    total: NumberConstructor;
    size: {
        type: StringConstructor;
        default: string;
        validator: (value: string) => boolean;
    };
    align: {
        type: StringConstructor;
        validator: (value: string) => boolean;
    };
    totalFixedLeft: {
        type: BooleanConstructor;
        default: undefined;
    };
    changeCompat: {
        type: BooleanConstructor;
        default: boolean;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    disabled: boolean;
    size: string;
    currentPage: number;
    pageSize: number;
    appendToBody: boolean;
    tiny_mode_root: boolean;
    popperAppendToBody: boolean;
    changeCompat: boolean;
    accurateJumper: boolean;
    hideOnSinglePage: boolean;
    isBeforePageChange: boolean;
    pagerCount: number;
    showTotalLoading: boolean;
    customTotal: string | boolean;
    totalFixedLeft: boolean;
}, {}>;
export default _default;
