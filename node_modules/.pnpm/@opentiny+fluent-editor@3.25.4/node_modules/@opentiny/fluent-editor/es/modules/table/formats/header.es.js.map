{"version":3,"file":"header.es.js","sources":["../../../../../src/modules/table/formats/header.ts"],"sourcesContent":["import type TypeHeader from 'quill/formats/header'\r\nimport Quill from 'quill'\r\nimport { isNullOrUndefined } from '../../../config/editor.utils'\r\nimport { CELL_ATTRIBUTES, CELL_IDENTITY_KEYS } from '../table-config'\r\n\r\nconst OriginHeader = Quill.import('formats/header') as typeof TypeHeader\r\n// @dynamic\r\nclass Header extends OriginHeader {\r\n  static tagName: any\r\n  static blotName: string\r\n  domNode: any\r\n  replaceWith: any\r\n  parent: any\r\n  wrap: any\r\n  enforceAllowedChildren: any\r\n  uiNode: any\r\n  children: any\r\n  appendChild: any\r\n  remove: any\r\n  cache: Record<string, any>\r\n  scroll: any\r\n  static create(value) {\r\n    if (typeof value === 'string') {\r\n      value = { value }\r\n    }\r\n\r\n    const node = super.create(value.value)\r\n\r\n    CELL_IDENTITY_KEYS.forEach((key) => {\r\n      if (value[key]) {\r\n        node.setAttribute(`data-${key}`, value[key])\r\n      }\r\n    })\r\n\r\n    CELL_ATTRIBUTES.forEach((key) => {\r\n      if (value[key]) {\r\n        node.setAttribute(`data-${key}`, value[key])\r\n      }\r\n    })\r\n\r\n    return node\r\n  }\r\n\r\n  static formats(domNode) {\r\n    const formats: any = {}\r\n    formats.value = this.tagName.indexOf(domNode.tagName) + 1\r\n\r\n    return CELL_ATTRIBUTES.concat(CELL_IDENTITY_KEYS).reduce((tableFormats, attribute) => {\r\n      if (domNode.hasAttribute(`data-${attribute}`)) {\r\n        tableFormats[attribute] = domNode.getAttribute(`data-${attribute}`) || undefined\r\n      }\r\n      return tableFormats\r\n    }, formats)\r\n  }\r\n\r\n  format(name, value) {\r\n    // fix: 在标题处粘贴内容，会导致该粘贴内容的格式错误\r\n    if (Object.prototype.toString.call(value) === '[object Object]') {\r\n      value = value.value\r\n    }\r\n    const headerDom: any = Header.formats(this.domNode)\r\n    const { row, cell, rowspan, colspan } = headerDom\r\n    if (name === Header.blotName) {\r\n      if (value) {\r\n        super.format(name, {\r\n          value,\r\n          row,\r\n          cell,\r\n          rowspan,\r\n          colspan,\r\n        })\r\n      }\r\n      else {\r\n        if (row) {\r\n          this.replaceWith('table-cell-line', {\r\n            row,\r\n            cell,\r\n            rowspan,\r\n            colspan,\r\n          })\r\n        }\r\n        else {\r\n          super.format(name, value)\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      super.format(name, value)\r\n    }\r\n  }\r\n\r\n  optimize(_context) {\r\n    const { row, cell, rowspan, colspan } = Header.formats(this.domNode)\r\n\r\n    if (row && this.parent.statics.blotName !== 'table') {\r\n      this.wrap('table', {\r\n        row,\r\n        cell,\r\n        colspan,\r\n        rowspan,\r\n      })\r\n    }\r\n\r\n    // ShadowBlot optimize\r\n    this.enforceAllowedChildren()\r\n    if (!isNullOrUndefined(this.uiNode) && this.uiNode !== this.domNode.firstChild) {\r\n      this.domNode.insertBefore(this.uiNode, this.domNode.firstChild)\r\n    }\r\n    if (this.children.length === 0) {\r\n      if (!isNullOrUndefined(this.statics.defaultChild)) {\r\n        const child = this.scroll.create(this.statics.defaultChild.blotName)\r\n        this.appendChild(child)\r\n        // TODO double check if necessary\r\n        // child.optimize(context);\r\n      }\r\n      else {\r\n        this.remove()\r\n      }\r\n    }\r\n    // Block optimize\r\n    this.cache = {}\r\n  }\r\n}\r\n\r\nHeader.blotName = 'header'\r\nHeader.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6']\r\n\r\nexport default Header\r\n"],"names":[],"mappings":";;;AAKA,MAAM,eAAe,MAAM,OAAO,gBAAgB;AAElD,MAAM,eAAe,aAAa;AAAA,EAchC,OAAO,OAAO,OAAO;AACf,QAAA,OAAO,UAAU,UAAU;AAC7B,cAAQ,EAAE,MAAM;AAAA,IAAA;AAGlB,UAAM,OAAO,MAAM,OAAO,MAAM,KAAK;AAElB,uBAAA,QAAQ,CAAC,QAAQ;AAC9B,UAAA,MAAM,GAAG,GAAG;AACd,aAAK,aAAa,QAAQ,GAAG,IAAI,MAAM,GAAG,CAAC;AAAA,MAAA;AAAA,IAC7C,CACD;AAEe,oBAAA,QAAQ,CAAC,QAAQ;AAC3B,UAAA,MAAM,GAAG,GAAG;AACd,aAAK,aAAa,QAAQ,GAAG,IAAI,MAAM,GAAG,CAAC;AAAA,MAAA;AAAA,IAC7C,CACD;AAEM,WAAA;AAAA,EAAA;AAAA,EAGT,OAAO,QAAQ,SAAS;AACtB,UAAM,UAAe,CAAC;AACtB,YAAQ,QAAQ,KAAK,QAAQ,QAAQ,QAAQ,OAAO,IAAI;AAExD,WAAO,gBAAgB,OAAO,kBAAkB,EAAE,OAAO,CAAC,cAAc,cAAc;AACpF,UAAI,QAAQ,aAAa,QAAQ,SAAS,EAAE,GAAG;AAC7C,qBAAa,SAAS,IAAI,QAAQ,aAAa,QAAQ,SAAS,EAAE,KAAK;AAAA,MAAA;AAElE,aAAA;AAAA,OACN,OAAO;AAAA,EAAA;AAAA,EAGZ,OAAO,MAAM,OAAO;AAElB,QAAI,OAAO,UAAU,SAAS,KAAK,KAAK,MAAM,mBAAmB;AAC/D,cAAQ,MAAM;AAAA,IAAA;AAEhB,UAAM,YAAiB,OAAO,QAAQ,KAAK,OAAO;AAClD,UAAM,EAAE,KAAK,MAAM,SAAS,QAAY,IAAA;AACpC,QAAA,SAAS,OAAO,UAAU;AAC5B,UAAI,OAAO;AACT,cAAM,OAAO,MAAM;AAAA,UACjB;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QAAA,CACD;AAAA,MAAA,OAEE;AACH,YAAI,KAAK;AACP,eAAK,YAAY,mBAAmB;AAAA,YAClC;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UAAA,CACD;AAAA,QAAA,OAEE;AACG,gBAAA,OAAO,MAAM,KAAK;AAAA,QAAA;AAAA,MAC1B;AAAA,IACF,OAEG;AACG,YAAA,OAAO,MAAM,KAAK;AAAA,IAAA;AAAA,EAC1B;AAAA,EAGF,SAAS,UAAU;AACX,UAAA,EAAE,KAAK,MAAM,SAAS,QAAY,IAAA,OAAO,QAAQ,KAAK,OAAO;AAEnE,QAAI,OAAO,KAAK,OAAO,QAAQ,aAAa,SAAS;AACnD,WAAK,KAAK,SAAS;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,CACD;AAAA,IAAA;AAIH,SAAK,uBAAuB;AACxB,QAAA,CAAC,kBAAkB,KAAK,MAAM,KAAK,KAAK,WAAW,KAAK,QAAQ,YAAY;AAC9E,WAAK,QAAQ,aAAa,KAAK,QAAQ,KAAK,QAAQ,UAAU;AAAA,IAAA;AAE5D,QAAA,KAAK,SAAS,WAAW,GAAG;AAC9B,UAAI,CAAC,kBAAkB,KAAK,QAAQ,YAAY,GAAG;AACjD,cAAM,QAAQ,KAAK,OAAO,OAAO,KAAK,QAAQ,aAAa,QAAQ;AACnE,aAAK,YAAY,KAAK;AAAA,MAAA,OAInB;AACH,aAAK,OAAO;AAAA,MAAA;AAAA,IACd;AAGF,SAAK,QAAQ,CAAC;AAAA,EAAA;AAElB;AAEA,OAAO,WAAW;AAClB,OAAO,UAAU,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;"}