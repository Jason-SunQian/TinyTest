{"version":3,"file":"toolbar-tip.cjs.js","sources":["../../../../src/modules/toolbar/toolbar-tip.ts"],"sourcesContent":["import type { Constructor } from '../../config/types'\r\nimport type FluentEditor from '../../fluent-editor'\r\nimport { CHANGE_LANGUAGE_EVENT } from '../../config'\r\n\r\nexport function generateToolbarTip(QuillToolbarTip: Constructor) {\r\n  return class extends QuillToolbarTip {\r\n    constructor(public quill: FluentEditor, options: Partial<Record<string, any>>) {\r\n      if (!options?.tipTextMap) {\r\n        options.tipTextMap = {}\r\n      }\r\n      super(quill, options)\r\n\r\n      this.quill.emitter.on(CHANGE_LANGUAGE_EVENT, () => {\r\n        this.destroyAllTips()\r\n        this.options = this.resolveOptions(options)\r\n        this.createToolbarTip()\r\n      })\r\n    }\r\n\r\n    resolveOptions(options: Partial<Record<string, any>>): Record<string, any> {\r\n      const result = super.resolveOptions(options)\r\n      if (!this.quill.lang) return result\r\n      const btnTips = [\r\n        'bold',\r\n        'italic',\r\n        'strike',\r\n        'underline',\r\n        'undo',\r\n        'redo',\r\n        'clean',\r\n        'link',\r\n        'divider',\r\n        'blockquote',\r\n        'code',\r\n        'image',\r\n        'file',\r\n        'emoji',\r\n        'video',\r\n        'screenshot',\r\n        'better-table',\r\n        'code-block',\r\n        'formula',\r\n        'format-painter',\r\n        'header-list',\r\n      ].reduce((map, name) => {\r\n        map[name] = this.quill.getLangText(name)\r\n        return map\r\n      }, {} as Record<string, string>)\r\n      const selectTips = [\r\n        'color',\r\n        'background',\r\n        'font',\r\n        'size',\r\n        'lineheight',\r\n      ].reduce((map, name) => {\r\n        map[name] = {\r\n          onShow: () => {\r\n            return this.quill.getLangText(name)\r\n          },\r\n        }\r\n        return map\r\n      }, {})\r\n      const valueControlTips = [\r\n        'list',\r\n        'align',\r\n        'script',\r\n        'indent',\r\n        'header',\r\n        'direction',\r\n      ].reduce((map, name) => {\r\n        map[name] = {\r\n          onShow: (target: HTMLElement, value: string) => {\r\n            if (name === 'direction') {\r\n              value = target.classList.contains('ql-active') ? 'rtl' : 'ltr'\r\n            }\r\n            if (!value) {\r\n              if (name === 'align') {\r\n                value = 'left'\r\n              }\r\n              else if (name === 'header') {\r\n                value = 'normal'\r\n              }\r\n            }\r\n            return this.quill.getLangText(`${name}-${value}`)\r\n          },\r\n        }\r\n        return map\r\n      }, {})\r\n      const textMap = {\r\n        ...btnTips,\r\n        ...valueControlTips,\r\n        ...selectTips,\r\n        fullscreen: {\r\n          onShow: () => {\r\n            return this.quill.getLangText(this.quill.isFullscreen ? 'exit-fullscreen' : 'fullscreen')\r\n          },\r\n        },\r\n      }\r\n      return {\r\n        ...result,\r\n        tipTextMap: {\r\n          ...textMap,\r\n          ...options.tipTextMap,\r\n        },\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["CHANGE_LANGUAGE_EVENT"],"mappings":";;;;AAIO,SAAS,mBAAmB,iBAA8B;AAC/D,SAAO,cAAc,gBAAgB;AAAA,IACnC,YAAmB,OAAqB,SAAuC;AACzE,UAAA,EAAC,mCAAS,aAAY;AACxB,gBAAQ,aAAa,CAAC;AAAA,MAAA;AAExB,YAAM,OAAO,OAAO;AAJH,WAAA,QAAA;AAMjB,WAAK,MAAM,QAAQ,GAAGA,cAAA,uBAAuB,MAAM;AACjD,aAAK,eAAe;AACf,aAAA,UAAU,KAAK,eAAe,OAAO;AAC1C,aAAK,iBAAiB;AAAA,MAAA,CACvB;AAAA,IAAA;AAAA,IAGH,eAAe,SAA4D;AACnE,YAAA,SAAS,MAAM,eAAe,OAAO;AAC3C,UAAI,CAAC,KAAK,MAAM,KAAa,QAAA;AAC7B,YAAM,UAAU;AAAA,QACd;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,EACA,OAAO,CAAC,KAAK,SAAS;AACtB,YAAI,IAAI,IAAI,KAAK,MAAM,YAAY,IAAI;AAChC,eAAA;AAAA,MACT,GAAG,EAA4B;AAC/B,YAAM,aAAa;AAAA,QACjB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,EACA,OAAO,CAAC,KAAK,SAAS;AACtB,YAAI,IAAI,IAAI;AAAA,UACV,QAAQ,MAAM;AACL,mBAAA,KAAK,MAAM,YAAY,IAAI;AAAA,UAAA;AAAA,QAEtC;AACO,eAAA;AAAA,MACT,GAAG,EAAE;AACL,YAAM,mBAAmB;AAAA,QACvB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MAAA,EACA,OAAO,CAAC,KAAK,SAAS;AACtB,YAAI,IAAI,IAAI;AAAA,UACV,QAAQ,CAAC,QAAqB,UAAkB;AAC9C,gBAAI,SAAS,aAAa;AACxB,sBAAQ,OAAO,UAAU,SAAS,WAAW,IAAI,QAAQ;AAAA,YAAA;AAE3D,gBAAI,CAAC,OAAO;AACV,kBAAI,SAAS,SAAS;AACZ,wBAAA;AAAA,cAAA,WAED,SAAS,UAAU;AAClB,wBAAA;AAAA,cAAA;AAAA,YACV;AAEF,mBAAO,KAAK,MAAM,YAAY,GAAG,IAAI,IAAI,KAAK,EAAE;AAAA,UAAA;AAAA,QAEpD;AACO,eAAA;AAAA,MACT,GAAG,EAAE;AACL,YAAM,UAAU;AAAA,QACd,GAAG;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,YAAY;AAAA,UACV,QAAQ,MAAM;AACZ,mBAAO,KAAK,MAAM,YAAY,KAAK,MAAM,eAAe,oBAAoB,YAAY;AAAA,UAAA;AAAA,QAC1F;AAAA,MAEJ;AACO,aAAA;AAAA,QACL,GAAG;AAAA,QACH,YAAY;AAAA,UACV,GAAG;AAAA,UACH,GAAG,QAAQ;AAAA,QAAA;AAAA,MAEf;AAAA,IAAA;AAAA,EAEJ;AACF;;"}