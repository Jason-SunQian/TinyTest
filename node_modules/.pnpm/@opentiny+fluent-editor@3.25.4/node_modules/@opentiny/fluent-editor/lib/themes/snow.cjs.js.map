{"version":3,"file":"snow.cjs.js","sources":["../../../src/themes/snow.ts"],"sourcesContent":["import type { Module, TypeParchment } from '../core/fluent-editor'\r\nimport { getListValue, inputFile } from '../config'\r\nimport FluentEditor from '../core/fluent-editor'\r\nimport { CustomImageSpec } from '../modules/custom-image/specs/CustomImageSpec'\r\nimport BetterTable from '../modules/table/better-table'\r\nimport { FormatPainter } from '../tools/format-painter'\r\nimport { fullscreenHandler } from '../tools/fullscreen'\r\nimport { Screenshot } from '../tools/screenshot'\r\n\r\nconst SnowTheme = FluentEditor.imports['themes/snow'] as typeof Module\r\n\r\nSnowTheme.DEFAULTS = {\r\n  modules: {\r\n    'i18n': true,\r\n    'keyboard': {\r\n      bindings: {\r\n        ...BetterTable.keyboardBindings,\r\n      },\r\n    },\r\n    'toolbar': {\r\n      handlers: {\r\n        ...(SnowTheme.DEFAULTS as Record<string, any>).modules.toolbar.handlers,\r\n        'formula': function () {\r\n          if (!this.quill.isEnabled()) return\r\n          const mathlive = this.quill.getModule('mathlive')\r\n          if (!mathlive) {\r\n            this.quill.theme.tooltip.edit('formula')\r\n          }\r\n          else {\r\n            mathlive.createDialog()\r\n          }\r\n        },\r\n        'undo': function () {\r\n          this.quill.history.undo()\r\n        },\r\n        'redo': function () {\r\n          this.quill.history.redo()\r\n        },\r\n        'better-table': function () {\r\n          this.quill.getModule('better-table').insertTable(3, 3)\r\n        },\r\n        'file': function () {\r\n          const accept = this.quill.options?.uploadOption?.fileAccept\r\n          inputFile.call(this, 'file', accept)\r\n        },\r\n        'image': function () {\r\n          const accept = this.quill.options?.uploadOption?.imageAccept\r\n          inputFile.call(this, 'image', accept)\r\n        },\r\n        'emoji': function () {},\r\n        'fullscreen': fullscreenHandler,\r\n        'list': function (value) {\r\n          const range = this.quill.getSelection()\r\n          const formats = this.quill.getFormat(range)\r\n          const preListValue = Array.isArray(formats.list) ? formats.list[0]?.value : formats.list?.value\r\n          const curListValue = getListValue(value, preListValue)\r\n          // 如果设置list的选区中有表格，判断第一个table-col位置，将表格前的内容设置为list格式\r\n          const lines = this.quill.getLines(range.index, range.length)\r\n          const tableCols = lines.filter(line => line.statics.blotName === 'table-col' && !line.prev)\r\n          if (tableCols.length) {\r\n            let start = range.index\r\n            // 遍历table-col群组，以之获取表格，将表格前选区设置为对应list格式\r\n            tableCols.forEach((item, index) => {\r\n              const table = item.domNode.closest('table.quill-better-table')\r\n              const tableBlot = FluentEditor.find(table) as TypeParchment.Blot\r\n              const tableLength = tableBlot.length()\r\n              const tableStart = this.quill.getIndex(item)\r\n              const tableEnd = tableStart + tableLength\r\n              const beforeTableRangeLength = tableStart - start\r\n              // 在表格前设置列表\r\n              this.quill.setSelection(start, beforeTableRangeLength, FluentEditor.sources.SILENT)\r\n              this.quill.format('list', curListValue, FluentEditor.sources.USER)\r\n              table.parentNode.classList.remove('quill-better-table-selected')\r\n              // 当前表格末尾为下一个选取的开始\r\n              start = tableEnd\r\n              if (index === tableCols.length - 1) {\r\n                // 将最后一个表格之后所有选区内容设置list格式\r\n                this.quill.setSelection(tableEnd, range.index + range.length - tableEnd)\r\n                this.quill.format('list', curListValue, FluentEditor.sources.USER)\r\n              }\r\n            })\r\n          }\r\n          else {\r\n            this.quill.format('list', curListValue, FluentEditor.sources.USER)\r\n          }\r\n        },\r\n        [FormatPainter.toolName]: FormatPainter,\r\n        [Screenshot.toolName]: Screenshot,\r\n        'lineheight': function (value) {\r\n          this.quill.format('line-height', value)\r\n        },\r\n        'divider': function () {\r\n          const range = this.quill.getSelection(true)\r\n          this.quill.insertText(range.index, '\\n', FluentEditor.sources.USER)\r\n          this.quill.insertEmbed(range.index + 1, 'divider', true, FluentEditor.sources.USER)\r\n          this.quill.setSelection(range.index + 2, FluentEditor.sources.SILENT)\r\n        },\r\n      },\r\n    },\r\n    'better-table': {\r\n      operationMenu: {\r\n        color: true,\r\n      },\r\n    },\r\n    'image': {\r\n      specs: [CustomImageSpec],\r\n      overlay: {\r\n        style: {\r\n          border: '1px dashed rgb(68, 68, 68)',\r\n        },\r\n      },\r\n      align: {\r\n        icons: {\r\n          left: '<i class=\"icon-text-align-left\"></i>',\r\n          center: '<i class=\"icon-text-align-center\"></i>',\r\n          right: '<i class=\"icon-text-align-right\"></i>',\r\n        },\r\n      },\r\n    },\r\n  },\r\n}\r\n\r\nexport default SnowTheme\r\n"],"names":["FluentEditor","BetterTable","inputFile","fullscreenHandler","getListValue","index","FormatPainter","Screenshot","CustomImageSpec"],"mappings":"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"}