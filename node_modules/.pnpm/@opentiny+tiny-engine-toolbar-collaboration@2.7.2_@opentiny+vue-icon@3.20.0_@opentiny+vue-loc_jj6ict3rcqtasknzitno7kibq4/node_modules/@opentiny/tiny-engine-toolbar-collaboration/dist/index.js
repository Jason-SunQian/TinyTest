import "./style.css";
import { useLayout as _, callEntry as L } from "@opentiny/tiny-engine-meta-register";
import { resolveComponent as p, createBlock as b, openBlock as n, withCtx as i, createElementVNode as s, createVNode as g, createElementBlock as l, Fragment as f, renderList as v, toDisplayString as u, createCommentVNode as y, reactive as S, watchEffect as w } from "vue";
import { Popover as B } from "@opentiny/vue";
import { ToolbarBase as h } from "@opentiny/tiny-engine-common";
const E = {
  id: "engine.toolbars.collaboration",
  type: "toolbars",
  title: "collaboration",
  options: {
    icon: {
      default: "team-collaboration"
    },
    renderType: "slot",
    collapsed: !0
  }
}, C = (r, o) => {
  const e = r.__vccOpts || r;
  for (const [t, d] of o)
    e[t] = d;
  return e;
}, D = {
  components: {
    TinyPopover: B,
    ToolbarBase: h
  },
  props: {
    options: {
      type: Object,
      default: () => ({})
    }
  },
  setup() {
    const {
      layoutState: r
    } = _(), o = S({
      outsideVisible: !1,
      insideVisible: !1,
      url: "",
      userLists: []
    });
    w(() => {
      var t;
      o.url = "img/defaultAvator.png", o.userLists = [{
        pageName: "当前页",
        users: [{
          userHead: "img/defaultAvator.png",
          userName: (t = r.pageStatus.data) == null ? void 0 : t.username,
          status: "编辑"
        }]
      }];
    });
    const e = L(() => !0, {
      metaData: {
        id: "engine.toolbars.collaboration.Main.isSingle"
      },
      ctx: () => ({
        layoutState: r,
        state: o,
        isSingle: e,
        useLayout: _,
        ToolbarBase: h
      })
    });
    return {
      state: o,
      isSingle: e
    };
  }
}, T = { class: "collaboration-container" }, A = { class: "collaborators-list" }, H = { class: "page-name" }, O = ["src"], P = { class: "user-item-name" }, j = { class: "user-item-status" }, F = { class: "icon collaboration-wrap" }, M = { class: "icon-hides" }, U = { key: 0 };
function q(r, o, e, t, d, G) {
  const V = p("svg-icon"), m = p("tiny-popover"), k = p("toolbar-base");
  return n(), b(k, { options: e.options }, {
    default: i(() => [
      s("span", T, [
        g(m, {
          modelValue: t.state.outsideVisible,
          "onUpdate:modelValue": o[0] || (o[0] = (a) => t.state.outsideVisible = a),
          trigger: "click",
          width: "260",
          "append-to-body": "",
          "popper-class": "toolbar-right-popover collaborator"
        }, {
          reference: i(() => [
            g(m, {
              class: "toolbar-right-user",
              trigger: "hover",
              "open-delay": 1e3,
              "popper-class": "collaboration-popover toolbar-right-popover",
              "append-to-body": "",
              content: `该项目共有 ${t.state.userLists.length} 位用户在编辑`
            }, {
              reference: i(() => {
                var a;
                return [
                  s("span", F, [
                    s("span", M, [
                      t.state.url ? (n(), b(V, {
                        key: 0,
                        name: e.options.icon.default || e.options.icon
                      }, null, 8, ["name"])) : y("", !0)
                    ]),
                    (a = e.options) != null && a.collapsed ? (n(), l("span", U, "多人协作")) : y("", !0)
                  ])
                ];
              }),
              _: 1
            }, 8, ["content"])
          ]),
          default: i(() => [
            s("div", A, [
              (n(!0), l(f, null, v(t.state.userLists, (a, N) => (n(), l("div", {
                key: N,
                class: "collaborators-list-group"
              }, [
                s("span", H, u(a.pageName), 1),
                s("ul", null, [
                  (n(!0), l(f, null, v(a.users, (c, x) => (n(), l("li", {
                    key: x,
                    class: "user-item"
                  }, [
                    s("img", {
                      class: "user-item-head",
                      src: c.userHead,
                      alt: ""
                    }, null, 8, O),
                    s("span", P, u(c.userName), 1),
                    s("span", j, "正在" + u(c.status), 1)
                  ]))), 128))
                ])
              ]))), 128))
            ])
          ]),
          _: 1
        }, 8, ["modelValue"])
      ])
    ]),
    _: 1
  }, 8, ["options"]);
}
const z = /* @__PURE__ */ C(D, [["render", q], ["__scopeId", "data-v-df18a89e"]]), X = {
  ...E,
  entry: z
};
export {
  X as default
};
//# sourceMappingURL=index.js.map
