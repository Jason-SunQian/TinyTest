import { b as v } from "./index3.js";
import { computed as f, Fragment as d, ref as h, watch as p } from "vue";
function b(l, i) {
  const u = f(() => {
    const t = (l == null ? void 0 : l()) || [];
    let o = 0;
    const s = (e) => typeof e == "symbol" || e == null ? e : `fg${o}-${e}`;
    return t.map((e) => {
      if (e.type === d && Array.isArray(e.children)) {
        for (const r of e.children)
          r && typeof r == "object" && "key" in r && (r.key = s(r.key));
        return o++, e.children;
      }
      return e;
    }).flat();
  }), c = f(() => i ? u.value.length : 1), m = f(() => u.value.slice(0, c.value)), n = h([]), a = (t, o) => {
    const s = v(t);
    s instanceof Element && (n.value[o] = s);
  };
  return p(
    c,
    (t) => {
      n.value.length = t;
    },
    { flush: "post" }
  ), {
    vnodes: m,
    ref: f(() => n.value.at(0)),
    refs: n,
    setRef: (t) => a(t, 0),
    setRefs: a
  };
}
export {
  b as u
};
