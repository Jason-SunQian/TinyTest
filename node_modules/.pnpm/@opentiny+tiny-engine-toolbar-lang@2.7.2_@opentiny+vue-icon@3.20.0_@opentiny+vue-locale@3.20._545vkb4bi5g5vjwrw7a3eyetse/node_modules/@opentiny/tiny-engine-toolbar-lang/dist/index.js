import "./style.css";
import { callEntry as h } from "@opentiny/tiny-engine-meta-register";
import { getCurrentInstance as E, onMounted as B, nextTick as N, getCurrentScope as P, onScopeDispose as S, ref as r, watch as T, resolveComponent as L, createBlock as x, openBlock as Q } from "vue";
import { ToolbarBase as d } from "@opentiny/tiny-engine-common";
import { constants as b } from "@opentiny/tiny-engine-utils";
const k = {
  id: "engine.toolbars.lang",
  type: "toolbars",
  title: "lang",
  options: {
    icon: {
      default: "cn-en"
    },
    renderType: "icon",
    collapsed: !0
  }
};
var p;
const y = typeof window < "u";
y && ((p = window == null ? void 0 : window.navigator) != null && p.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function A(e) {
  return e;
}
function D(e) {
  return P() ? (S(e), !0) : !1;
}
function I(e, n = !0) {
  E() ? B(e) : n ? e() : N(e);
}
const M = y ? window : void 0;
function j(e, n = !1) {
  const t = r(), a = () => t.value = !!e();
  return a(), I(a, n), t;
}
const f = (e) => {
  const {
    name: n,
    window: t = M
  } = e, a = j(() => t && "BroadcastChannel" in t), s = r(!1), o = r(), u = r(), i = r(null), w = (l) => {
    o.value && o.value.postMessage(l);
  }, c = () => {
    o.value && o.value.close(), s.value = !0;
  };
  return a.value && I(() => {
    i.value = null, o.value = new BroadcastChannel(n), o.value.addEventListener("message", (l) => {
      u.value = l.data;
    }, { passive: !0 }), o.value.addEventListener("messageerror", (l) => {
      i.value = l;
    }, { passive: !0 }), o.value.addEventListener("close", () => {
      s.value = !0;
    });
  }), D(() => {
    c();
  }), {
    isSupported: a,
    channel: o,
    data: u,
    post: w,
    close: c,
    error: i,
    isClosed: s
  };
}, v = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, _ = "__vueuse_ssr_handlers__";
v[_] = v[_] || {};
var g;
(function(e) {
  e.UP = "UP", e.RIGHT = "RIGHT", e.DOWN = "DOWN", e.LEFT = "LEFT", e.NONE = "NONE";
})(g || (g = {}));
var H = Object.defineProperty, O = Object.getOwnPropertySymbols, R = Object.prototype.hasOwnProperty, U = Object.prototype.propertyIsEnumerable, m = (e, n, t) => n in e ? H(e, n, { enumerable: !0, configurable: !0, writable: !0, value: t }) : e[n] = t, W = (e, n) => {
  for (var t in n || (n = {}))
    R.call(n, t) && m(e, t, n[t]);
  if (O)
    for (var t of O(n))
      U.call(n, t) && m(e, t, n[t]);
  return e;
};
const z = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
W({
  linear: A
}, z);
const {
  BROADCAST_CHANNEL: C
} = b, F = {
  components: {
    ToolbarBase: d
  },
  props: {
    langChannel: {
      type: String,
      default: C.CanvasLang
    },
    options: {
      type: Object,
      default: () => ({})
    }
  },
  setup(e) {
    const n = r("zh_CN"), {
      post: t,
      data: a
    } = f({
      name: e.langChannel
    });
    T(a, () => {
      n.value = a.value;
    });
    const s = [{
      value: "zh_CN",
      label: "中文"
    }, {
      value: "en_US",
      label: "English"
    }], o = h(() => {
      n.value = n.value === s[0].value ? s[1].value : s[0].value, t(n.value);
    }, {
      metaData: {
        id: "engine.toolbars.lang.Main.changeLang"
      },
      ctx: () => ({
        props: e,
        langVal: n,
        post: t,
        data: a,
        langOptions: s,
        changeLang: o,
        useBroadcastChannel: f,
        ToolbarBase: d,
        constants: b,
        BROADCAST_CHANNEL: C
      })
    });
    return {
      langOptions: s,
      langVal: n,
      changeLang: o
    };
  }
}, G = (e, n) => {
  const t = e.__vccOpts || e;
  for (const [a, s] of n)
    t[a] = s;
  return t;
};
function V(e, n, t, a, s, o) {
  const u = L("toolbar-base");
  return Q(), x(u, {
    content: "中英文切换",
    icon: t.options.icon.default || t.options.icon,
    options: t.options,
    onClickApi: a.changeLang
  }, null, 8, ["icon", "options", "onClickApi"]);
}
const K = /* @__PURE__ */ G(F, [["render", V], ["__scopeId", "data-v-10c1f968"]]), $ = {
  ...k,
  entry: K
};
export {
  $ as default
};
//# sourceMappingURL=index.js.map
