import type { IModalApi } from '@opentiny/vue-renderless/types/modal.type';
declare const _default: import("@vue/runtime-core").DefineComponent<Readonly<{
    top?: any;
    width?: any;
    height?: any;
    resize?: any;
    type?: any;
    title?: any;
    id?: any;
    message?: any;
    fullscreen?: any;
    zIndex?: any;
    mask?: any;
    slots?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    tiny_mcp_config?: any;
    modelValue?: any;
    duration?: any;
    showClose?: any;
    showHeader?: any;
    showFooter?: any;
    maskClosable?: any;
    lockScroll?: any;
    beforeClose?: any;
    events?: any;
    minHeight?: any;
    minWidth?: any;
    status?: any;
    isFormReset?: any;
    vSize?: any;
    animat?: any;
    marginSize?: any;
    messageClosable?: any;
    escClosable?: any;
    lockView?: any;
    confirmContent?: any;
    cancelContent?: any;
    confirmBtnProps?: any;
    cancelBtnProps?: any;
    footerDragable?: any;
}>, IModalApi, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, ("cancel" | "close" | "show" | "hide" | "update:modelValue" | "confirm" | "custom-mousedown" | "custom-mousemove" | "custom-mouseup")[], "cancel" | "close" | "show" | "hide" | "update:modelValue" | "confirm" | "custom-mousedown" | "custom-mousemove" | "custom-mouseup", import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<Readonly<{
    top?: any;
    width?: any;
    height?: any;
    resize?: any;
    type?: any;
    title?: any;
    id?: any;
    message?: any;
    fullscreen?: any;
    zIndex?: any;
    mask?: any;
    slots?: any;
    tiny_mode?: any;
    tiny_mode_root?: any;
    tiny_template?: any;
    tiny_renderless?: any;
    _constants?: any;
    tiny_theme?: any;
    tiny_chart_theme?: any;
    tiny_mcp_config?: any;
    modelValue?: any;
    duration?: any;
    showClose?: any;
    showHeader?: any;
    showFooter?: any;
    maskClosable?: any;
    lockScroll?: any;
    beforeClose?: any;
    events?: any;
    minHeight?: any;
    minWidth?: any;
    status?: any;
    isFormReset?: any;
    vSize?: any;
    animat?: any;
    marginSize?: any;
    messageClosable?: any;
    escClosable?: any;
    lockView?: any;
    confirmContent?: any;
    cancelContent?: any;
    confirmBtnProps?: any;
    cancelBtnProps?: any;
    footerDragable?: any;
}>>> & {
    onCancel?: ((...args: any[]) => any) | undefined;
    onClose?: ((...args: any[]) => any) | undefined;
    onHide?: ((...args: any[]) => any) | undefined;
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    onConfirm?: ((...args: any[]) => any) | undefined;
    onShow?: ((...args: any[]) => any) | undefined;
    "onCustom-mousedown"?: ((...args: any[]) => any) | undefined;
    "onCustom-mousemove"?: ((...args: any[]) => any) | undefined;
    "onCustom-mouseup"?: ((...args: any[]) => any) | undefined;
}, {
    readonly top?: any;
    readonly width?: any;
    readonly height?: any;
    readonly resize?: any;
    readonly type?: any;
    readonly title?: any;
    readonly id?: any;
    readonly message?: any;
    readonly fullscreen?: any;
    readonly zIndex?: any;
    readonly mask?: any;
    readonly slots?: any;
    readonly tiny_mode?: any;
    readonly tiny_mode_root?: any;
    readonly tiny_template?: any;
    readonly tiny_renderless?: any;
    readonly _constants?: any;
    readonly tiny_theme?: any;
    readonly tiny_chart_theme?: any;
    readonly tiny_mcp_config?: any;
    readonly modelValue?: any;
    readonly duration?: any;
    readonly showClose?: any;
    readonly showHeader?: any;
    readonly showFooter?: any;
    readonly maskClosable?: any;
    readonly lockScroll?: any;
    readonly beforeClose?: any;
    readonly events?: any;
    readonly minHeight?: any;
    readonly minWidth?: any;
    readonly status?: any;
    readonly isFormReset?: any;
    readonly vSize?: any;
    readonly animat?: any;
    readonly marginSize?: any;
    readonly messageClosable?: any;
    readonly escClosable?: any;
    readonly lockView?: any;
    readonly confirmContent?: any;
    readonly cancelContent?: any;
    readonly confirmBtnProps?: any;
    readonly cancelBtnProps?: any;
    readonly footerDragable?: any;
}, {}>;
export default _default;
