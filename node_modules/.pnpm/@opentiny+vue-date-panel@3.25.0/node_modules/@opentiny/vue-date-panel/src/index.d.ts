declare const _default: import("@vue/runtime-core").DefineComponent<{
    emitter: ObjectConstructor;
    step: {
        type: ObjectConstructor;
        default(): {
            hour: number;
            minute: number;
            second: number;
        };
    };
    showWeekNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    formatWeeks: FunctionConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    firstDayOfWeek: {
        type: NumberConstructor;
        default: number;
    };
    nowClick: {
        type: FunctionConstructor;
    };
    modelValue: {
        type: (StringConstructor | NumberConstructor | DateConstructor)[];
        default: string;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
    shortcuts: {
        type: ArrayConstructor;
        default: () => never[];
    };
    disabledDate: {
        type: FunctionConstructor;
        default: () => null;
    };
    popperClass: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
}, () => import("@vue/runtime-core").VNode<import("@vue/runtime-core").RendererNode, import("@vue/runtime-core").RendererElement, {
    [key: string]: any;
}>, unknown, {}, {}, import("@vue/runtime-core").ComponentOptionsMixin, import("@vue/runtime-core").ComponentOptionsMixin, {}, string, import("@vue/runtime-core").PublicProps, Readonly<import("@vue/runtime-core").ExtractPropTypes<{
    emitter: ObjectConstructor;
    step: {
        type: ObjectConstructor;
        default(): {
            hour: number;
            minute: number;
            second: number;
        };
    };
    showWeekNumber: {
        type: BooleanConstructor;
        default: boolean;
    };
    formatWeeks: FunctionConstructor;
    type: {
        type: StringConstructor;
        default: string;
    };
    firstDayOfWeek: {
        type: NumberConstructor;
        default: number;
    };
    nowClick: {
        type: FunctionConstructor;
    };
    modelValue: {
        type: (StringConstructor | NumberConstructor | DateConstructor)[];
        default: string;
    };
    format: {
        type: StringConstructor;
        default: string;
    };
    readonly: {
        type: BooleanConstructor;
        default: boolean;
    };
    shortcuts: {
        type: ArrayConstructor;
        default: () => never[];
    };
    disabledDate: {
        type: FunctionConstructor;
        default: () => null;
    };
    popperClass: {
        type: StringConstructor;
        default: string;
    };
    tiny_mode: StringConstructor;
    tiny_mode_root: BooleanConstructor;
    tiny_template: (ObjectConstructor | FunctionConstructor)[];
    tiny_renderless: FunctionConstructor;
    tiny_theme: StringConstructor;
    tiny_mcp_config: ObjectConstructor;
    tiny_chart_theme: ObjectConstructor;
}>>, {
    format: string;
    type: string;
    tiny_mode_root: boolean;
    modelValue: string | number | Date;
    popperClass: string;
    readonly: boolean;
    step: Record<string, any>;
    showWeekNumber: boolean;
    disabledDate: Function;
    firstDayOfWeek: number;
    shortcuts: unknown[];
}, {}>;
export default _default;
