import {
  init_buffer,
  init_process
} from "./chunk-USER6M25.js";

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isObject.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/chunk-G2ADBYYC.js
init_process();
init_buffer();
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isObject.js
var isObject = (obj) => typeof obj === "object" && obj !== null;
var isObject_default = isObject;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/index.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/assign.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/arrayEach.js
init_process();
init_buffer();
var arrayEach = (obj, iterate, context) => {
  if (obj) {
    if (obj.forEach) {
      obj.forEach(iterate, context);
    } else {
      for (let index = 0, len = obj.length; index < len; index++) {
        iterate.call(context, obj[index], index, obj);
      }
    }
  }
};
var arrayEach_default = arrayEach;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/keys.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperCreateGetObjects.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/each.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/objectEach.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/hasOwnProp.js
init_process();
init_buffer();
var hasOwnProp = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);
var hasOwnProp_default = hasOwnProp;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/objectEach.js
var objectEach = (obj, iterate, context) => {
  if (obj) {
    Object.keys(obj).forEach((key) => {
      if (hasOwnProp_default(obj, key)) {
        iterate.call(context, obj[key], key, obj);
      }
    });
  }
};
var objectEach_default = objectEach;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/each.js
var each = (obj, iterate, context) => {
  if (obj) {
    return Array.isArray(obj) ? arrayEach_default(obj, iterate, context) : objectEach_default(obj, iterate, context);
  }
  return obj;
};
var each_default = each;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperCreateGetObjects.js
var helperCreateGetObjects = (name, getIndex) => {
  let proMethod = Object[name];
  return (obj) => {
    let result = [];
    if (!obj) {
      return result;
    }
    if (proMethod) {
      return proMethod(obj);
    }
    let eachCallback;
    if (getIndex > 1) {
      eachCallback = (key) => {
        result.push([String(key), obj[key]]);
      };
    } else {
      eachCallback = function() {
        result.push(arguments[getIndex]);
      };
    }
    each_default(obj, eachCallback);
    return result;
  };
};
var helperCreateGetObjects_default = helperCreateGetObjects;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/keys.js
var keys = helperCreateGetObjects_default("keys", 1);
var keys_default = keys;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/clone.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isPlainObject.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/common/type.js
init_process();
init_buffer();
var toString = Object.prototype.toString;
var hasOwn = Object.prototype.hasOwnProperty;
var getProto = Object.getPrototypeOf;
var fnToString = hasOwn.toString;
var ObjectFunctionString = fnToString.call(Object);
var class2type = {
  "[object Error]": "error",
  "[object Object]": "object",
  "[object RegExp]": "regExp",
  "[object Date]": "date",
  "[object Array]": "array",
  "[object Function]": "function",
  "[object AsyncFunction]": "asyncFunction",
  "[object String]": "string",
  "[object Number]": "number",
  "[object Boolean]": "boolean"
};
var isNull = (x) => x === null || x === void 0;
var typeOf = (obj) => isNull(obj) ? String(obj) : class2type[toString.call(obj)] || "object";
var isObject2 = (obj) => typeOf(obj) === "object";
var isFunction = (fn) => ["asyncFunction", "function"].includes(typeOf(fn));
var isPlainObject = (obj) => {
  if (!obj || toString.call(obj) !== "[object Object]") {
    return false;
  }
  const proto = getProto(obj);
  if (!proto) {
    return true;
  }
  const Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
  return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
};
var isEmptyObject = (obj) => {
  const type = typeOf(obj);
  if (type === "object" || type === "array") {
    for (const name in obj) {
      if (hasOwn.call(obj, name)) {
        return false;
      }
    }
  }
  return true;
};
var isNumber = (value) => typeof value === "number" && isFinite(value);
var isNumeric = (value) => value - parseFloat(value) >= 0;
var isDate = (value) => typeOf(value) === "date";
var isSame = (x, y) => x === y || typeof x === "number" && typeof y === "number" && isNaN(x) && isNaN(y);
var isRegExp = (value) => typeOf(value) === "regExp";
var isPromise = (val) => isObject2(val) && isFunction(val.then) && isFunction(val.catch);

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isPlainObject.js
var isPlainObject_default = isPlainObject;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/objectMap.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isFunction.js
init_process();
init_buffer();
var isFunction2 = (obj) => typeof obj === "function";
var isFunction_default = isFunction2;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/function/property.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isNull.js
init_process();
init_buffer();
var isNull2 = (object) => object === null;
var isNull_default = isNull2;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/function/property.js
var property = (key, defs) => (object) => isNull_default(object) ? defs : object[key];
var property_default = property;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/objectMap.js
var objectMap = (obj, iterate, context) => {
  let result = {};
  if (obj) {
    if (iterate) {
      if (!isFunction_default(iterate)) {
        iterate = property_default(iterate);
      }
      each_default(obj, (val, index) => {
        result[index] = iterate.call(context, val, index, obj);
      });
    } else {
      return obj;
    }
  }
  return result;
};
var objectMap_default = objectMap;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/map.js
init_process();
init_buffer();
var map = function(obj, iterate, context) {
  let result = [];
  if (obj && arguments.length > 1) {
    if (!isFunction_default(iterate)) {
      iterate = property_default(iterate);
    }
    if (obj.map) {
      return obj.map(iterate, context);
    } else {
      each_default(obj, (...args) => {
        result.push(iterate.apply(context, args));
      });
    }
  }
  return result;
};
var map_default = map;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/clone.js
var deepClone;
var startClone = (func, obj, deep) => func(obj, deep ? (val) => deepClone(val, deep) : (val) => val);
deepClone = (val, deep) => isPlainObject_default(val) ? startClone(objectMap_default, val, deep) : Array.isArray(val) ? startClone(map_default, val, deep) : val;
var clone = (obj, deep) => obj ? deepClone(obj, deep) : obj;
var clone_default = clone;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/assign.js
var objectAssignFns = Object.assign;
var handleAssign = (destination, args, isClone) => {
  let len = args.length;
  for (let source, index = 1; index < len; index++) {
    source = args[index];
    let eachCallback;
    if (isClone) {
      eachCallback = (key) => {
        destination[key] = clone_default(source[key], isClone);
      };
    } else {
      eachCallback = (key) => {
        destination[key] = source[key];
      };
    }
    arrayEach_default(keys_default(args[index]), eachCallback);
  }
  return destination;
};
var assign = function(target) {
  if (target) {
    let args = arguments;
    if (target === true) {
      if (args.length > 1) {
        target = Array.isArray(target[1]) ? [] : {};
        return handleAssign(target, args, true);
      }
    } else {
      return objectAssignFns ? objectAssignFns.apply(Object, args) : handleAssign(target, args);
    }
  }
  return target;
};
var assign_default = assign;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/extend.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/lastObjectEach.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/lastArrayEach.js
init_process();
init_buffer();
var lastArrayEach = (obj, iterate, context) => {
  for (let len = obj.length - 1; len >= 0; len--) {
    iterate.call(context, obj[len], len, obj);
  }
};
var lastArrayEach_default = lastArrayEach;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/lastObjectEach.js
var lastObjectEach = (obj, iterate, context) => {
  lastArrayEach_default(keys_default(obj), (key) => {
    iterate.call(context, obj[key], key, obj);
  });
};
var lastObjectEach_default = lastObjectEach;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/object/values.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/every.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/helperCreateIterateHandle.js
init_process();
init_buffer();
var handle = ({ useArray, obj, iterate, context, matchValue, restIndex }) => {
  let value;
  let flag = 0;
  if (useArray && Array.isArray(obj)) {
    for (let index = 0, len = obj.length; index < len; index++) {
      if (!!iterate.call(context, obj[index], index, obj) === matchValue) {
        value = [true, false, index, obj[index]][restIndex];
        flag = 1;
        break;
      }
    }
  } else {
    for (let key of Object.keys(obj)) {
      if (hasOwnProp_default(obj, key)) {
        if (!!iterate.call(context, obj[key], key, obj) === matchValue) {
          value = [true, false, key, obj[key]][restIndex];
          flag = 2;
          break;
        }
      }
    }
  }
  return { value, flag };
};
var helperCreateIterateHandle = (prop, useArray, restIndex, matchValue, defaultValue) => (obj, iterate, context) => {
  if (!obj || !iterate) {
    return defaultValue;
  }
  if (prop && obj[prop]) {
    return obj[prop](iterate, context);
  } else {
    const ret = handle({
      useArray,
      obj,
      iterate,
      context,
      matchValue,
      restIndex
    });
    if (ret.flag) {
      return ret.value;
    }
  }
  return defaultValue;
};
var helperCreateIterateHandle_default = helperCreateIterateHandle;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/every.js
var every_default = helperCreateIterateHandle_default("every", 1, 1, false, true);

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/find.js
init_process();
init_buffer();
var find = helperCreateIterateHandle_default("find", 1, 3, true);
var find_default = find;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/toArray.js
init_process();
init_buffer();
var toArray = (arr) => map_default(arr, (item) => item);
var toArray_default = toArray;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/sortBy.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isUndefined.js
init_process();
init_buffer();
var isUndefined = (obj) => typeof obj === "undefined";
var isUndefined_default = isUndefined;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/get.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/eqNull.js
init_process();
init_buffer();
var eqNull = (object) => isNull_default(object) || isUndefined_default(object);
var eqNull_default = eqNull;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperGetHGSKeys.js
init_process();
init_buffer();
var helperGetHGSKeys = (property2) => (
  // 以最快的方式判断数组，可忽略准确性
  property2 ? property2.splice && property2.join ? property2 : String(property2).split(".") : []
);
var helperGetHGSKeys_default = helperGetHGSKeys;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/static/staticHGKeyRE.js
init_process();
init_buffer();
var staticHGKeyRE = /(.+)?\[(\d+)\]$/;
var staticHGKeyRE_default = staticHGKeyRE;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/get.js
var valGet = (obj, key) => {
  const matchs = key ? key.match(staticHGKeyRE_default) : "";
  return matchs ? matchs[1] ? obj[matchs[1]] ? obj[matchs[1]][matchs[2]] : void 0 : obj[matchs[2]] : obj[key];
};
var pathGet = (obj, property2) => {
  if (!obj) {
    return;
  }
  let rest;
  let index = 0;
  const getRest = (len, props) => {
    for (rest = obj; index < len; index++) {
      rest = valGet(rest, props[index]);
      if (eqNull_default(rest)) {
        return;
      }
    }
  };
  if (obj[property2] || hasOwnProp_default(obj, property2)) {
    return obj[property2];
  } else {
    const props = helperGetHGSKeys_default(property2);
    const len = props.length;
    if (len) {
      getRest(len, props);
    }
    return rest;
  }
};
var get = (obj, property2, defaultValue) => {
  if (eqNull_default(obj)) {
    return defaultValue;
  }
  const result = pathGet(obj, property2);
  return isUndefined_default(result) ? defaultValue : result;
};
var get_default = get;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/sortBy.js
var sortByDef = (v1, v2) => {
  if (isUndefined_default(v1) || isUndefined_default(v2)) {
    return isUndefined_default(v2) ? 1 : -1;
  }
  if (isNull_default(v1) || isNull_default(v2)) {
    return isNull_default(v2) ? 1 : -1;
  }
  return v1 && v1.localeCompare ? v1.localeCompare(v2) : v1 > v2 ? 1 : -1;
};
var sortMultis = (name, compares) => (item1, item2) => {
  let v1 = item1[name];
  let v2 = item2[name];
  if (v1 === v2) {
    return compares ? compares(item1, item2) : 0;
  }
  return sortByDef(v1, v2);
};
var getSortPros = (arr, list, iterate, context) => {
  iterate = Array.isArray(iterate) ? iterate : [iterate];
  arrayEach_default(iterate, (prop, index) => {
    let eachCallback;
    if (isFunction_default(prop)) {
      eachCallback = (val, key) => {
        val[index] = prop.call(context, val.data, key, arr);
      };
    } else {
      eachCallback = (val) => {
        val[index] = get_default(val.data, prop);
      };
    }
    arrayEach_default(list, eachCallback);
  });
  return iterate;
};
var sortBy = (arr, iterate, context, STR_UNDEFINED) => {
  if (arr) {
    if (iterate === STR_UNDEFINED) {
      return toArray_default(arr).sort(sortByDef);
    }
    let compares;
    let list = map_default(arr, (item) => ({ data: item }));
    let sortPros = getSortPros(arr, list, iterate, context);
    let len = sortPros.length;
    if (len) {
      while (len >= 0) {
        compares = sortMultis(len, compares);
        len--;
      }
      list = list.sort(compares);
    }
    return map_default(list, property_default("data"));
  }
  return [];
};
var sortBy_default = sortBy;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/slice.js
init_process();
init_buffer();
var slice = (array, startIndex, endIndex) => {
  let result = [];
  if (array) {
    for (startIndex = startIndex || 0, endIndex = endIndex || array.length; startIndex < endIndex; startIndex++) {
      result.push(array[startIndex]);
    }
  }
  return result;
};
var slice_default = slice;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/includes.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/indexOf.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperCreateIndexOf.js
init_process();
init_buffer();
var helperCreateIndexOf = (name, callback) => (obj, val) => {
  if (!obj) {
    return -1;
  }
  if (typeof obj === "string" || Array.isArray(obj)) {
    if (obj[name]) {
      return obj[name](val);
    }
    return callback(obj, val);
  }
  for (let key of Object.keys(obj)) {
    if (val === obj[key]) {
      return key;
    }
  }
  return -1;
};
var helperCreateIndexOf_default = helperCreateIndexOf;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/arrayIndexOf.js
init_process();
init_buffer();
var arrayIndexOf = (obj, val) => {
  if (obj.indexOf) {
    return obj.indexOf(val);
  }
  for (let index = 0, len = obj.length; index < len; index++) {
    if (val === obj[index]) {
      return index;
    }
  }
};
var arrayIndexOf_default = arrayIndexOf;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/indexOf.js
var indexOf_default = helperCreateIndexOf_default("indexOf", arrayIndexOf_default);

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/includes.js
var includes = (obj, val) => ~indexOf_default(obj, val);
var includes_default = includes;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/sum.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/number/toNumber.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/number/helperCreateToNumber.js
init_process();
init_buffer();
var helperCreateToNumber = (handle2) => (str) => {
  if (str) {
    let num = handle2(str);
    if (!isNaN(num)) {
      return num;
    }
  }
  return 0;
};
var helperCreateToNumber_default = helperCreateToNumber;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/number/toNumber.js
var toNumber = helperCreateToNumber_default(parseFloat);
var toNumber_default = toNumber;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/sum.js
var sum = (array, iterate, context) => {
  let result = 0;
  let eachCallback;
  if (iterate) {
    if (isFunction_default(iterate)) {
      eachCallback = (...args) => {
        result += toNumber_default(iterate.apply(context, args));
      };
    } else {
      eachCallback = (val) => {
        result += toNumber_default(val[iterate]);
      };
    }
  } else {
    eachCallback = (val) => {
      result += toNumber_default(val);
    };
  }
  each_default(array, eachCallback);
  return result;
};
var sum_default = sum;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/toTreeArray.js
init_process();
init_buffer();
var defaultOptions = { parentKey: "parentId", key: "id", children: "children" };
var unTreeList = (result, array, opts) => {
  let optChildren = opts.children;
  let optData = opts.data;
  each_default(array, (item) => {
    const children = item[optChildren];
    if (optData) {
      item = item[optData];
    }
    result.push(item);
    children && unTreeList(result, children, opts);
  });
  return result;
};
var toTreeArray = (array, options) => unTreeList([], array, assign_default({}, defaultOptions, options));
var toTreeArray_default = toTreeArray;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/findTree.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/helperCreateTreeFunc.js
init_process();
init_buffer();
var helperCreateTreeFunc = (handle2) => (obj, iterate, options, context) => {
  let opts = options || {};
  let optChildren = opts.children || "children";
  const params = {
    item: null,
    obj,
    iterate,
    context,
    path: [],
    node: [],
    parseChildren: optChildren,
    opts
  };
  return handle2(params);
};
var helperCreateTreeFunc_default = helperCreateTreeFunc;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/findTree.js
var findTreeItem = ({ parent, obj, iterate, context, path, node, parseChildren, opts }) => {
  if (obj) {
    for (let index = 0, len = obj.length; index < len; index++) {
      const item = obj[index];
      const paths = path.concat([`${index}`]);
      const nodes = node.concat([item]);
      if (iterate.call(context, item, index, obj, paths, parent, nodes)) {
        return { index, item, path, items: obj, parent, nodes };
      }
      if (parseChildren && item) {
        const newPath = paths.concat([parseChildren]);
        const match = findTreeItem({
          parent: item,
          obj: item[parseChildren],
          iterate,
          context,
          path: newPath,
          node: nodes,
          parseChildren,
          opts
        });
        if (match) {
          return match;
        }
      }
    }
  }
};
var findTree = helperCreateTreeFunc_default(findTreeItem);
var findTree_default = findTree;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/eachTree.js
init_process();
init_buffer();
var eachTreeItem = ({ parent, obj, iterate, context, path, node, parseChildren, opts }) => {
  each_default(obj, (item, index) => {
    const paths = path.concat([`${index}`]);
    const nodes = node.concat([item]);
    iterate.call(context, item, index, obj, paths, parent, nodes);
    if (item && parseChildren) {
      paths.push(parseChildren);
      eachTreeItem({
        item,
        obj: item[parseChildren],
        context,
        iterate,
        node: nodes,
        parseChildren,
        path: paths,
        opts
      });
    }
  });
};
var eachTree = helperCreateTreeFunc_default(eachTreeItem);
var eachTree_default = eachTree;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/mapTree.js
init_process();
init_buffer();
var mapTreeItem = ({ parent, obj, iterate, context, path, node, parseChildren, opts }) => {
  let mapChildren = opts.mapChildren || parseChildren;
  return map_default(obj, (item, index) => {
    const paths = path.concat([`${index}`]);
    const nodes = node.concat([item]);
    const rest = iterate.call(context, item, index, obj, paths, parent, nodes);
    if (rest && item && parseChildren && item[parseChildren]) {
      rest[mapChildren] = mapTreeItem({
        item,
        obj: item[parseChildren],
        iterate,
        context,
        path: paths,
        node: nodes,
        parseChildren,
        opts
      });
    }
    return rest;
  });
};
var mapTree = helperCreateTreeFunc_default(mapTreeItem);
var mapTree_default = mapTree;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/array/filterTree.js
init_process();
init_buffer();
var filterTree = (obj, iterate, options, context) => {
  let result = [];
  if (obj && iterate) {
    eachTree_default(
      obj,
      (...args) => {
        if (iterate.apply(context, args)) {
          result.push(args[0]);
        }
      },
      options
    );
  }
  return result;
};
var filterTree_default = filterTree;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isString.js
init_process();
init_buffer();
var isString = (obj) => typeof obj === "string";
var isString_default = isString;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/lastEach.js
init_process();
init_buffer();
var lastEach = (obj, iterate, context) => {
  if (obj) {
    return Array.isArray(obj) ? lastArrayEach_default(obj, iterate, context) : lastObjectEach_default(obj, iterate, context);
  }
  return obj;
};
var lastEach_default = lastEach;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/remove.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperDeleteProperty.js
init_process();
init_buffer();
var helperDeleteProperty = (obj, property2) => {
  try {
    delete obj[property2];
  } catch (e) {
    obj[property2] = void 0;
  }
};
var helperDeleteProperty_default = helperDeleteProperty;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/clear.js
init_process();
init_buffer();
var clear = function(obj, defs, assigns) {
  if (!obj) {
    return obj;
  }
  let isDefs = arguments.length > 1 && (isNull_default(defs) || !isObject_default(defs));
  let extds = isDefs ? assigns : defs;
  if (isPlainObject_default(obj)) {
    let eachCallback;
    if (isDefs) {
      eachCallback = (val, key) => {
        obj[key] = defs;
      };
    } else {
      eachCallback = (val, key) => {
        helperDeleteProperty_default(obj, key);
      };
    }
    objectEach_default(obj, eachCallback);
    if (extds) {
      assign_default(obj, extds);
    }
  } else if (Array.isArray(obj)) {
    if (isDefs) {
      let len = obj.length;
      while (len > 0) {
        len--;
        obj[len] = defs;
      }
    } else {
      obj.length = 0;
    }
    if (extds) {
      obj.push.apply(obj, extds);
    }
  }
  return obj;
};
var clear_default = clear;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/remove.js
var pluckProperty = (name) => (obj, key) => key === name;
var remove = (obj, iterate, context) => {
  if (obj) {
    if (!eqNull_default(iterate)) {
      let removeIndexs = [];
      let rest = [];
      if (!isFunction_default(iterate)) {
        iterate = pluckProperty(iterate);
      }
      each_default(obj, (item, index, rest2) => {
        if (iterate.call(context, item, index, rest2)) {
          removeIndexs.push(index);
        }
      });
      if (Array.isArray(obj)) {
        lastEach_default(removeIndexs, (item) => {
          rest.push(obj[item]);
          obj.splice(item, 1);
        });
      } else {
        rest = {};
        arrayEach_default(removeIndexs, (key) => {
          rest[key] = obj[key];
          helperDeleteProperty_default(obj, key);
        });
      }
      return rest;
    }
    return clear_default(obj);
  }
  return obj;
};
var remove_default = remove;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isBoolean.js
init_process();
init_buffer();
var isBoolean = (obj) => typeof obj === "boolean";
var isBoolean_default = isBoolean;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isNumber.js
init_process();
init_buffer();
var isNumber2 = (obj) => typeof obj === "number";
var isNumber_default = isNumber2;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isEmpty.js
init_process();
init_buffer();
var isEmpty = (obj) => {
  if (isObject_default(obj)) {
    return Object.keys(obj).length === 0;
  }
  return true;
};
var isEmpty_default = isEmpty;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isSet.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isEqual.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperEqualCompare.js
init_process();
init_buffer();
var equalVal;
var helperEqualCompare = ({ val1, val2, compare, func, key, obj1, obj2 }) => {
  if (val1 === val2) {
    return true;
  }
  if (val1 && val2 && !isNumber_default(val1) && !isNumber_default(val2) && !isString_default(val1) && !isString_default(val2)) {
    if (isRegExp(val1)) {
      return compare(String(val1), String(val2), key, obj1, obj2);
    }
    if (isDate(val1) || isBoolean_default(val1)) {
      return compare(Number(val1), Number(val2), key, obj1, obj2);
    }
    return equalVal(val1, val2, func, key, compare);
  }
  return compare(val1, val2, key, obj1, obj2);
};
equalVal = (val1, val2, func, key, compare) => {
  let result, val1Keys, val2Keys;
  let isObj1Arr = Array.isArray(val1);
  let isObj2Arr = Array.isArray(val2);
  if (isObj1Arr || isObj2Arr ? isObj1Arr && isObj2Arr : val1.constructor === val2.constructor) {
    val1Keys = keys_default(val1);
    val2Keys = keys_default(val2);
    if (func) {
      result = func(val1, val2, key);
    }
    if (val1Keys.length === val2Keys.length) {
      if (isUndefined_default(result)) {
        return every_default(
          val1Keys,
          (key2, index) => key2 === val2Keys[index] && helperEqualCompare({
            val1: val1[key2],
            val2: val2[val2Keys[index]],
            compare,
            func,
            key: isObj1Arr || isObj2Arr ? index : key2,
            obj1: val1,
            obj2: val2
          })
        );
      }
      return !!result;
    }
    return false;
  }
};
var helperEqualCompare_default = helperEqualCompare;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/isEqual.js
var isEqual = (obj1, obj2) => helperEqualCompare_default({
  val1: obj1,
  val2: obj2,
  compare: (v1, v2) => v1 === v2
});
var isEqual_default = isEqual;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/uniqueId.js
init_process();
init_buffer();
var __uniqueId = 0;
var uniqueId = (prefix) => (prefix ? String(prefix) : 0) + ++__uniqueId;
var uniqueId_default = uniqueId;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/findIndexOf.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/helperCreateiterateIndexOf.js
init_process();
init_buffer();
var helperCreateiterateIndexOf = (callback) => (obj, iterate, context) => {
  if (!obj || !isFunction_default(iterate)) {
    return -1;
  }
  if (Array.isArray(obj) || isString_default(obj)) {
    return callback(obj, iterate, context);
  }
  for (let key of Object.keys(obj)) {
    if (hasOwnProp_default(obj, key) && iterate.call(context, obj[key], key, obj)) {
      return key;
    }
  }
  return -1;
};
var helperCreateiterateIndexOf_default = helperCreateiterateIndexOf;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/findIndexOf.js
var findIndexOf = helperCreateiterateIndexOf_default((obj, iterate, context) => {
  for (let index = 0, len = obj.length; index < len; index++) {
    if (iterate.call(context, obj[index], index, obj)) {
      return index;
    }
  }
  return -1;
});
var findIndexOf_default = findIndexOf;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/toStringJSON.js
init_process();
init_buffer();
var toStringJSON = (str) => {
  if (isObject_default(str)) {
    return str;
  } else if (isString_default(str)) {
    try {
      return JSON.parse(str);
    } catch (error) {
    }
  }
  return {};
};
var toStringJSON_default = toStringJSON;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/toJSONString.js
init_process();
init_buffer();
var toJSONString = (obj) => JSON.stringify(obj) || "";
var toJSONString_default = toJSONString;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/has.js
init_process();
init_buffer();
var formatterArgs = (matchs, rest, isHas) => {
  let arrIndex = matchs[1];
  let objProp = matchs[2];
  if (arrIndex) {
    if (rest[arrIndex]) {
      if (hasOwnProp_default(rest[arrIndex], objProp)) {
        isHas = true;
        rest = rest[arrIndex][objProp];
      }
    }
  } else {
    if (hasOwnProp_default(rest, objProp)) {
      isHas = true;
      rest = rest[objProp];
    }
  }
  return { isHas, rest };
};
var has = (obj, property2) => {
  if (!obj) {
    return;
  }
  const compare = (property22) => {
    let prop, matchs, rest, isHas;
    let props = helperGetHGSKeys_default(property22);
    let index = 0;
    let len = props.length;
    let flag = false;
    for (rest = obj; index < len; index++) {
      isHas = false;
      prop = props[index];
      matchs = prop ? prop.match(staticHGKeyRE_default) : "";
      if (matchs) {
        const args = formatterArgs(matchs, rest, isHas);
        isHas = args.isHas;
        rest = args.rest;
      } else {
        hasOwnProp_default(rest, prop) && (isHas = true, rest = rest[prop]);
      }
      if (isHas) {
        index === len - 1 && (flag = true);
      } else {
        break;
      }
    }
    return flag;
  };
  if (hasOwnProp_default(obj, property2)) {
    return true;
  } else {
    return compare(property2);
  }
};
var has_default = has;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/set.js
init_process();
init_buffer();
var sKeyRE = /(.+)\[(\d+)\]$/;
var valSet = (obj, key, isSet, value) => {
  if (obj[key]) {
    if (isSet) {
      obj[key] = value;
    }
  } else {
    const matchs = key ? key.match(sKeyRE) : null;
    const rest = isSet ? value : {};
    if (matchs) {
      const key2 = matchs[1];
      const index = parseInt(matchs[2]);
      if (obj[key2]) {
        obj[key2][index] = rest;
      } else {
        obj[key2] = new Array(index + 1);
        obj[key2][index] = rest;
      }
    } else {
      obj[key] = rest;
    }
    return rest;
  }
  return obj[key];
};
var set = (obj, property2, value) => {
  if (obj) {
    if (obj[property2] || hasOwnProp_default(obj, property2)) {
      obj[property2] = value;
    } else {
      let rest = obj;
      let props = helperGetHGSKeys_default(property2);
      let len = props.length;
      for (let index = 0; index < len; index++) {
        rest = valSet(rest, props[index], index === len - 1, value);
      }
    }
  }
  return obj;
};
var set_default = set;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/base/destructuring.js
init_process();
init_buffer();
var destructuring = function(destination, sources) {
  if (destination && sources) {
    let rest = assign_default.apply(this, [{}].concat(slice_default(arguments, 1)));
    let restKeys = keys_default(rest);
    arrayEach_default(keys_default(destination), (key) => {
      if (includes_default(restKeys, key)) {
        destination[key] = rest[key];
      }
    });
  }
  return destination;
};
var destructuring_default = destructuring;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/string/template.js
init_process();
init_buffer();

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/string/toString.js
init_process();
init_buffer();
var toValString = (obj) => {
  if (isNumber_default(obj)) {
    if (String(obj).includes("e-")) {
      let isNegative = obj < 0;
      return (isNegative ? "-" : "") + "0" + String((isNegative ? Math.abs(obj) : obj) + 1).substr(1);
    }
  }
  return String(eqNull_default(obj) ? "" : obj);
};
var toString_default = toValString;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/string/template.js
var template = (str, obj) => {
  let rest = toString_default(str);
  if (rest && obj) {
    return rest.replace(/\{{2}([.\w[\]\s]+)\}{2}/g, (match, keys2) => get_default(obj, keys2));
  }
  return rest;
};
var template_default = template;

// ../node_modules/.pnpm/@opentiny+vue-renderless@3.20.0/node_modules/@opentiny/vue-renderless/grid/static/index.js
var isArray = Array.isArray;

export {
  __spreadValues,
  __spreadProps,
  __objRest,
  hasOwn,
  isNull,
  typeOf,
  isObject2 as isObject,
  isFunction,
  isPlainObject,
  isEmptyObject,
  isNumber,
  isNumeric,
  isDate,
  isSame,
  isPromise,
  arrayEach_default,
  each_default,
  isPlainObject_default,
  isFunction_default,
  isNull_default,
  objectMap_default,
  clone_default,
  assign_default,
  find_default,
  toArray_default,
  isUndefined_default,
  get_default,
  sortBy_default,
  arrayIndexOf_default,
  toNumber_default,
  sum_default,
  toTreeArray_default,
  findTree_default,
  eachTree_default,
  mapTree_default,
  filterTree_default,
  isObject_default,
  isString_default,
  clear_default,
  remove_default,
  isBoolean_default,
  isNumber_default,
  isEmpty_default,
  isEqual_default,
  uniqueId_default,
  findIndexOf_default,
  toStringJSON_default,
  toJSONString_default,
  has_default,
  set_default,
  destructuring_default,
  toString_default,
  template_default,
  isArray
};
//# sourceMappingURL=chunk-DY6D7ZK2.js.map
