{"version":3,"file":"css.js","sources":["../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/types.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/char-code-definitions.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/utils.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/names.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/adopt-buffer.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/OffsetToLocation.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/TokenStream.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/tokenizer/index.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/List.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/create-custom-error.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/parser/SyntaxError.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/parser/sequence.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/parser/create.js","../../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/base64.js","../../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/base64-vlq.js","../../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/util.js","../../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/array-set.js","../../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/mapping-list.js","../../../../node_modules/.pnpm/source-map-js@1.2.1/node_modules/source-map-js/lib/source-map-generator.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/generator/sourceMap.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/generator/token-before.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/generator/create.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/convertor/create.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/walker/create.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/generate.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/error.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/names.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic-const.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic-an-plus-b.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic-urange.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/generic.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/units.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/SyntaxError.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/tokenizer.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/parse.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/definition-syntax/walk.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/prepare-tokens.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/match-graph.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/match.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/trace.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/search.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/structure.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/lexer/Lexer.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/mix.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/create.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/dist/data.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/AnPlusB.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Atrule.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/AtrulePrelude.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/AttributeSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Block.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Brackets.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/CDC.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/CDO.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/ClassSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Combinator.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Comment.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Declaration.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/DeclarationList.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Dimension.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Function.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Hash.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Identifier.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/IdSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/MediaFeature.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/MediaQuery.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/MediaQueryList.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/NestingSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Nth.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Number.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Operator.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Parentheses.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Percentage.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/PseudoClassSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/PseudoElementSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Ratio.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Raw.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Rule.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Selector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/SelectorList.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/string.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/String.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/StyleSheet.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/TypeSelector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/UnicodeRange.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/utils/url.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Url.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/Value.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/node/WhiteSpace.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/lexer.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/default.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/atrulePrelude.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/selector.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/function/expression.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/function/var.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/scope/value.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/font-face.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/import.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/media.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/nest.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/page.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/supports.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/atrule/index.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/pseudo/index.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/parser.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/config/walker.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/syntax/index.js","../../../../node_modules/.pnpm/css-tree@2.3.1/node_modules/css-tree/lib/index.js","../../js/css.js"],"sourcesContent":["// CSS Syntax Module Level 3\n// https://www.w3.org/TR/css-syntax-3/\nexport const EOF = 0;                 // <EOF-token>\nexport const Ident = 1;               // <ident-token>\nexport const Function = 2;            // <function-token>\nexport const AtKeyword = 3;           // <at-keyword-token>\nexport const Hash = 4;                // <hash-token>\nexport const String = 5;              // <string-token>\nexport const BadString = 6;           // <bad-string-token>\nexport const Url = 7;                 // <url-token>\nexport const BadUrl = 8;              // <bad-url-token>\nexport const Delim = 9;               // <delim-token>\nexport const Number = 10;             // <number-token>\nexport const Percentage = 11;         // <percentage-token>\nexport const Dimension = 12;          // <dimension-token>\nexport const WhiteSpace = 13;         // <whitespace-token>\nexport const CDO = 14;                // <CDO-token>\nexport const CDC = 15;                // <CDC-token>\nexport const Colon = 16;              // <colon-token>     :\nexport const Semicolon = 17;          // <semicolon-token> ;\nexport const Comma = 18;              // <comma-token>     ,\nexport const LeftSquareBracket = 19;  // <[-token>\nexport const RightSquareBracket = 20; // <]-token>\nexport const LeftParenthesis = 21;    // <(-token>\nexport const RightParenthesis = 22;   // <)-token>\nexport const LeftCurlyBracket = 23;   // <{-token>\nexport const RightCurlyBracket = 24;  // <}-token>\nexport const Comment = 25;\n","const EOF = 0;\n\n// https://drafts.csswg.org/css-syntax-3/\n// § 4.2. Definitions\n\n// digit\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\nexport function isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n}\n\n// hex digit\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\nexport function isHexDigit(code) {\n    return (\n        isDigit(code) || // 0 .. 9\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\n    );\n}\n\n// uppercase letter\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\nexport function isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n}\n\n// lowercase letter\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\nexport function isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n}\n\n// letter\n// An uppercase letter or a lowercase letter.\nexport function isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n}\n\n// non-ASCII code point\n// A code point with a value equal to or greater than U+0080 <control>.\nexport function isNonAscii(code) {\n    return code >= 0x0080;\n}\n\n// name-start code point\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\nexport function isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n}\n\n// name code point\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\nexport function isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n}\n\n// non-printable code point\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\nexport function isNonPrintable(code) {\n    return (\n        (code >= 0x0000 && code <= 0x0008) ||\n        (code === 0x000B) ||\n        (code >= 0x000E && code <= 0x001F) ||\n        (code === 0x007F)\n    );\n}\n\n// newline\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n// as they are converted to U+000A LINE FEED during preprocessing.\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\nexport function isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n}\n\n// whitespace\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\nexport function isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n}\n\n// § 4.3.8. Check if two code points are a valid escape\nexport function isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n        return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n        return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n}\n\n// § 4.3.9. Check if three code points would start an identifier\nexport function isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\n        return (\n            isNameStart(second) ||\n            second === 0x002D ||\n            isValidEscape(second, third)\n        );\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n        // Return true.\n        return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\n        return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n}\n\n// § 4.3.10. Check if three code points would start a number\nexport function isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n        // If the second code point is a digit, return true. Otherwise, return false.\n        return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n}\n\n//\n// Misc\n//\n\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\nexport function isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n        return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Fast code category\n// Only ASCII code points has a special meaning, that's why we define a maps for 0..127 codes only\nconst CATEGORY = new Array(0x80);\nexport const EofCategory = 0x80;\nexport const WhiteSpaceCategory = 0x82;\nexport const DigitCategory = 0x83;\nexport const NameStartCategory = 0x84;\nexport const NonPrintableCategory = 0x85;\n\nfor (let i = 0; i < CATEGORY.length; i++) {\n    CATEGORY[i] =\n        isWhiteSpace(i) && WhiteSpaceCategory ||\n        isDigit(i) && DigitCategory ||\n        isNameStart(i) && NameStartCategory ||\n        isNonPrintable(i) && NonPrintableCategory ||\n        i || EofCategory;\n}\n\nexport function charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : NameStartCategory;\n}\n","import {\n    isDigit,\n    isHexDigit,\n    isUppercaseLetter,\n    isName,\n    isWhiteSpace,\n    isValidEscape\n} from './char-code-definitions.js';\n\nfunction getCharCode(source, offset) {\n    return offset < source.length ? source.charCodeAt(offset) : 0;\n}\n\nexport function getNewlineLength(source, offset, code) {\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\n        return 2;\n    }\n\n    return 1;\n}\n\nexport function cmpChar(testStr, offset, referenceCode) {\n    let code = testStr.charCodeAt(offset);\n\n    // code.toLowerCase() for A..Z\n    if (isUppercaseLetter(code)) {\n        code = code | 32;\n    }\n\n    return code === referenceCode;\n}\n\nexport function cmpStr(testStr, start, end, referenceStr) {\n    if (end - start !== referenceStr.length) {\n        return false;\n    }\n\n    if (start < 0 || end > testStr.length) {\n        return false;\n    }\n\n    for (let i = start; i < end; i++) {\n        const referenceCode = referenceStr.charCodeAt(i - start);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for A..Z\n        if (isUppercaseLetter(testCode)) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function findWhiteSpaceStart(source, offset) {\n    for (; offset >= 0; offset--) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset + 1;\n}\n\nexport function findWhiteSpaceEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\nexport function findDecimalNumberEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isDigit(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\nexport function consumeEscaped(source, offset) {\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\n    // that the next input code point has already been verified to be part of a valid escape.\n    offset += 2;\n\n    // hex digit\n    if (isHexDigit(getCharCode(source, offset - 1))) {\n        // Consume as many hex digits as possible, but no more than 5.\n        // Note that this means 1-6 hex digits have been consumed in total.\n        for (const maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\n            if (!isHexDigit(getCharCode(source, offset))) {\n                break;\n            }\n        }\n\n        // If the next input code point is whitespace, consume it as well.\n        const code = getCharCode(source, offset);\n        if (isWhiteSpace(code)) {\n            offset += getNewlineLength(source, offset, code);\n        }\n    }\n\n    return offset;\n}\n\n// §4.3.11. Consume a name\n// Note: This algorithm does not do the verification of the first few code points that are necessary\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\n// ensure that the stream starts with an identifier before calling this algorithm.\nexport function consumeName(source, offset) {\n    // Let result initially be an empty string.\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // name code point\n        if (isName(code)) {\n            // Append the code point to result.\n            continue;\n        }\n\n        // the stream starts with a valid escape\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point. Append the returned code point to result.\n            offset = consumeEscaped(source, offset) - 1;\n            continue;\n        }\n\n        // anything else\n        // Reconsume the current input code point. Return result.\n        break;\n    }\n\n    return offset;\n}\n\n// §4.3.12. Consume a number\nexport function consumeNumber(source, offset) {\n    let code = source.charCodeAt(offset);\n\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (code === 0x002B || code === 0x002D) {\n        code = source.charCodeAt(offset += 1);\n    }\n\n    // 3. While the next input code point is a digit, consume it and append it to repr.\n    if (isDigit(code)) {\n        offset = findDecimalNumberEnd(source, offset + 1);\n        code = source.charCodeAt(offset);\n    }\n\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\n        // 4.1 Consume them.\n        // 4.2 Append them to repr.\n        offset += 2;\n\n        // 4.3 Set type to \"number\".\n        // TODO\n\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\n\n        offset = findDecimalNumberEnd(source, offset);\n    }\n\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (cmpChar(source, offset, 101 /* e */)) {\n        let sign = 0;\n        code = source.charCodeAt(offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (code === 0x002D || code === 0x002B) {\n            sign = 1;\n            code = source.charCodeAt(offset + 2);\n        }\n\n        // ... followed by a digit\n        if (isDigit(code)) {\n            // 5.1 Consume them.\n            // 5.2 Append them to repr.\n\n            // 5.3 Set type to \"number\".\n            // TODO\n\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.14. Consume the remnants of a bad url\n// ... its sole use is to consume enough of the input stream to reach a recovery point\n// where normal tokenizing can resume.\nexport function consumeBadUrlRemnants(source, offset) {\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        const code = source.charCodeAt(offset);\n\n        // U+0029 RIGHT PARENTHESIS ())\n        // EOF\n        if (code === 0x0029) {\n            // Return.\n            offset++;\n            break;\n        }\n\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point.\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\n            // without ending the <bad-url-token>. This is otherwise identical to\n            // the \"anything else\" clause.\n            offset = consumeEscaped(source, offset);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\n// Note: This algorithm assumes that escaped is valid without leading U+005C REVERSE SOLIDUS (\\)\nexport function decodeEscaped(escaped) {\n    // Single char escaped that's not a hex digit\n    if (escaped.length === 1 && !isHexDigit(escaped.charCodeAt(0))) {\n        return escaped[0];\n    }\n\n    // Interpret the hex digits as a hexadecimal number.\n    let code = parseInt(escaped, 16);\n\n    if (\n        (code === 0) ||                       // If this number is zero,\n        (code >= 0xD800 && code <= 0xDFFF) || // or is for a surrogate,\n        (code > 0x10FFFF)                     // or is greater than the maximum allowed code point\n    ) {\n        // ... return U+FFFD REPLACEMENT CHARACTER\n        code = 0xFFFD;\n    }\n\n    // Otherwise, return the code point with that value.\n    return String.fromCodePoint(code);\n}\n","export default [\n    'EOF-token',\n    'ident-token',\n    'function-token',\n    'at-keyword-token',\n    'hash-token',\n    'string-token',\n    'bad-string-token',\n    'url-token',\n    'bad-url-token',\n    'delim-token',\n    'number-token',\n    'percentage-token',\n    'dimension-token',\n    'whitespace-token',\n    'CDO-token',\n    'CDC-token',\n    'colon-token',\n    'semicolon-token',\n    'comma-token',\n    '[-token',\n    ']-token',\n    '(-token',\n    ')-token',\n    '{-token',\n    '}-token'\n];\n","const MIN_SIZE = 16 * 1024;\n\nexport function adoptBuffer(buffer = null, size) {\n    if (buffer === null || buffer.length < size) {\n        return new Uint32Array(Math.max(size + 1024, MIN_SIZE));\n    }\n\n    return buffer;\n};\n","import { adoptBuffer } from './adopt-buffer.js';\nimport { isBOM } from './char-code-definitions.js';\n\nconst N = 10;\nconst F = 12;\nconst R = 13;\n\nfunction computeLinesAndColumns(host) {\n    const source = host.source;\n    const sourceLength = source.length;\n    const startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\n    const lines = adoptBuffer(host.lines, sourceLength);\n    const columns = adoptBuffer(host.columns, sourceLength);\n    let line = host.startLine;\n    let column = host.startColumn;\n\n    for (let i = startOffset; i < sourceLength; i++) {\n        const code = source.charCodeAt(i);\n\n        lines[i] = line;\n        columns[i] = column++;\n\n        if (code === N || code === R || code === F) {\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n                i++;\n                lines[i] = line;\n                columns[i] = column;\n            }\n\n            line++;\n            column = 1;\n        }\n    }\n\n    lines[sourceLength] = line;\n    columns[sourceLength] = column;\n\n    host.lines = lines;\n    host.columns = columns;\n    host.computed = true;\n}\n\nexport class OffsetToLocation {\n    constructor() {\n        this.lines = null;\n        this.columns = null;\n        this.computed = false;\n    }\n    setSource(source, startOffset = 0, startLine = 1, startColumn = 1) {\n        this.source = source;\n        this.startOffset = startOffset;\n        this.startLine = startLine;\n        this.startColumn = startColumn;\n        this.computed = false;\n    }\n    getLocation(offset, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            offset: this.startOffset + offset,\n            line: this.lines[offset],\n            column: this.columns[offset]\n        };\n    }\n    getLocationRange(start, end, filename) {\n        if (!this.computed) {\n            computeLinesAndColumns(this);\n        }\n\n        return {\n            source: filename,\n            start: {\n                offset: this.startOffset + start,\n                line: this.lines[start],\n                column: this.columns[start]\n            },\n            end: {\n                offset: this.startOffset + end,\n                line: this.lines[end],\n                column: this.columns[end]\n            }\n        };\n    }\n};\n","import { adoptBuffer } from './adopt-buffer.js';\nimport { cmpStr } from './utils.js';\nimport tokenNames from './names.js';\nimport {\n    WhiteSpace,\n    Comment,\n    Delim,\n    EOF,\n    Function as FunctionToken,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from './types.js';\n\nconst OFFSET_MASK = 0x00FFFFFF;\nconst TYPE_SHIFT = 24;\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\nexport class TokenStream {\n    constructor(source, tokenize) {\n        this.setSource(source, tokenize);\n    }\n    reset() {\n        this.eof = false;\n        this.tokenIndex = -1;\n        this.tokenType = 0;\n        this.tokenStart = this.firstCharOffset;\n        this.tokenEnd = this.firstCharOffset;\n    }\n    setSource(source = '', tokenize = () => {}) {\n        source = String(source || '');\n\n        const sourceLength = source.length;\n        const offsetAndType = adoptBuffer(this.offsetAndType, source.length + 1); // +1 because of eof-token\n        const balance = adoptBuffer(this.balance, source.length + 1);\n        let tokenCount = 0;\n        let balanceCloseType = 0;\n        let balanceStart = 0;\n        let firstCharOffset = -1;\n\n        // capture buffers\n        this.offsetAndType = null;\n        this.balance = null;\n\n        tokenize(source, (type, start, end) => {\n            switch (type) {\n                default:\n                    balance[tokenCount] = sourceLength;\n                    break;\n\n                case balanceCloseType: {\n                    let balancePrev = balanceStart & OFFSET_MASK;\n                    balanceStart = balance[balancePrev];\n                    balanceCloseType = balanceStart >> TYPE_SHIFT;\n                    balance[tokenCount] = balancePrev;\n                    balance[balancePrev++] = tokenCount;\n                    for (; balancePrev < tokenCount; balancePrev++) {\n                        if (balance[balancePrev] === sourceLength) {\n                            balance[balancePrev] = tokenCount;\n                        }\n                    }\n                    break;\n                }\n\n                case LeftParenthesis:\n                case FunctionToken:\n                case LeftSquareBracket:\n                case LeftCurlyBracket:\n                    balance[tokenCount] = balanceStart;\n                    balanceCloseType = balancePair.get(type);\n                    balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                    break;\n            }\n\n            offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | end;\n            if (firstCharOffset === -1) {\n                firstCharOffset = start;\n            }\n        });\n\n        // finalize buffers\n        offsetAndType[tokenCount] = (EOF << TYPE_SHIFT) | sourceLength; // <EOF-token>\n        balance[tokenCount] = sourceLength;\n        balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\n        while (balanceStart !== 0) {\n            const balancePrev = balanceStart & OFFSET_MASK;\n            balanceStart = balance[balancePrev];\n            balance[balancePrev] = sourceLength;\n        }\n\n        this.source = source;\n        this.firstCharOffset = firstCharOffset === -1 ? 0 : firstCharOffset;\n        this.tokenCount = tokenCount;\n        this.offsetAndType = offsetAndType;\n        this.balance = balance;\n\n        this.reset();\n        this.next();\n    }\n\n    lookupType(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\n        }\n\n        return EOF;\n    }\n    lookupOffset(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\n        }\n\n        return this.source.length;\n    }\n    lookupValue(offset, referenceStr) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return cmpStr(\n                this.source,\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\n                this.offsetAndType[offset] & OFFSET_MASK,\n                referenceStr\n            );\n        }\n\n        return false;\n    }\n    getTokenStart(tokenIndex) {\n        if (tokenIndex === this.tokenIndex) {\n            return this.tokenStart;\n        }\n\n        if (tokenIndex > 0) {\n            return tokenIndex < this.tokenCount\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n        }\n\n        return this.firstCharOffset;\n    }\n    substrToCursor(start) {\n        return this.source.substring(start, this.tokenStart);\n    }\n\n    isBalanceEdge(pos) {\n        return this.balance[this.tokenIndex] < pos;\n    }\n    isDelim(code, offset) {\n        if (offset) {\n            return (\n                this.lookupType(offset) === Delim &&\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\n            );\n        }\n\n        return (\n            this.tokenType === Delim &&\n            this.source.charCodeAt(this.tokenStart) === code\n        );\n    }\n\n    skip(tokenCount) {\n        let next = this.tokenIndex + tokenCount;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.next();\n        }\n    }\n    next() {\n        let next = this.tokenIndex + 1;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.tokenEnd;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.eof = true;\n            this.tokenIndex = this.tokenCount;\n            this.tokenType = EOF;\n            this.tokenStart = this.tokenEnd = this.source.length;\n        }\n    }\n    skipSC() {\n        while (this.tokenType === WhiteSpace || this.tokenType === Comment) {\n            this.next();\n        }\n    }\n    skipUntilBalanced(startToken, stopConsume) {\n        let cursor = startToken;\n        let balanceEnd;\n        let offset;\n\n        loop:\n        for (; cursor < this.tokenCount; cursor++) {\n            balanceEnd = this.balance[cursor];\n\n            // stop scanning on balance edge that points to offset before start token\n            if (balanceEnd < startToken) {\n                break loop;\n            }\n\n            offset = cursor > 0 ? this.offsetAndType[cursor - 1] & OFFSET_MASK : this.firstCharOffset;\n\n            // check stop condition\n            switch (stopConsume(this.source.charCodeAt(offset))) {\n                case 1: // just stop\n                    break loop;\n\n                case 2: // stop & included\n                    cursor++;\n                    break loop;\n\n                default:\n                    // fast forward to the end of balanced block\n                    if (this.balance[balanceEnd] === cursor) {\n                        cursor = balanceEnd;\n                    }\n            }\n        }\n\n        this.skip(cursor - this.tokenIndex);\n    }\n\n    forEachToken(fn) {\n        for (let i = 0, offset = this.firstCharOffset; i < this.tokenCount; i++) {\n            const start = offset;\n            const item = this.offsetAndType[i];\n            const end = item & OFFSET_MASK;\n            const type = item >> TYPE_SHIFT;\n\n            offset = end;\n\n            fn(type, start, end, i);\n        }\n    }\n    dump() {\n        const tokens = new Array(this.tokenCount);\n\n        this.forEachToken((type, start, end, index) => {\n            tokens[index] = {\n                idx: index,\n                type: tokenNames[type],\n                chunk: this.source.substring(start, end),\n                balance: this.balance[index]\n            };\n        });\n\n        return tokens;\n    }\n};\n","import * as TYPE from './types.js';\nimport {\n    isNewline,\n    isName,\n    isValidEscape,\n    isNumberStart,\n    isIdentifierStart,\n    isBOM,\n    charCodeCategory,\n    WhiteSpaceCategory,\n    DigitCategory,\n    NameStartCategory,\n    NonPrintableCategory\n} from './char-code-definitions.js';\nimport {\n    cmpStr,\n    getNewlineLength,\n    findWhiteSpaceEnd,\n    consumeEscaped,\n    consumeName,\n    consumeNumber,\n    consumeBadUrlRemnants\n} from './utils.js';\n\nexport function tokenize(source, onToken) {\n    function getCharCode(offset) {\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    // § 4.3.3. Consume a numeric token\n    function consumeNumericToken() {\n        // Consume a number and let number be the result.\n        offset = consumeNumber(source, offset);\n\n        // If the next 3 input code points would start an identifier, then:\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\n            // Return the <dimension-token>.\n            type = TYPE.Dimension;\n            offset = consumeName(source, offset);\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\n        if (getCharCode(offset) === 0x0025) {\n            // Create a <percentage-token> with the same value as number, and return it.\n            type = TYPE.Percentage;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\n        type = TYPE.Number;\n    }\n\n    // § 4.3.4. Consume an ident-like token\n    function consumeIdentLikeToken() {\n        const nameStartOffset = offset;\n\n        // Consume a name, and let string be the result.\n        offset = consumeName(source, offset);\n\n        // If string’s value is an ASCII case-insensitive match for \"url\",\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n            // While the next two input code points are whitespace, consume the next input code point.\n            offset = findWhiteSpaceEnd(source, offset + 1);\n\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\n            // then create a <function-token> with its value set to string and return it.\n            if (getCharCode(offset) === 0x0022 ||\n                getCharCode(offset) === 0x0027) {\n                type = TYPE.Function;\n                offset = nameStartOffset + 4;\n                return;\n            }\n\n            // Otherwise, consume a url token, and return it.\n            consumeUrlToken();\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        // Create a <function-token> with its value set to string and return it.\n        if (getCharCode(offset) === 0x0028) {\n            type = TYPE.Function;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create an <ident-token> with its value set to string and return it.\n        type = TYPE.Ident;\n    }\n\n    // § 4.3.5. Consume a string token\n    function consumeStringToken(endingCodePoint) {\n        // This algorithm may be called with an ending code point, which denotes the code point\n        // that ends the string. If an ending code point is not specified,\n        // the current input code point is used.\n        if (!endingCodePoint) {\n            endingCodePoint = getCharCode(offset++);\n        }\n\n        // Initially create a <string-token> with its value set to the empty string.\n        type = TYPE.String;\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // ending code point\n                case endingCodePoint:\n                    // Return the <string-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <string-token>.\n                    // return;\n\n                // newline\n                case WhiteSpaceCategory:\n                    if (isNewline(code)) {\n                        // This is a parse error. Reconsume the current input code point,\n                        // create a <bad-string-token>, and return it.\n                        offset += getNewlineLength(source, offset, code);\n                        type = TYPE.BadString;\n                        return;\n                    }\n                    break;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the next input code point is EOF, do nothing.\n                    if (offset === source.length - 1) {\n                        break;\n                    }\n\n                    const nextCode = getCharCode(offset + 1);\n\n                    // Otherwise, if the next input code point is a newline, consume it.\n                    if (isNewline(nextCode)) {\n                        offset += getNewlineLength(source, offset + 1, nextCode);\n                    } else if (isValidEscape(code, nextCode)) {\n                        // Otherwise, (the stream starts with a valid escape) consume\n                        // an escaped code point and append the returned code point to\n                        // the <string-token>’s value.\n                        offset = consumeEscaped(source, offset) - 1;\n                    }\n                    break;\n\n                // anything else\n                // Append the current input code point to the <string-token>’s value.\n            }\n        }\n    }\n\n    // § 4.3.6. Consume a url token\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\n    function consumeUrlToken() {\n        // Initially create a <url-token> with its value set to the empty string.\n        type = TYPE.Url;\n\n        // Consume as much whitespace as possible.\n        offset = findWhiteSpaceEnd(source, offset);\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            const code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // U+0029 RIGHT PARENTHESIS ())\n                case 0x0029:\n                    // Return the <url-token>.\n                    offset++;\n                    return;\n\n                    // EOF\n                    // case EofCategory:\n                    // This is a parse error. Return the <url-token>.\n                    // return;\n\n                // whitespace\n                case WhiteSpaceCategory:\n                    // Consume as much whitespace as possible.\n                    offset = findWhiteSpaceEnd(source, offset);\n\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\n                    // consume it and return the <url-token>\n                    // (if EOF was encountered, this is a parse error);\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n                        if (offset < source.length) {\n                            offset++;\n                        }\n                        return;\n                    }\n\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\n                    // and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+0022 QUOTATION MARK (\")\n                // U+0027 APOSTROPHE (')\n                // U+0028 LEFT PARENTHESIS (()\n                // non-printable code point\n                case 0x0022:\n                case 0x0027:\n                case 0x0028:\n                case NonPrintableCategory:\n                    // This is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the stream starts with a valid escape, consume an escaped code point and\n                    // append the returned code point to the <url-token>’s value.\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\n                        offset = consumeEscaped(source, offset) - 1;\n                        break;\n                    }\n\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // anything else\n                // Append the current input code point to the <url-token>’s value.\n            }\n        }\n    }\n\n    // ensure source is a string\n    source = String(source || '');\n\n    const sourceLength = source.length;\n    let start = isBOM(getCharCode(0));\n    let offset = start;\n    let type;\n\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\n    // § 4.3.1. Consume a token\n    while (offset < sourceLength) {\n        const code = source.charCodeAt(offset);\n\n        switch (charCodeCategory(code)) {\n            // whitespace\n            case WhiteSpaceCategory:\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\n                type = TYPE.WhiteSpace;\n                offset = findWhiteSpaceEnd(source, offset + 1);\n                break;\n\n            // U+0022 QUOTATION MARK (\")\n            case 0x0022:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0023 NUMBER SIGN (#)\n            case 0x0023:\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // Create a <hash-token>.\n                    type = TYPE.Hash;\n\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    //     // TODO: set id flag\n                    // }\n\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\n                    offset = consumeName(source, offset + 1);\n\n                    // Return the <hash-token>.\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0027 APOSTROPHE (')\n            case 0x0027:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0028 LEFT PARENTHESIS (()\n            case 0x0028:\n                // Return a <(-token>.\n                type = TYPE.LeftParenthesis;\n                offset++;\n                break;\n\n            // U+0029 RIGHT PARENTHESIS ())\n            case 0x0029:\n                // Return a <)-token>.\n                type = TYPE.RightParenthesis;\n                offset++;\n                break;\n\n            // U+002B PLUS SIGN (+)\n            case 0x002B:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+002C COMMA (,)\n            case 0x002C:\n                // Return a <comma-token>.\n                type = TYPE.Comma;\n                offset++;\n                break;\n\n            // U+002D HYPHEN-MINUS (-)\n            case 0x002D:\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\n                    if (getCharCode(offset + 1) === 0x002D &&\n                        getCharCode(offset + 2) === 0x003E) {\n                        type = TYPE.CDC;\n                        offset = offset + 3;\n                    } else {\n                        // Otherwise, if the input stream starts with an identifier, ...\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\n                            consumeIdentLikeToken();\n                        } else {\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\n                            type = TYPE.Delim;\n                            offset++;\n                        }\n                    }\n                }\n                break;\n\n            // U+002E FULL STOP (.)\n            case 0x002E:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+002F SOLIDUS (/)\n            case 0x002F:\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\n                if (getCharCode(offset + 1) === 0x002A) {\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\n                    type = TYPE.Comment;\n                    offset = source.indexOf('*/', offset + 2);\n                    offset = offset === -1 ? source.length : offset + 2;\n                } else {\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+003A COLON (:)\n            case 0x003A:\n                // Return a <colon-token>.\n                type = TYPE.Colon;\n                offset++;\n                break;\n\n            // U+003B SEMICOLON (;)\n            case 0x003B:\n                // Return a <semicolon-token>.\n                type = TYPE.Semicolon;\n                offset++;\n                break;\n\n            // U+003C LESS-THAN SIGN (<)\n            case 0x003C:\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\n                if (getCharCode(offset + 1) === 0x0021 &&\n                    getCharCode(offset + 2) === 0x002D &&\n                    getCharCode(offset + 3) === 0x002D) {\n                    // ... consume them and return a <CDO-token>.\n                    type = TYPE.CDO;\n                    offset = offset + 4;\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0040 COMMERCIAL AT (@)\n            case 0x0040:\n                // If the next 3 input code points would start an identifier, ...\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\n                    type = TYPE.AtKeyword;\n                    offset = consumeName(source, offset + 1);\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+005B LEFT SQUARE BRACKET ([)\n            case 0x005B:\n                // Return a <[-token>.\n                type = TYPE.LeftSquareBracket;\n                offset++;\n                break;\n\n            // U+005C REVERSE SOLIDUS (\\)\n            case 0x005C:\n                // If the input stream starts with a valid escape, ...\n                if (isValidEscape(code, getCharCode(offset + 1))) {\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\n                    consumeIdentLikeToken();\n                } else {\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+005D RIGHT SQUARE BRACKET (])\n            case 0x005D:\n                // Return a <]-token>.\n                type = TYPE.RightSquareBracket;\n                offset++;\n                break;\n\n            // U+007B LEFT CURLY BRACKET ({)\n            case 0x007B:\n                // Return a <{-token>.\n                type = TYPE.LeftCurlyBracket;\n                offset++;\n                break;\n\n            // U+007D RIGHT CURLY BRACKET (})\n            case 0x007D:\n                // Return a <}-token>.\n                type = TYPE.RightCurlyBracket;\n                offset++;\n                break;\n\n            // digit\n            case DigitCategory:\n                // Reconsume the current input code point, consume a numeric token, and return it.\n                consumeNumericToken();\n                break;\n\n            // name-start code point\n            case NameStartCategory:\n                // Reconsume the current input code point, consume an ident-like token, and return it.\n                consumeIdentLikeToken();\n                break;\n\n                // EOF\n                // case EofCategory:\n                // Return an <EOF-token>.\n                // break;\n\n            // anything else\n            default:\n                // Return a <delim-token> with its value set to the current input code point.\n                type = TYPE.Delim;\n                offset++;\n        }\n\n        // put token to stream\n        onToken(type, start, start = offset);\n    }\n}\n\nexport * from './types.js';\nexport * as tokenTypes from './types.js';\nexport { default as tokenNames } from './names.js';\nexport * from './char-code-definitions.js';\nexport * from './utils.js';\nexport * from './OffsetToLocation.js';\nexport * from './TokenStream.js';\n","//\n//                              list\n//                            ┌──────┐\n//             ┌──────────────┼─head │\n//             │              │ tail─┼──────────────┐\n//             │              └──────┘              │\n//             ▼                                    ▼\n//            item        item        item        item\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\n//          │ data │    │ data │    │ data │    │ data │\n//          └──────┘    └──────┘    └──────┘    └──────┘\n//\n\nlet releasedCursors = null;\n\nexport class List {\n    static createItem(data) {\n        return {\n            prev: null,\n            next: null,\n            data\n        };\n    }\n\n    constructor() {\n        this.head = null;\n        this.tail = null;\n        this.cursor = null;\n    }\n    createItem(data) {\n        return List.createItem(data);\n    }\n\n    // cursor helpers\n    allocateCursor(prev, next) {\n        let cursor;\n\n        if (releasedCursors !== null) {\n            cursor = releasedCursors;\n            releasedCursors = releasedCursors.cursor;\n            cursor.prev = prev;\n            cursor.next = next;\n            cursor.cursor = this.cursor;\n        } else {\n            cursor = {\n                prev,\n                next,\n                cursor: this.cursor\n            };\n        }\n\n        this.cursor = cursor;\n\n        return cursor;\n    }\n    releaseCursor() {\n        const { cursor } = this;\n\n        this.cursor = cursor.cursor;\n        cursor.prev = null;\n        cursor.next = null;\n        cursor.cursor = releasedCursors;\n        releasedCursors = cursor;\n    }\n    updateCursors(prevOld, prevNew, nextOld, nextNew) {\n        let { cursor } = this;\n\n        while (cursor !== null) {\n            if (cursor.prev === prevOld) {\n                cursor.prev = prevNew;\n            }\n\n            if (cursor.next === nextOld) {\n                cursor.next = nextNew;\n            }\n\n            cursor = cursor.cursor;\n        }\n    }\n    *[Symbol.iterator]() {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            yield cursor.data;\n        }\n    }\n\n    // getters\n    get size() {\n        let size = 0;\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            size++;\n        }\n\n        return size;\n    }\n    get isEmpty() {\n        return this.head === null;\n    }\n    get first() {\n        return this.head && this.head.data;\n    }\n    get last() {\n        return this.tail && this.tail.data;\n    }\n\n    // convertors\n    fromArray(array) {\n        let cursor = null;\n        this.head = null;\n\n        for (let data of array) {\n            const item = List.createItem(data);\n\n            if (cursor !== null) {\n                cursor.next = item;\n            } else {\n                this.head = item;\n            }\n\n            item.prev = cursor;\n            cursor = item;\n        }\n\n        this.tail = cursor;\n        return this;\n    }\n    toArray() {\n        return [...this];\n    }\n    toJSON() {\n        return [...this];\n    }\n\n    // array-like methods\n    forEach(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(null, this.head);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    forEachRight(fn, thisArg = this) {\n        // push cursor\n        const cursor = this.allocateCursor(this.tail, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            fn.call(thisArg, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    reduce(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(null, this.head);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.next !== null) {\n            item = cursor.next;\n            cursor.next = item.next;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    reduceRight(fn, initialValue, thisArg = this) {\n        // push cursor\n        let cursor = this.allocateCursor(this.tail, null);\n        let acc = initialValue;\n        let item;\n\n        while (cursor.prev !== null) {\n            item = cursor.prev;\n            cursor.prev = item.prev;\n\n            acc = fn.call(thisArg, acc, item.data, item, this);\n        }\n\n        // pop cursor\n        this.releaseCursor();\n\n        return acc;\n    }\n    some(fn, thisArg = this) {\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n    map(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            result.appendData(fn.call(thisArg, cursor.data, cursor, this));\n        }\n\n        return result;\n    }\n    filter(fn, thisArg = this) {\n        const result = new List();\n\n        for (let cursor = this.head; cursor !== null; cursor = cursor.next) {\n            if (fn.call(thisArg, cursor.data, cursor, this)) {\n                result.appendData(cursor.data);\n            }\n        }\n\n        return result;\n    }\n\n    nextUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(null, start);\n\n        while (cursor.next !== null) {\n            const item = cursor.next;\n            cursor.next = item.next;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n    prevUntil(start, fn, thisArg = this) {\n        if (start === null) {\n            return;\n        }\n\n        // push cursor\n        const cursor = this.allocateCursor(start, null);\n\n        while (cursor.prev !== null) {\n            const item = cursor.prev;\n            cursor.prev = item.prev;\n            if (fn.call(thisArg, item.data, item, this)) {\n                break;\n            }\n        }\n\n        // pop cursor\n        this.releaseCursor();\n    }\n\n    // mutation\n    clear() {\n        this.head = null;\n        this.tail = null;\n    }\n    copy() {\n        const result = new List();\n\n        for (let data of this) {\n            result.appendData(data);\n        }\n\n        return result;\n    }\n    prepend(item) {\n        //      head\n        //    ^\n        // item\n        this.updateCursors(null, item, this.head, item);\n\n        // insert to the beginning of the list\n        if (this.head !== null) {\n            // new item <- first item\n            this.head.prev = item;\n            // new item -> first item\n            item.next = this.head;\n        } else {\n            // if list has no head, then it also has no tail\n            // in this case tail points to the new item\n            this.tail = item;\n        }\n\n        // head always points to new item\n        this.head = item;\n        return this;\n    }\n    prependData(data) {\n        return this.prepend(List.createItem(data));\n    }\n    append(item) {\n        return this.insert(item);\n    }\n    appendData(data) {\n        return this.insert(List.createItem(data));\n    }\n    insert(item, before = null) {\n        if (before !== null) {\n            // prev   before\n            //      ^\n            //     item\n            this.updateCursors(before.prev, item, before, item);\n\n            if (before.prev === null) {\n                // insert to the beginning of list\n                if (this.head !== before) {\n                    throw new Error('before doesn\\'t belong to list');\n                }\n                // since head points to before therefore list doesn't empty\n                // no need to check tail\n                this.head = item;\n                before.prev = item;\n                item.next = before;\n                this.updateCursors(null, item);\n            } else {\n                // insert between two items\n                before.prev.next = item;\n                item.prev = before.prev;\n                before.prev = item;\n                item.next = before;\n            }\n        } else {\n            // tail\n            //      ^\n            //      item\n            this.updateCursors(this.tail, item, null, item);\n\n            // insert to the ending of the list\n            if (this.tail !== null) {\n                // last item -> new item\n                this.tail.next = item;\n                // last item <- new item\n                item.prev = this.tail;\n            } else {\n                // if list has no tail, then it also has no head\n                // in this case head points to new item\n                this.head = item;\n            }\n\n            // tail always points to new item\n            this.tail = item;\n        }\n\n        return this;\n    }\n    insertData(data, before) {\n        return this.insert(List.createItem(data), before);\n    }\n    remove(item) {\n        //      item\n        //       ^\n        // prev     next\n        this.updateCursors(item, item.prev, item, item.next);\n\n        if (item.prev !== null) {\n            item.prev.next = item.next;\n        } else {\n            if (this.head !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.head = item.next;\n        }\n\n        if (item.next !== null) {\n            item.next.prev = item.prev;\n        } else {\n            if (this.tail !== item) {\n                throw new Error('item doesn\\'t belong to list');\n            }\n\n            this.tail = item.prev;\n        }\n\n        item.prev = null;\n        item.next = null;\n\n        return item;\n    }\n    push(data) {\n        this.insert(List.createItem(data));\n    }\n    pop() {\n        return this.tail !== null ? this.remove(this.tail) : null;\n    }\n    unshift(data) {\n        this.prepend(List.createItem(data));\n    }\n    shift() {\n        return this.head !== null ? this.remove(this.head) : null;\n    }\n    prependList(list) {\n        return this.insertList(list, this.head);\n    }\n    appendList(list) {\n        return this.insertList(list);\n    }\n    insertList(list, before) {\n        // ignore empty lists\n        if (list.head === null) {\n            return this;\n        }\n\n        if (before !== undefined && before !== null) {\n            this.updateCursors(before.prev, list.tail, before, list.head);\n\n            // insert in the middle of dist list\n            if (before.prev !== null) {\n                // before.prev <-> list.head\n                before.prev.next = list.head;\n                list.head.prev = before.prev;\n            } else {\n                this.head = list.head;\n            }\n\n            before.prev = list.tail;\n            list.tail.next = before;\n        } else {\n            this.updateCursors(this.tail, list.tail, null, list.head);\n\n            // insert to end of the list\n            if (this.tail !== null) {\n                // if destination list has a tail, then it also has a head,\n                // but head doesn't change\n                // dest tail -> source head\n                this.tail.next = list.head;\n                // dest tail <- source head\n                list.head.prev = this.tail;\n            } else {\n                // if list has no a tail, then it also has no a head\n                // in this case points head to new item\n                this.head = list.head;\n            }\n\n            // tail always start point to new item\n            this.tail = list.tail;\n        }\n\n        list.head = null;\n        list.tail = null;\n        return this;\n    }\n    replace(oldItem, newItemOrList) {\n        if ('head' in newItemOrList) {\n            this.insertList(newItemOrList, oldItem);\n        } else {\n            this.insert(newItemOrList, oldItem);\n        }\n\n        this.remove(oldItem);\n    }\n}\n","export function createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    const error = Object.create(SyntaxError.prototype);\n    const errorStack = new Error();\n\n    return Object.assign(error, {\n        name,\n        message,\n        get stack() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, `${name}: ${message}\\n`);\n        }\n    });\n};\n","import { createCustomError } from '../utils/create-custom-error.js';\n\nconst MAX_LINE_LENGTH = 100;\nconst OFFSET_CORRECTION = 60;\nconst TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment({ source, line, column }, extraLines) {\n    function processLines(start, end) {\n        return lines\n            .slice(start, end)\n            .map((line, idx) =>\n                String(start + idx + 1).padStart(maxNumLength) + ' |' + line\n            ).join('\\n');\n    }\n\n    const lines = source.split(/\\r\\n?|\\n|\\f/);\n    const startLine = Math.max(1, line - extraLines) - 1;\n    const endLine = Math.min(line + extraLines, lines.length + 1);\n    const maxNumLength = Math.max(4, String(endLine).length) + 1;\n    let cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (let i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean).join('\\n');\n}\n\nexport function SyntaxError(message, source, offset, line, column) {\n    const error = Object.assign(createCustomError('SyntaxError', message), {\n        source,\n        offset,\n        line,\n        column,\n        sourceFragment(extraLines) {\n            return sourceFragment({ source, line, column }, isNaN(extraLines) ? 0 : extraLines);\n        },\n        get formattedMessage() {\n            return (\n                `Parse error: ${message}\\n` +\n                sourceFragment({ source, line, column }, 2)\n            );\n        }\n    });\n\n    return error;\n}\n","import { WhiteSpace, Comment } from '../tokenizer/index.js';\n\nexport function readSequence(recognizer) {\n    const children = this.createList();\n    let space = false;\n    const context = {\n        recognizer\n    };\n\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n                this.next();\n                continue;\n\n            case WhiteSpace:\n                space = true;\n                this.next();\n                continue;\n        }\n\n        let child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (space) {\n            if (recognizer.onWhiteSpace) {\n                recognizer.onWhiteSpace.call(this, child, children, context);\n            }\n            space = false;\n        }\n\n        children.push(child);\n    }\n\n    if (space && recognizer.onWhiteSpace) {\n        recognizer.onWhiteSpace.call(this, null, children, context);\n    }\n\n    return children;\n};\n","import { List } from '../utils/List.js';\nimport { SyntaxError } from './SyntaxError.js';\nimport {\n    tokenize,\n    OffsetToLocation,\n    TokenStream,\n    tokenNames,\n\n    consumeNumber,\n    findWhiteSpaceStart,\n    cmpChar,\n    cmpStr,\n\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Percentage,\n    Number as NumberToken\n} from '../tokenizer/index.js';\nimport { readSequence } from './sequence.js';\n\nconst NOOP = () => {};\nconst EXCLAMATIONMARK = 0x0021;  // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;       // U+0023 NUMBER SIGN (#)\nconst SEMICOLON = 0x003B;        // U+003B SEMICOLON (;)\nconst LEFTCURLYBRACKET = 0x007B; // U+007B LEFT CURLY BRACKET ({)\nconst NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction fetchParseValues(dict) {\n    const result = Object.create(null);\n\n    for (const name in dict) {\n        const item = dict[name];\n        const fn = item.parse || item;\n\n        if (fn) {\n            result[name] = fn;\n        }\n    }\n\n    return result;\n}\n\nfunction processConfig(config) {\n    const parseConfig = {\n        context: Object.create(null),\n        scope: Object.assign(Object.create(null), config.scope),\n        atrule: fetchParseValues(config.atrule),\n        pseudo: fetchParseValues(config.pseudo),\n        node: fetchParseValues(config.node)\n    };\n\n    for (const name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n            case 'function':\n                parseConfig.context[name] = config.parseContext[name];\n                break;\n\n            case 'string':\n                parseConfig.context[name] = createParseContext(config.parseContext[name]);\n                break;\n        }\n    }\n\n    return {\n        config: parseConfig,\n        ...parseConfig,\n        ...parseConfig.node\n    };\n}\n\nexport function createParser(config) {\n    let source = '';\n    let filename = '<unknown>';\n    let needPositions = false;\n    let onParseError = NOOP;\n    let onParseErrorThrow = false;\n\n    const locationMap = new OffsetToLocation();\n    const parser = Object.assign(new TokenStream(), processConfig(config || {}), {\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence,\n\n        consumeUntilBalanceEnd: () => 0,\n        consumeUntilLeftCurlyBracket(code) {\n            return code === LEFTCURLYBRACKET ? 1 : 0;\n        },\n        consumeUntilLeftCurlyBracketOrSemicolon(code) {\n            return code === LEFTCURLYBRACKET || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilExclamationMarkOrSemicolon(code) {\n            return code === EXCLAMATIONMARK || code === SEMICOLON ? 1 : 0;\n        },\n        consumeUntilSemicolonIncluded(code) {\n            return code === SEMICOLON ? 2 : 0;\n        },\n\n        createList() {\n            return new List();\n        },\n        createSingleNodeList(node) {\n            return new List().appendData(node);\n        },\n        getFirstListNode(list) {\n            return list && list.first;\n        },\n        getLastListNode(list) {\n            return list && list.last;\n        },\n\n        parseWithFallback(consumer, fallback) {\n            const startToken = this.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (onParseErrorThrow) {\n                    throw e;\n                }\n\n                const fallbackNode = fallback.call(this, startToken);\n\n                onParseErrorThrow = true;\n                onParseError(e, fallbackNode);\n                onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType(offset) {\n            let type;\n\n            do {\n                type = this.lookupType(offset++);\n                if (type !== WhiteSpace) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        charCodeAt(offset) {\n            return offset >= 0 && offset < source.length ? source.charCodeAt(offset) : 0;\n        },\n        substring(offsetStart, offsetEnd) {\n            return source.substring(offsetStart, offsetEnd);\n        },\n        substrToCursor(start) {\n            return this.source.substring(start, this.tokenStart);\n        },\n\n        cmpChar(offset, charCode) {\n            return cmpChar(source, offset, charCode);\n        },\n        cmpStr(offsetStart, offsetEnd, str) {\n            return cmpStr(source, offsetStart, offsetEnd, str);\n        },\n\n        consume(tokenType) {\n            const start = this.tokenStart;\n\n            this.eat(tokenType);\n\n            return this.substrToCursor(start);\n        },\n        consumeFunctionName() {\n            const name = source.substring(this.tokenStart, this.tokenEnd - 1);\n\n            this.eat(FunctionToken);\n\n            return name;\n        },\n        consumeNumber(type) {\n            const number = source.substring(this.tokenStart, consumeNumber(source, this.tokenStart));\n\n            this.eat(type);\n\n            return number;\n        },\n\n        eat(tokenType) {\n            if (this.tokenType !== tokenType) {\n                const tokenName = tokenNames[tokenType].slice(0, -6).replace(/-/g, ' ').replace(/^./, m => m.toUpperCase());\n                let message = `${/[[\\](){}]/.test(tokenName) ? `\"${tokenName}\"` : tokenName} is expected`;\n                let offset = this.tokenStart;\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case Ident:\n                        // when identifier is expected but there is a function or url\n                        if (this.tokenType === FunctionToken || this.tokenType === Url) {\n                            offset = this.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case Hash:\n                        if (this.isDelim(NUMBERSIGN)) {\n                            this.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case Percentage:\n                        if (this.tokenType === NumberToken) {\n                            offset = this.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n                }\n\n                this.error(message, offset);\n            }\n\n            this.next();\n        },\n        eatIdent(name) {\n            if (this.tokenType !== Ident || this.lookupValue(0, name) === false) {\n                this.error(`Identifier \"${name}\" is expected`);\n            }\n\n            this.next();\n        },\n        eatDelim(code) {\n            if (!this.isDelim(code)) {\n                this.error(`Delim \"${String.fromCharCode(code)}\" is expected`);\n            }\n\n            this.next();\n        },\n\n        getLocation(start, end) {\n            if (needPositions) {\n                return locationMap.getLocationRange(\n                    start,\n                    end,\n                    filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList(list) {\n            if (needPositions) {\n                const head = this.getFirstListNode(list);\n                const tail = this.getLastListNode(list);\n                return locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - locationMap.startOffset : this.tokenStart,\n                    tail !== null ? tail.loc.end.offset - locationMap.startOffset : this.tokenStart,\n                    filename\n                );\n            }\n\n            return null;\n        },\n\n        error(message, offset) {\n            const location = typeof offset !== 'undefined' && offset < source.length\n                ? locationMap.getLocation(offset)\n                : this.eof\n                    ? locationMap.getLocation(findWhiteSpaceStart(source, source.length - 1))\n                    : locationMap.getLocation(this.tokenStart);\n\n            throw new SyntaxError(\n                message || 'Unexpected input',\n                source,\n                location.offset,\n                location.line,\n                location.column\n            );\n        }\n    });\n\n    const parse = function(source_, options) {\n        source = source_;\n        options = options || {};\n\n        parser.setSource(source, tokenize);\n        locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        filename = options.filename || '<unknown>';\n        needPositions = Boolean(options.positions);\n        onParseError = typeof options.onParseError === 'function' ? options.onParseError : NOOP;\n        onParseErrorThrow = false;\n\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        const { context = 'default', onComment } = options;\n\n        if (context in parser.context === false) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        if (typeof onComment === 'function') {\n            parser.forEachToken((type, start, end) => {\n                if (type === Comment) {\n                    const loc = parser.getLocation(start, end);\n                    const value = cmpStr(source, end - 2, end, '*/')\n                        ? source.slice(start + 2, end - 2)\n                        : source.slice(start + 2, end);\n\n                    onComment(value, loc);\n                }\n            });\n        }\n\n        const ast = parser.context[context].call(parser, options);\n\n        if (!parser.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n\n    return Object.assign(parse, {\n        SyntaxError,\n        config: parser.config\n    });\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\nvar MAX_CACHED_INPUTS = 32;\n\n/**\n * Takes some function `f(input) -> result` and returns a memoized version of\n * `f`.\n *\n * We keep at most `MAX_CACHED_INPUTS` memoized results of `f` alive. The\n * memoization is a dumb-simple, linear least-recently-used cache.\n */\nfunction lruMemoize(f) {\n  var cache = [];\n\n  return function(input) {\n    for (var i = 0; i < cache.length; i++) {\n      if (cache[i].input === input) {\n        var temp = cache[0];\n        cache[0] = cache[i];\n        cache[i] = temp;\n        return cache[0].result;\n      }\n    }\n\n    var result = f(input);\n\n    cache.unshift({\n      input,\n      result,\n    });\n\n    if (cache.length > MAX_CACHED_INPUTS) {\n      cache.pop();\n    }\n\n    return result;\n  };\n}\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nvar normalize = lruMemoize(function normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n  // Split the path into parts between `/` characters. This is much faster than\n  // using `.split(/\\/+/g)`.\n  var parts = [];\n  var start = 0;\n  var i = 0;\n  while (true) {\n    start = i;\n    i = path.indexOf(\"/\", start);\n    if (i === -1) {\n      parts.push(path.slice(start));\n      break;\n    } else {\n      parts.push(path.slice(start, i));\n      while (i < path.length && path[i] === \"/\") {\n        i++;\n      }\n    }\n  }\n\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n});\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\nfunction compareByOriginalPositionsNoSource(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositionsNoSource = compareByOriginalPositionsNoSource;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction compareByGeneratedPositionsDeflatedNoLine(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflatedNoLine = compareByGeneratedPositionsDeflatedNoLine;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._ignoreInvalidMapping = util.getArg(aArgs, 'ignoreInvalidMapping', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer, generatorOps) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator(Object.assign(generatorOps || {}, {\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    }));\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      if (this._validateMapping(generated, original, source, name) === false) {\n        return;\n      }\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n      var message = 'original.line and original.column are not numbers -- you probably meant to omit ' +\n      'the original mapping entirely and only map the generated position. If so, pass ' +\n      'null for the original mapping instead of an object with empty or null values.'\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message);\n      }\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      var message = 'Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      });\n\n      if (this._ignoreInvalidMapping) {\n        if (typeof console !== 'undefined' && console.warn) {\n          console.warn(message);\n        }\n        return false;\n      } else {\n        throw new Error(message)\n      }\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","import { SourceMapGenerator } from 'source-map-js/lib/source-map-generator.js';\n\nconst trackNodes = new Set(['Atrule', 'Selector', 'Declaration']);\n\nexport function generateSourceMap(handlers) {\n    const map = new SourceMapGenerator();\n    const generated = {\n        line: 1,\n        column: 0\n    };\n    const original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    const activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    const activatedMapping = {\n        generated: activatedGenerated\n    };\n    let line = 1;\n    let column = 0;\n    let sourceMappingActive = false;\n\n    const origHandlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.has(node.type)) {\n            const nodeLine = node.loc.start.line;\n            const nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original,\n                    generated\n                });\n            }\n        }\n\n        origHandlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.has(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    const origHandlersEmit = handlers.emit;\n    handlers.emit = function(value, type, auto) {\n        for (let i = 0; i < value.length; i++) {\n            if (value.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        origHandlersEmit(value, type, auto);\n    };\n\n    const origHandlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: origHandlersResult(),\n            map\n        };\n    };\n\n    return handlers;\n};\n","import {\n    WhiteSpace,\n    Delim,\n    Ident,\n    Function as FunctionToken,\n    Url,\n    BadUrl,\n    AtKeyword,\n    Hash,\n    Percentage,\n    Dimension,\n    Number as NumberToken,\n    String as StringToken,\n    Colon,\n    LeftParenthesis,\n    RightParenthesis,\n    CDC\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n\nconst code = (type, value) => {\n    if (type === Delim) {\n        type = value;\n    }\n\n    if (typeof type === 'string') {\n        const charCode = type.charCodeAt(0);\n        return charCode > 0x7F ? 0x8000 : charCode << 8;\n    }\n\n    return type;\n};\n\n// https://www.w3.org/TR/css-syntax-3/#serialization\n// The only requirement for serialization is that it must \"round-trip\" with parsing,\n// that is, parsing the stylesheet must produce the same data structures as parsing,\n// serializing, and parsing again, except for consecutive <whitespace-token>s,\n// which may be collapsed into a single token.\n\nconst specPairs = [\n    [Ident, Ident],\n    [Ident, FunctionToken],\n    [Ident, Url],\n    [Ident, BadUrl],\n    [Ident, '-'],\n    [Ident, NumberToken],\n    [Ident, Percentage],\n    [Ident, Dimension],\n    [Ident, CDC],\n    [Ident, LeftParenthesis],\n\n    [AtKeyword, Ident],\n    [AtKeyword, FunctionToken],\n    [AtKeyword, Url],\n    [AtKeyword, BadUrl],\n    [AtKeyword, '-'],\n    [AtKeyword, NumberToken],\n    [AtKeyword, Percentage],\n    [AtKeyword, Dimension],\n    [AtKeyword, CDC],\n\n    [Hash, Ident],\n    [Hash, FunctionToken],\n    [Hash, Url],\n    [Hash, BadUrl],\n    [Hash, '-'],\n    [Hash, NumberToken],\n    [Hash, Percentage],\n    [Hash, Dimension],\n    [Hash, CDC],\n\n    [Dimension, Ident],\n    [Dimension, FunctionToken],\n    [Dimension, Url],\n    [Dimension, BadUrl],\n    [Dimension, '-'],\n    [Dimension, NumberToken],\n    [Dimension, Percentage],\n    [Dimension, Dimension],\n    [Dimension, CDC],\n\n    ['#', Ident],\n    ['#', FunctionToken],\n    ['#', Url],\n    ['#', BadUrl],\n    ['#', '-'],\n    ['#', NumberToken],\n    ['#', Percentage],\n    ['#', Dimension],\n    ['#', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['-', Ident],\n    ['-', FunctionToken],\n    ['-', Url],\n    ['-', BadUrl],\n    ['-', '-'],\n    ['-', NumberToken],\n    ['-', Percentage],\n    ['-', Dimension],\n    ['-', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    [NumberToken, Ident],\n    [NumberToken, FunctionToken],\n    [NumberToken, Url],\n    [NumberToken, BadUrl],\n    [NumberToken, NumberToken],\n    [NumberToken, Percentage],\n    [NumberToken, Dimension],\n    [NumberToken, '%'],\n    [NumberToken, CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['@', Ident],\n    ['@', FunctionToken],\n    ['@', Url],\n    ['@', BadUrl],\n    ['@', '-'],\n    ['@', CDC], // https://github.com/w3c/csswg-drafts/pull/6874\n\n    ['.', NumberToken],\n    ['.', Percentage],\n    ['.', Dimension],\n\n    ['+', NumberToken],\n    ['+', Percentage],\n    ['+', Dimension],\n\n    ['/', '*']\n];\n// validate with scripts/generate-safe\nconst safePairs = specPairs.concat([\n    [Ident, Hash],\n\n    [Dimension, Hash],\n\n    [Hash, Hash],\n\n    [AtKeyword, LeftParenthesis],\n    [AtKeyword, StringToken],\n    [AtKeyword, Colon],\n\n    [Percentage, Percentage],\n    [Percentage, Dimension],\n    [Percentage, FunctionToken],\n    [Percentage, '-'],\n\n    [RightParenthesis, Ident],\n    [RightParenthesis, FunctionToken],\n    [RightParenthesis, Percentage],\n    [RightParenthesis, Dimension],\n    [RightParenthesis, Hash],\n    [RightParenthesis, '-']\n]);\n\nfunction createMap(pairs) {\n    const isWhiteSpaceRequired = new Set(\n        pairs.map(([prev, next]) => (code(prev) << 16 | code(next)))\n    );\n\n    return function(prevCode, type, value) {\n        const nextCode = code(type, value);\n        const nextCharCode = value.charCodeAt(0);\n        const emitWs =\n            (nextCharCode === HYPHENMINUS &&\n                type !== Ident &&\n                type !== FunctionToken &&\n                type !== CDC) ||\n            (nextCharCode === PLUSSIGN)\n                ? isWhiteSpaceRequired.has(prevCode << 16 | nextCharCode << 8)\n                : isWhiteSpaceRequired.has(prevCode << 16 | nextCode);\n\n        if (emitWs) {\n            this.emit(' ', WhiteSpace, true);\n        }\n\n        return nextCode;\n    };\n}\n\nexport const spec = createMap(specPairs);\nexport const safe = createMap(safePairs);\n","import { tokenize, Delim, WhiteSpace } from '../tokenizer/index.js';\nimport { generateSourceMap } from './sourceMap.js';\nimport * as tokenBefore from './token-before.js';\n\nconst REVERSESOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\n\nfunction processChildren(node, delimeter) {\n    if (typeof delimeter === 'function') {\n        let prev = null;\n\n        node.children.forEach(node => {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        });\n\n        return;\n    }\n\n    node.children.forEach(this.node, this);\n}\n\nfunction processChunk(chunk) {\n    tokenize(chunk, (type, start, end) => {\n        this.token(type, chunk.slice(start, end));\n    });\n}\n\nexport function createGenerator(config) {\n    const types = new Map();\n\n    for (let name in config.node) {\n        const item = config.node[name];\n        const fn = item.generate || item;\n\n        if (typeof fn === 'function') {\n            types.set(name, item.generate || item);\n        }\n    }\n\n    return function(node, options) {\n        let buffer = '';\n        let prevCode = 0;\n        let handlers = {\n            node(node) {\n                if (types.has(node.type)) {\n                    types.get(node.type).call(publicApi, node);\n                } else {\n                    throw new Error('Unknown node type: ' + node.type);\n                }\n            },\n            tokenBefore: tokenBefore.safe,\n            token(type, value) {\n                prevCode = this.tokenBefore(prevCode, type, value);\n\n                this.emit(value, type, false);\n\n                if (type === Delim && value.charCodeAt(0) === REVERSESOLIDUS) {\n                    this.emit('\\n', WhiteSpace, true);\n                }\n            },\n            emit(value) {\n                buffer += value;\n            },\n            result() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = generateSourceMap(handlers);\n            }\n\n            if (options.mode in tokenBefore) {\n                handlers.tokenBefore = tokenBefore[options.mode];\n            }\n        }\n\n        const publicApi = {\n            node: (node) => handlers.node(node),\n            children: processChildren,\n            token: (type, value) => handlers.token(type, value),\n            tokenize: processChunk\n        };\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n};\n","import { List } from '../utils/List.js';\n\nexport function createConvertor(walk) {\n    return {\n        fromPlainObject(ast) {\n            walk(ast, {\n                enter(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject(ast) {\n            walk(ast, {\n                leave(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n","const { hasOwnProperty } = Object.prototype;\nconst noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const walkers = [];\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        let fieldTypes = structure[key];\n        const walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(fieldTypes)) {\n            fieldTypes = [fieldTypes];\n        }\n\n        for (const fieldType of fieldTypes) {\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    const types = {};\n\n    for (const name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            const nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    const fields = config.fields.slice();\n    const contextName = config.context;\n    const useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk, walkReducer) {\n        let prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (const field of fields) {\n            const ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    const breakWalk = reverse\n                        ? ref.reduceRight(walkReducer, false)\n                        : ref.reduce(walkReducer, false);\n\n                    if (breakWalk) {\n                        return true;\n                    }\n                } else if (walk(ref)) {\n                    return true;\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap({\n    StyleSheet,\n    Atrule,\n    Rule,\n    Block,\n    DeclarationList\n}) {\n    return {\n        Atrule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Rule: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block\n        },\n        Declaration: {\n            StyleSheet,\n            Atrule,\n            Rule,\n            Block,\n            DeclarationList\n        }\n    };\n}\n\nexport function createWalker(config) {\n    const types = getTypesFromConfig(config);\n    const iteratorsNatural = {};\n    const iteratorsReverse = {};\n    const breakWalk = Symbol('break-walk');\n    const skipNode = Symbol('skip-node');\n\n    for (const name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    const fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    const fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    const walk = function(root, options) {\n        function walkNode(node, item, list) {\n            const enterRet = enter.call(context, node, item, list);\n\n            if (enterRet === breakWalk) {\n                return true;\n            }\n\n            if (enterRet === skipNode) {\n                return false;\n            }\n\n            if (iterators.hasOwnProperty(node.type)) {\n                if (iterators[node.type](node, context, walkNode, walkReducer)) {\n                    return true;\n                }\n            }\n\n            if (leave.call(context, node, item, list) === breakWalk) {\n                return true;\n            }\n\n            return false;\n        }\n\n        let enter = noop;\n        let leave = noop;\n        let iterators = iteratorsNatural;\n        let walkReducer = (ret, data, item, list) => ret || walkNode(data, item, list);\n        const context = {\n            break: breakWalk,\n            skip: skipNode,\n\n            root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).sort().join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        walkNode(root);\n    };\n\n    walk.break = breakWalk;\n    walk.skip = skipNode;\n\n    walk.find = function(ast, fn) {\n        let found = null;\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found = node;\n                return breakWalk;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        let found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter(node, item, list) {\n                if (fn.call(this, node, item, list)) {\n                    found = node;\n                    return breakWalk;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        const found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n","function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    const { min, max, comma } = multiplier;\n\n    if (min === 0 && max === 0) {\n        return comma ? '#?' : '*';\n    }\n\n    if (min === 0 && max === 1) {\n        return '?';\n    }\n\n    if (min === 1 && max === 0) {\n        return comma ? '#' : '+';\n    }\n\n    if (min === 1 && max === 1) {\n        return '';\n    }\n\n    return (\n        (comma ? '#' : '') +\n        (min === max\n            ? '{' + min + '}'\n            : '{' + min + ',' + (max !== 0 ? max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    const combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    const result = node.terms\n        .map(term => internalGenerate(term, decorate, forceBraces, compact))\n        .join(combinator);\n\n    if (node.explicit || forceBraces) {\n        return (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction internalGenerate(node, decorate, forceBraces, compact) {\n    let result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                internalGenerate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nexport function generate(node, options) {\n    let decorate = noop;\n    let forceBraces = false;\n    let compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return internalGenerate(node, decorate, forceBraces, compact);\n};\n","import { createCustomError } from '../utils/create-custom-error.js';\nimport { generate } from '../definition-syntax/generate.js';\n\nconst defaultLoc = { offset: 0, line: 1, column: 1 };\n\nfunction locateMismatch(matchResult, node) {\n    const tokens = matchResult.tokens;\n    const longestMatch = matchResult.longestMatch;\n    const mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    const badNode = mismatchNode !== node ? mismatchNode : null;\n    let mismatchOffset = 0;\n    let mismatchLength = 0;\n    let entries = 0;\n    let css = '';\n    let start;\n    let end;\n\n    for (let i = 0; i < tokens.length; i++) {\n        const token = tokens[i].value;\n\n        if (i === longestMatch) {\n            mismatchLength = token.length;\n            mismatchOffset = css.length;\n        }\n\n        if (badNode !== null && tokens[i].node === badNode) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += token;\n    }\n\n    if (longestMatch === tokens.length || entries > 1) { // last\n        start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n        end = buildLoc(start);\n    } else {\n        start = fromLoc(badNode, 'start') ||\n            buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n        end = fromLoc(badNode, 'end') ||\n            buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n\n    return {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    };\n}\n\nfunction fromLoc(node, point) {\n    const value = node && node.loc && node.loc[point];\n\n    if (value) {\n        return 'line' in value ? buildLoc(value) : value;\n    }\n\n    return null;\n}\n\nfunction buildLoc({ offset, line, column }, extra) {\n    const loc = {\n        offset,\n        line,\n        column\n    };\n\n    if (extra) {\n        const lines = extra.split(/\\n|\\r\\n?|\\f/);\n\n        loc.offset += extra.length;\n        loc.line += lines.length - 1;\n        loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n\n    return loc;\n}\n\nexport const SyntaxReferenceError = function(type, referenceName) {\n    const error = createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nexport const SyntaxMatchError = function(message, syntax, node, matchResult) {\n    const error = createCustomError('SyntaxMatchError', message);\n    const {\n        css,\n        mismatchOffset,\n        mismatchLength,\n        start,\n        end\n    } = locateMismatch(matchResult, node);\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    Object.assign(error, start);\n    error.loc = {\n        source: (node && node.loc && node.loc.source) || '<unknown>',\n        start,\n        end\n    };\n\n    return error;\n};\n","const keywords = new Map();\nconst properties = new Map();\nconst HYPHENMINUS = 45; // '-'.charCodeAt()\n\nexport const keyword = getKeywordDescriptor;\nexport const property = getPropertyDescriptor;\nexport const vendorPrefix = getVendorPrefix;\nexport function isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            const secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (keywords.has(keyword)) {\n        return keywords.get(keyword);\n    }\n\n    const name = keyword.toLowerCase();\n    let descriptor = keywords.get(name);\n\n    if (descriptor === undefined) {\n        const custom = isCustomProperty(name, 0);\n        const vendor = !custom ? getVendorPrefix(name, 0) : '';\n        descriptor = Object.freeze({\n            basename: name.substr(vendor.length),\n            name,\n            prefix: vendor,\n            vendor,\n            custom\n        });\n    }\n\n    keywords.set(keyword, descriptor);\n\n    return descriptor;\n}\n\nfunction getPropertyDescriptor(property) {\n    if (properties.has(property)) {\n        return properties.get(property);\n    }\n\n    let name = property;\n    let hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    const custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (properties.has(name)) {\n            const descriptor = properties.get(name);\n            properties.set(property, descriptor);\n            return descriptor;\n        }\n    }\n\n    const vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    const prefix = name.substr(0, hack.length + vendor.length);\n    const descriptor = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack,\n        vendor,\n        prefix,\n        custom\n    });\n\n    properties.set(property, descriptor);\n\n    return descriptor;\n}\n","// https://drafts.csswg.org/css-cascade-5/\nexport const cssWideKeywords = [\n    'initial',\n    'inherit',\n    'unset',\n    'revert',\n    'revert-layer'\n];\n","import {\n    isDigit,\n    cmpChar,\n    Delim,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WhiteSpace || token.type === Comment)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    const code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    let sign = false;\n    let offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== NumberToken) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null || token.type !== NumberToken) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        const code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport default function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    let offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === NumberToken) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === Ident && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === Ident || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === Ident)) {\n        // just ignore a plus\n        if (token.type !== Ident) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === Dimension) {\n        let code = token.value.charCodeAt(0);\n        let sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n        let i = sign;\n\n        for (; i < token.value.length; i++) {\n            if (!isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n};\n","import {\n    isHexDigit,\n    cmpChar,\n    Ident,\n    Delim,\n    Number as NumberToken,\n    Dimension\n} from '../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nconst U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === Delim && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    let hexlen = 0;\n\n    for (let pos = offset; pos < token.value.length; pos++) {\n        const code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            hexSequence(token, offset + hexlen + 1, false);\n            return 6; // dissallow following question marks\n        }\n\n        if (!isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        };\n    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nexport default function urange(token, getNextToken) {\n    let length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== Ident || !cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === Ident) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NumberToken) {\n        const consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === Dimension || token.type === NumberToken) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === Dimension) {\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n};\n","import { cssWideKeywords } from './generic-const.js';\nimport anPlusB from './generic-an-plus-b.js';\nimport urange from './generic-urange.js';\nimport {\n    isIdentifierStart,\n    isHexDigit,\n    isDigit,\n    cmpStr,\n    consumeNumber,\n\n    Ident,\n    Function as FunctionToken,\n    AtKeyword,\n    Hash,\n    String as StringToken,\n    BadString,\n    Url,\n    BadUrl,\n    Delim,\n    Number as NumberToken,\n    Percentage,\n    Dimension,\n    WhiteSpace,\n    CDO,\n    CDC,\n    Colon,\n    Semicolon,\n    Comma,\n    LeftSquareBracket,\n    RightSquareBracket,\n    LeftParenthesis,\n    RightParenthesis,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../tokenizer/index.js';\n\nconst calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\nconst balancePair = new Map([\n    [FunctionToken, RightParenthesis],\n    [LeftParenthesis, RightParenthesis],\n    [LeftSquareBracket, RightSquareBracket],\n    [LeftCurlyBracket, RightCurlyBracket]\n]);\n\n// safe char code getter\nfunction charCodeAt(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (let i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        charCodeAt(str, offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(charCodeAt(str, offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        const num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        // FIXME: when opts.min is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.min !== null && num < opts.min && typeof opts.min !== 'string') {\n            return true;\n        }\n\n        // FIXME: when opts.max is a string it's a dimension, skip a range validation\n        // for now since it requires a type covertation which is not implmented yet\n        if (opts.max !== null && num > opts.max && typeof opts.max !== 'string') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // balanced token consuming\n    scan:\n    do {\n        switch (token.type) {\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n\n                if (balanceStash.length === 0) {\n                    length++;\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === FunctionToken && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    const name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCodeAt(token.value, 0) !== 0x002D || charCodeAt(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    const length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (let i = 1; i < length; i++) {\n        if (!isHexDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCodeAt(token.value, 1), charCodeAt(token.value, 2), charCodeAt(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence does not contain ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case Semicolon:\n                if (balanceCloseType === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case Delim:\n                if (balanceCloseType === 0 && token.value === '!') {\n                    break scan;\n                }\n\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    let balanceCloseType = 0;\n    let balanceStash = [];\n    let length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case BadString:\n            case BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case RightCurlyBracket:\n            case RightParenthesis:\n            case RightSquareBracket:\n                if (token.type !== balanceCloseType) {\n                    break scan;\n                }\n\n                balanceCloseType = balanceStash.pop();\n                break;\n\n            case FunctionToken:\n            case LeftParenthesis:\n            case LeftSquareBracket:\n            case LeftCurlyBracket:\n                balanceStash.push(balanceCloseType);\n                balanceCloseType = balancePair.get(token.type);\n                break;\n        }\n\n        length++;\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    if (type) {\n        type = new Set(type);\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== Dimension) {\n            return 0;\n        }\n\n        const numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            const reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            const unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.has(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === NumberToken) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    const numberEnd = consumeNumber(token.value, 0);\n    const isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== NumberToken) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    let i = charCodeAt(token.value, 0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            charCodeAt(token.value, 0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(charCodeAt(token.value, i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// token types\nexport const tokenTypes = {\n    'ident-token': tokenType(Ident),\n    'function-token': tokenType(FunctionToken),\n    'at-keyword-token': tokenType(AtKeyword),\n    'hash-token': tokenType(Hash),\n    'string-token': tokenType(StringToken),\n    'bad-string-token': tokenType(BadString),\n    'url-token': tokenType(Url),\n    'bad-url-token': tokenType(BadUrl),\n    'delim-token': tokenType(Delim),\n    'number-token': tokenType(NumberToken),\n    'percentage-token': tokenType(Percentage),\n    'dimension-token': tokenType(Dimension),\n    'whitespace-token': tokenType(WhiteSpace),\n    'CDO-token': tokenType(CDO),\n    'CDC-token': tokenType(CDC),\n    'colon-token': tokenType(Colon),\n    'semicolon-token': tokenType(Semicolon),\n    'comma-token': tokenType(Comma),\n    '[-token': tokenType(LeftSquareBracket),\n    ']-token': tokenType(RightSquareBracket),\n    '(-token': tokenType(LeftParenthesis),\n    ')-token': tokenType(RightParenthesis),\n    '{-token': tokenType(LeftCurlyBracket),\n    '}-token': tokenType(RightCurlyBracket)\n};\n\n// token production types\nexport const productionTypes = {\n    // token type aliases\n    'string': tokenType(StringToken),\n    'ident': tokenType(Ident),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue\n};\n\nexport const unitGroups = [\n    'length',\n    'angle',\n    'time',\n    'frequency',\n    'resolution',\n    'flex',\n    'decibel',\n    'semitones'\n];\n\n// dimensions types depend on units set\nexport function createDemensionTypes(units) {\n    const {\n        angle,\n        decibel,\n        frequency,\n        flex,\n        length,\n        resolution,\n        semitones,\n        time\n    } = units || {};\n\n    return {\n        'dimension': calc(dimension(null)),\n        'angle': calc(dimension(angle)),\n        'decibel': calc(dimension(decibel)),\n        'frequency': calc(dimension(frequency)),\n        'flex': calc(dimension(flex)),\n        'length': calc(zero(dimension(length))),\n        'resolution': calc(dimension(resolution)),\n        'semitones': calc(dimension(semitones)),\n        'time': calc(dimension(time))\n    };\n}\n\nexport function createGenericTypes(units) {\n    return {\n        ...tokenTypes,\n        ...productionTypes,\n        ...createDemensionTypes(units)\n    };\n};\n","export const length = [\n    // absolute length units https://www.w3.org/TR/css-values-3/#lengths\n    'cm', 'mm', 'q', 'in', 'pt', 'pc', 'px',\n    // font-relative length units https://drafts.csswg.org/css-values-4/#font-relative-lengths\n    'em', 'rem',\n    'ex', 'rex',\n    'cap', 'rcap',\n    'ch', 'rch',\n    'ic', 'ric',\n    'lh', 'rlh',\n    // viewport-percentage lengths https://drafts.csswg.org/css-values-4/#viewport-relative-lengths\n    'vw', 'svw', 'lvw', 'dvw',\n    'vh', 'svh', 'lvh', 'dvh',\n    'vi', 'svi', 'lvi', 'dvi',\n    'vb', 'svb', 'lvb', 'dvb',\n    'vmin', 'svmin', 'lvmin', 'dvmin',\n    'vmax', 'svmax', 'lvmax', 'dvmax',\n    // container relative lengths https://drafts.csswg.org/css-contain-3/#container-lengths\n    'cqw', 'cqh', 'cqi', 'cqb', 'cqmin', 'cqmax'\n];\nexport const angle = ['deg', 'grad', 'rad', 'turn'];    // https://www.w3.org/TR/css-values-3/#angles\nexport const time = ['s', 'ms'];                        // https://www.w3.org/TR/css-values-3/#time\nexport const frequency = ['hz', 'khz'];                 // https://www.w3.org/TR/css-values-3/#frequency\nexport const resolution = ['dpi', 'dpcm', 'dppx', 'x']; // https://www.w3.org/TR/css-values-3/#resolution\nexport const flex = ['fr'];                             // https://drafts.csswg.org/css-grid/#fr-unit\nexport const decibel = ['db'];                          // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nexport const semitones = ['st'];                        // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n","import { createCustomError } from '../utils/create-custom-error.js';\n\nexport function SyntaxError(message, input, offset) {\n    return Object.assign(createCustomError('SyntaxError', message), {\n        input,\n        offset,\n        rawMessage: message,\n        message: message + '\\n' +\n            '  ' + input + '\\n' +\n            '--' + new Array((offset || input.length) + 1).join('-') + '^'\n    });\n};\n","import { SyntaxError } from './SyntaxError.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\n\nexport class Tokenizer {\n    constructor(str) {\n        this.str = str;\n        this.pos = 0;\n    }\n    charCodeAt(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    }\n    charCode() {\n        return this.charCodeAt(this.pos);\n    }\n    nextCharCode() {\n        return this.charCodeAt(this.pos + 1);\n    }\n    nextNonWsCode(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    }\n    findWsEnd(pos) {\n        for (; pos < this.str.length; pos++) {\n            const code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    }\n    substringToPos(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    }\n    eat(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    }\n    peek() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    }\n    error(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n};\n","import { Tokenizer } from './tokenizer.js';\n\nconst TAB = 9;\nconst N = 10;\nconst F = 12;\nconst R = 13;\nconst SPACE = 32;\nconst EXCLAMATIONMARK = 33;    // !\nconst NUMBERSIGN = 35;         // #\nconst AMPERSAND = 38;          // &\nconst APOSTROPHE = 39;         // '\nconst LEFTPARENTHESIS = 40;    // (\nconst RIGHTPARENTHESIS = 41;   // )\nconst ASTERISK = 42;           // *\nconst PLUSSIGN = 43;           // +\nconst COMMA = 44;              // ,\nconst HYPERMINUS = 45;         // -\nconst LESSTHANSIGN = 60;       // <\nconst GREATERTHANSIGN = 62;    // >\nconst QUESTIONMARK = 63;       // ?\nconst COMMERCIALAT = 64;       // @\nconst LEFTSQUAREBRACKET = 91;  // [\nconst RIGHTSQUAREBRACKET = 93; // ]\nconst LEFTCURLYBRACKET = 123;  // {\nconst VERTICALLINE = 124;      // |\nconst RIGHTCURLYBRACKET = 125; // }\nconst INFINITY = 8734;         // ∞\nconst NAME_CHAR = new Uint8Array(128).map((_, idx) =>\n    /[a-zA-Z0-9\\-]/.test(String.fromCharCode(idx)) ? 1 : 0\n);\nconst COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(\n        tokenizer.findWsEnd(tokenizer.pos)\n    );\n}\n\nfunction scanWord(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code >= 128 || NAME_CHAR[code] === 0) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a keyword');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanNumber(tokenizer) {\n    let end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        const code = tokenizer.str.charCodeAt(end);\n        if (code < 48 || code > 57) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a number');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanString(tokenizer) {\n    const end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n\n    if (end === -1) {\n        tokenizer.pos = tokenizer.str.length;\n        tokenizer.error('Expect an apostrophe');\n    }\n\n    return tokenizer.substringToPos(end + 1);\n}\n\nfunction readMultiplierRange(tokenizer) {\n    let min = null;\n    let max = null;\n\n    tokenizer.eat(LEFTCURLYBRACKET);\n\n    min = scanNumber(tokenizer);\n\n    if (tokenizer.charCode() === COMMA) {\n        tokenizer.pos++;\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanNumber(tokenizer);\n        }\n    } else {\n        max = min;\n    }\n\n    tokenizer.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(tokenizer) {\n    let range = null;\n    let comma = false;\n\n    switch (tokenizer.charCode()) {\n        case ASTERISK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            tokenizer.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            tokenizer.pos++;\n\n            comma = true;\n\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(tokenizer);\n            } else if (tokenizer.charCode() === QUESTIONMARK) {\n                // https://www.w3.org/TR/css-values-4/#component-multipliers\n                // > the # and ? multipliers may be stacked as #?\n                // In this case just treat \"#?\" as a single multiplier\n                // { min: 0, max: 0, comma: true }\n                tokenizer.pos++;\n                range = {\n                    min: 0,\n                    max: 0\n                };\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(tokenizer);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(tokenizer, node) {\n    const multiplier = readMultiplier(tokenizer);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n\n        // https://www.w3.org/TR/css-values-4/#component-multipliers\n        // > The + and # multipliers may be stacked as +#;\n        // Represent \"+#\" as nested multipliers:\n        // { ...<multiplier #>,\n        //   term: {\n        //     ...<multipler +>,\n        //     term: node\n        //   }\n        // }\n        if (tokenizer.charCode() === NUMBERSIGN &&\n            tokenizer.charCodeAt(tokenizer.pos - 1) === PLUSSIGN) {\n            return maybeMultiplied(tokenizer, multiplier);\n        }\n\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(tokenizer) {\n    const ch = tokenizer.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return {\n        type: 'Token',\n        value: ch\n    };\n}\n\nfunction readProperty(tokenizer) {\n    let name;\n\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n\n    name = scanWord(tokenizer);\n\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Property',\n        name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    let min = null; // -Infinity\n    let max = null; // Infinity\n    let sign = 1;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n\n    if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        min = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            min += scanWord(tokenizer);\n        }\n    }\n\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n\n    if (tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        sign = 1;\n\n        if (tokenizer.charCode() === HYPERMINUS) {\n            tokenizer.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanNumber(tokenizer));\n\n        if (NAME_CHAR[tokenizer.charCode()] !== 0) {\n            max += scanWord(tokenizer);\n        }\n    }\n\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    return {\n        type: 'Range',\n        min,\n        max\n    };\n}\n\nfunction readType(tokenizer) {\n    let name;\n    let opts = null;\n\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n        tokenizer.pos += 2;\n        name += '()';\n    }\n\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n        scanSpaces(tokenizer);\n        opts = readTypeRange(tokenizer);\n    }\n\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Type',\n        name,\n        opts\n    });\n}\n\nfunction readKeywordOrFunction(tokenizer) {\n    const name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n        tokenizer.pos++;\n\n        return {\n            type: 'Function',\n            name\n        };\n    }\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Keyword',\n        name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms,\n            combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    let combinator;\n\n    combinators = Object.keys(combinators)\n        .sort((a, b) => COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b]);\n\n    while (combinators.length > 0) {\n        combinator = combinators.shift();\n\n        let i = 0;\n        let subgroupStart = 0;\n\n        for (; i < terms.length; i++) {\n            const term = terms[i];\n\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(tokenizer) {\n    const terms = [];\n    const combinators = {};\n    let token;\n    let prevToken = null;\n    let prevTokenPos = tokenizer.pos;\n\n    while (token = peek(tokenizer)) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    tokenizer.pos = prevTokenPos;\n                    tokenizer.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = tokenizer.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        tokenizer.pos -= prevTokenPos;\n        tokenizer.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(tokenizer) {\n    let result;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n        tokenizer.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(tokenizer) {\n    let code = tokenizer.charCode();\n\n    if (code < 128 && NAME_CHAR[code] === 1) {\n        return readKeywordOrFunction(tokenizer);\n    }\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\n\n        case LESSTHANSIGN:\n            return tokenizer.nextCharCode() === APOSTROPHE\n                ? readProperty(tokenizer)\n                : readType(tokenizer);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: tokenizer.substringToPos(\n                    tokenizer.pos + (tokenizer.nextCharCode() === VERTICALLINE ? 2 : 1)\n                )\n            };\n\n        case AMPERSAND:\n            tokenizer.pos++;\n            tokenizer.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            tokenizer.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(tokenizer, {\n                type: 'String',\n                value: scanString(tokenizer)\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanSpaces(tokenizer)\n            };\n\n        case COMMERCIALAT:\n            code = tokenizer.nextCharCode();\n\n            if (code < 128 && NAME_CHAR[code] === 1) {\n                tokenizer.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanWord(tokenizer)\n                };\n            }\n\n            return maybeToken(tokenizer);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = tokenizer.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(tokenizer);\n            }\n\n            break;\n\n        default:\n            return maybeToken(tokenizer);\n    }\n}\n\nexport function parse(source) {\n    const tokenizer = new Tokenizer(source);\n    const result = readImplicitGroup(tokenizer);\n\n    if (tokenizer.pos !== source.length) {\n        tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        return result.terms[0];\n    }\n\n    return result;\n};\n","const noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nexport function walk(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    let enter = noop;\n    let leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n","import { tokenize } from '../tokenizer/index.js';\n\nconst astToTokens = {\n    decorator(handlers) {\n        const tokens = [];\n        let curNode = null;\n\n        return {\n            ...handlers,\n            node(node) {\n                const tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            emit(value, type, auto) {\n                tokens.push({\n                    type,\n                    value,\n                    node: auto ? null : curNode\n                });\n            },\n            result() {\n                return tokens;\n            }\n        };\n    }\n};\n\nfunction stringToTokens(str) {\n    const tokens = [];\n\n    tokenize(str, (type, start, end) =>\n        tokens.push({\n            type,\n            value: str.slice(start, end),\n            node: null\n        })\n    );\n\n    return tokens;\n}\n\nexport default function(value, syntax) {\n    if (typeof value === 'string') {\n        return stringToTokens(value);\n    }\n\n    return syntax.generate(value, astToTokens);\n};\n","import { parse } from '../definition-syntax/parse.js';\n\nexport const MATCH = { type: 'Match' };\nexport const MISMATCH = { type: 'Mismatch' };\nexport const DISALLOW_EMPTY = { type: 'DisallowEmpty' };\n\nconst LEFTPARENTHESIS = 40;  // (\nconst RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ': {\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            let result = MATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            };\n\n            return result;\n        }\n\n        case '|': {\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            let result = MISMATCH;\n            let map = null;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                let term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        const key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '&&': {\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            let result = MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n\n        case '||': {\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            let result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (let i = terms.length - 1; i >= 0; i--) {\n                const term = terms[i];\n                let thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n        }\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    let result = MATCH;\n    let matchTerm = buildMatchGraphInternal(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (let i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (let i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraphInternal(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group': {\n            let result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraphInternal),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n        }\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nexport function buildMatchGraph(syntaxTree, ref) {\n    if (typeof syntaxTree === 'string') {\n        syntaxTree = parse(syntaxTree);\n    }\n\n    return {\n        type: 'MatchGraph',\n        match: buildMatchGraphInternal(syntaxTree),\n        syntax: ref || null,\n        source: syntaxTree\n    };\n}\n","import { MATCH, MISMATCH, DISALLOW_EMPTY } from './match-graph.js';\nimport * as TYPE from '../tokenizer/types.js';\n\nconst { hasOwnProperty } = Object.prototype;\nconst STUB = 0;\nconst TOKEN = 1;\nconst OPEN_SYNTAX = 2;\nconst CLOSE_SYNTAX = 3;\n\nconst EXIT_REASON_MATCH = 'Match';\nconst EXIT_REASON_MISMATCH = 'Mismatch';\nconst EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nconst ITERATION_LIMIT = 15000;\nexport let totalIterationCount = 0;\n\nfunction reverseList(list) {\n    let prev = null;\n    let next = null;\n    let item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (let i = 0; i < testStr.length; i++) {\n        const referenceCode = referenceStr.charCodeAt(i);\n        let testCode = testStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isContextEdgeDelim(token) {\n    if (token.type !== TYPE.Delim) {\n        return false;\n    }\n\n    // Fix matching for unicode-range: U+30??, U+FF00-FF9F\n    // Probably we need to check out previous match instead\n    return token.value !== '?';\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.Comma ||\n        token.type === TYPE.Function ||\n        token.type === TYPE.LeftParenthesis ||\n        token.type === TYPE.LeftSquareBracket ||\n        token.type === TYPE.LeftCurlyBracket ||\n        isContextEdgeDelim(token)\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.RightParenthesis ||\n        token.type === TYPE.RightSquareBracket ||\n        token.type === TYPE.RightCurlyBracket ||\n        (token.type === TYPE.Delim && token.value === '/')\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\n    }\n\n    function getNextToken(offset) {\n        const nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState,\n            matchStack,\n            syntaxStack,\n            thenStack,\n            tokenIndex,\n            prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState,\n            matchStack,\n            syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    let syntaxStack = null;\n    let thenStack = null;\n    let elseStack = null;\n\n    // null – stashing allowed, nothing stashed\n    // false – stashing disabled, nothing stashed\n    // anithing else – fail stashable syntaxes, some syntax stashed\n    let syntaxStash = null;\n\n    let iterationCount = 0; // count iterations and prevent infinite loop\n    let exitReason = null;\n\n    let token = null;\n    let tokenIndex = -1;\n    let longestMatch = 0;\n    let matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     const result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = MISMATCH;\n                        break;\n                    } else {\n                        state = MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer': {\n                const terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    const matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n            }\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    let name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Generic': {\n                const opts = syntaxStack !== null ? syntaxStack.opts : null;\n                const lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n            }\n\n            case 'Type':\n            case 'Property': {\n                const syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                const dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    const lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.match;\n                break;\n            }\n\n            case 'Keyword': {\n                const name = state.name;\n\n                if (token !== null) {\n                    let keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = MATCH;\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n            }\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === TYPE.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                let string = '';\n                let lastTokenIndex = tokenIndex;\n\n                for (; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    totalIterationCount += iterationCount;\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch\n    };\n}\n\nexport function matchAsList(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        let item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nexport function matchAsTree(tokens, matchGraph, syntaxes) {\n    const matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    let item = matchResult.match;\n    let host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    const hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n","export function getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (let i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    let result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nexport function isType(node, type) {\n    return testNode(this, node, match => match.type === 'Type' && match.name === type);\n}\n\nexport function isProperty(node, property) {\n    return testNode(this, node, match => match.type === 'Property' && match.name === property);\n}\n\nexport function isKeyword(node) {\n    return testNode(this, node, match => match.type === 'Keyword');\n}\n\nfunction testNode(match, node, fn) {\n    const trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n","import { List } from '../utils/List.js';\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nexport function matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            const start = getFirstMatchNode(matchNode);\n            const end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    const nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    const fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n","import { List } from '../utils/List.js';\n\nconst { hasOwnProperty } = Object.prototype;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (let key in node) {\n            let valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                valid = false;\n\n                for (let i = 0; !valid && i < fields[key].length; i++) {\n                    const fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (const key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction processStructure(name, nodeType) {\n    const structure = nodeType.structure;\n    const fields = {\n        type: String,\n        loc: true\n    };\n    const docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (const key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        const docsTypes = [];\n        const fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        for (let i = 0; i < fieldTypes.length; i++) {\n            const fieldType = fieldTypes[i];\n            if (fieldType === String || fieldType === Boolean) {\n                docsTypes.push(fieldType.name);\n            } else if (fieldType === null) {\n                docsTypes.push('null');\n            } else if (typeof fieldType === 'string') {\n                docsTypes.push('<' + fieldType + '>');\n            } else if (Array.isArray(fieldType)) {\n                docsTypes.push('List'); // TODO: use type enum\n            } else {\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\n            }\n        }\n\n        docs[key] = docsTypes.join(' | ');\n    }\n\n    return {\n        docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nexport function getStructureFromConfig(config) {\n    const structure = {};\n\n    if (config.node) {\n        for (const name in config.node) {\n            if (hasOwnProperty.call(config.node, name)) {\n                const nodeType = config.node[name];\n\n                if (nodeType.structure) {\n                    structure[name] = processStructure(name, nodeType);\n                } else {\n                    throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                }\n            }\n        }\n    }\n\n    return structure;\n};\n","import { SyntaxReferenceError, SyntaxMatchError } from './error.js';\nimport * as names from '../utils/names.js';\nimport { cssWideKeywords } from './generic-const.js';\nimport { createGenericTypes } from './generic.js';\nimport * as units from './units.js';\nimport { parse, generate, walk } from '../definition-syntax/index.js';\nimport prepareTokens from './prepare-tokens.js';\nimport { buildMatchGraph } from './match-graph.js';\nimport { matchAsTree } from './match.js';\nimport * as trace from './trace.js';\nimport { matchFragments } from './search.js';\nimport { getStructureFromConfig } from './structure.js';\n\nconst cssWideKeywordsSyntax = buildMatchGraph(cssWideKeywords.join(' | '));\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate(map[name].syntax, { compact });\n        }\n    }\n\n    return result;\n}\n\nfunction dumpAtruleMapSyntax(map, compact, syntaxAsAst) {\n    const result = {};\n\n    for (const [name, atrule] of Object.entries(map)) {\n        result[name] = {\n            prelude: atrule.prelude && (\n                syntaxAsAst\n                    ? atrule.prelude.syntax\n                    : generate(atrule.prelude.syntax, { compact })\n            ),\n            descriptors: atrule.descriptors && dumpMapSyntax(atrule.descriptors, compact, syntaxAsAst)\n        };\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (let i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction buildMatchResult(matched, error, iterations) {\n    return {\n        matched,\n        iterations,\n        error,\n        ...trace\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCssWideKeywords) {\n    const tokens = prepareTokens(value, lexer.syntax);\n    let result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCssWideKeywords) {\n        result = matchAsTree(tokens, lexer.cssWideKeywordsSyntax, lexer);\n    }\n\n    if (!useCssWideKeywords || !result.match) {\n        result = matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new SyntaxMatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nexport class Lexer {\n    constructor(config, syntax, structure) {\n        this.cssWideKeywordsSyntax = cssWideKeywordsSyntax;\n        this.syntax = syntax;\n        this.generic = false;\n        this.units = { ...units };\n        this.atrules = Object.create(null);\n        this.properties = Object.create(null);\n        this.types = Object.create(null);\n        this.structure = structure || getStructureFromConfig(config);\n\n        if (config) {\n            if (config.units) {\n                for (const group of Object.keys(units)) {\n                    if (Array.isArray(config.units[group])) {\n                        this.units[group] = config.units[group];\n                    }\n                }\n            }\n\n            if (config.types) {\n                for (const name in config.types) {\n                    this.addType_(name, config.types[name]);\n                }\n            }\n\n            if (config.generic) {\n                this.generic = true;\n                for (const [name, value] of Object.entries(createGenericTypes(this.units))) {\n                    this.addType_(name, value);\n                }\n            }\n\n            if (config.atrules) {\n                for (const name in config.atrules) {\n                    this.addAtrule_(name, config.atrules[name]);\n                }\n            }\n\n            if (config.properties) {\n                for (const name in config.properties) {\n                    this.addProperty_(name, config.properties[name]);\n                }\n            }\n        }\n    }\n\n    checkStructure(ast) {\n        function collectWarning(node, message) {\n            warns.push({ node, message });\n        }\n\n        const structure = this.structure;\n        const warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    }\n\n    createDescriptor(syntax, type, name, parent = null) {\n        const ref = {\n            type,\n            name\n        };\n        const descriptor = {\n            type,\n            name,\n            parent,\n            serializable: typeof syntax === 'string' || (syntax && typeof syntax.type === 'string'),\n            syntax: null,\n            match: null\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n        }\n\n        return descriptor;\n    }\n    addAtrule_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.atrules[name] = {\n            type: 'Atrule',\n            name: name,\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce(\n                    (map, descName) => {\n                        map[descName] = this.createDescriptor(syntax.descriptors[descName], 'AtruleDescriptor', descName, name);\n                        return map;\n                    },\n                    Object.create(null)\n                )\n                : null\n        };\n    }\n    addProperty_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    }\n    addType_(name, syntax) {\n        if (!syntax) {\n            return;\n        }\n\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n    }\n\n    checkAtruleName(atruleName) {\n        if (!this.getAtrule(atruleName)) {\n            return new SyntaxReferenceError('Unknown at-rule', '@' + atruleName);\n        }\n    }\n    checkAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude && prelude) {\n            return new SyntaxError('At-rule `@' + atruleName + '` should not contain a prelude');\n        }\n\n        if (atrule.prelude && !prelude) {\n            if (!matchSyntax(this, atrule.prelude, '', false).matched) {\n                return new SyntaxError('At-rule `@' + atruleName + '` should contain a prelude');\n            }\n        }\n    }\n    checkAtruleDescriptorName(atruleName, descriptorName) {\n        const error = this.checkAtruleName(atruleName);\n\n        if (error) {\n            return error;\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        if (!atrule.descriptors) {\n            return new SyntaxError('At-rule `@' + atruleName + '` has no known descriptors');\n        }\n\n        if (!atrule.descriptors[descriptor.name] &&\n            !atrule.descriptors[descriptor.basename]) {\n            return new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName);\n        }\n    }\n    checkPropertyName(propertyName) {\n        if (!this.getProperty(propertyName)) {\n            return new SyntaxReferenceError('Unknown property', propertyName);\n        }\n    }\n\n    matchAtrulePrelude(atruleName, prelude) {\n        const error = this.checkAtrulePrelude(atruleName, prelude);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n\n        if (!atrule.prelude) {\n            return buildMatchResult(null, null);\n        }\n\n        return matchSyntax(this, atrule.prelude, prelude || '', false);\n    }\n    matchAtruleDescriptor(atruleName, descriptorName, value) {\n        const error = this.checkAtruleDescriptorName(atruleName, descriptorName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        const atrule = this.getAtrule(atruleName);\n        const descriptor = names.keyword(descriptorName);\n\n        return matchSyntax(this, atrule.descriptors[descriptor.name] || atrule.descriptors[descriptor.basename], value, false);\n    }\n    matchDeclaration(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    }\n    matchProperty(propertyName, value) {\n        // don't match syntax for a custom property at the moment\n        if (names.property(propertyName).custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        const error = this.checkPropertyName(propertyName);\n\n        if (error) {\n            return buildMatchResult(null, error);\n        }\n\n        return matchSyntax(this, this.getProperty(propertyName), value, true);\n    }\n    matchType(typeName, value) {\n        const typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    }\n    match(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    }\n\n    findValueFragments(propertyName, value, type, name) {\n        return matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    }\n    findDeclarationValueFragments(declaration, type, name) {\n        return matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    }\n    findAllFragments(ast, type, name) {\n        const result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: (declaration) => {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }\n        });\n\n        return result;\n    }\n\n    getAtrule(atruleName, fallbackBasename = true) {\n        const atrule = names.keyword(atruleName);\n        const atruleEntry = atrule.vendor && fallbackBasename\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        return atruleEntry || null;\n    }\n    getAtrulePrelude(atruleName, fallbackBasename = true) {\n        const atrule = this.getAtrule(atruleName, fallbackBasename);\n\n        return atrule && atrule.prelude || null;\n    }\n    getAtruleDescriptor(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    }\n    getProperty(propertyName, fallbackBasename = true) {\n        const property = names.property(propertyName);\n        const propertyEntry = property.vendor && fallbackBasename\n            ? this.properties[property.name] || this.properties[property.basename]\n            : this.properties[property.name];\n\n        return propertyEntry || null;\n    }\n    getType(name) {\n        return hasOwnProperty.call(this.types, name) ? this.types[name] : null;\n    }\n\n    validate() {\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.has(name)) {\n                return broken.get(name);\n            }\n\n            broken.set(name, false);\n            if (descriptor.syntax !== null) {\n                walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    const map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    const brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!hasOwnProperty.call(map, node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\n                        broken.set(name, true);\n                    }\n                }, this);\n            }\n        }\n\n        let brokenTypes = new Map();\n        let brokenProperties = new Map();\n\n        for (const key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (const key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        brokenTypes = [...brokenTypes.keys()].filter(name => brokenTypes.get(name));\n        brokenProperties = [...brokenProperties.keys()].filter(name => brokenProperties.get(name));\n\n        if (brokenTypes.length || brokenProperties.length) {\n            return {\n                types: brokenTypes,\n                properties: brokenProperties\n            };\n        }\n\n        return null;\n    }\n    dump(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            units: this.units,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst),\n            atrules: dumpAtruleMapSyntax(this.atrules, !pretty, syntaxAsAst)\n        };\n    }\n    toString() {\n        return JSON.stringify(this.dump());\n    }\n};\n","function appendOrSet(a, b) {\n    if (typeof b === 'string' && /^\\s*\\|/.test(b)) {\n        return typeof a === 'string'\n            ? a + b\n            : b.replace(/^\\s*\\|\\s*/, '');\n    }\n\n    return b || null;\n}\n\nfunction sliceProps(obj, props) {\n    const result = Object.create(null);\n\n    for (const [key, value] of Object.entries(obj)) {\n        if (value) {\n            result[key] = {};\n            for (const prop of Object.keys(value)) {\n                if (props.includes(prop)) {\n                    result[key][prop] = value[prop];\n                }\n            }\n        }\n    }\n\n    return result;\n}\n\nexport default function mix(dest, src) {\n    const result = { ...dest };\n\n    for (const [prop, value] of Object.entries(src)) {\n        switch (prop) {\n            case 'generic':\n                result[prop] = Boolean(value);\n                break;\n\n            case 'units':\n                result[prop] = { ...dest[prop] };\n                for (const [name, patch] of Object.entries(value)) {\n                    result[prop][name] = Array.isArray(patch) ? patch : [];\n                }\n                break;\n\n            case 'atrules':\n                result[prop] = { ...dest[prop] };\n\n                for (const [name, atrule] of Object.entries(value)) {\n                    const exists = result[prop][name] || {};\n                    const current = result[prop][name] = {\n                        prelude: exists.prelude || null,\n                        descriptors: {\n                            ...exists.descriptors\n                        }\n                    };\n\n                    if (!atrule) {\n                        continue;\n                    }\n\n                    current.prelude = atrule.prelude\n                        ? appendOrSet(current.prelude, atrule.prelude)\n                        : current.prelude || null;\n\n                    for (const [descriptorName, descriptorValue] of Object.entries(atrule.descriptors || {})) {\n                        current.descriptors[descriptorName] = descriptorValue\n                            ? appendOrSet(current.descriptors[descriptorName], descriptorValue)\n                            : null;\n                    }\n\n                    if (!Object.keys(current.descriptors).length) {\n                        current.descriptors = null;\n                    }\n                }\n                break;\n\n            case 'types':\n            case 'properties':\n                result[prop] = { ...dest[prop] };\n                for (const [name, syntax] of Object.entries(value)) {\n                    result[prop][name] = appendOrSet(result[prop][name], syntax);\n                }\n                break;\n\n            case 'scope':\n                result[prop] = { ...dest[prop] };\n                for (const [name, props] of Object.entries(value)) {\n                    result[prop][name] = { ...result[prop][name], ...props };\n                }\n                break;\n\n            case 'parseContext':\n                result[prop] = {\n                    ...dest[prop],\n                    ...value\n                };\n                break;\n\n            case 'atrule':\n            case 'pseudo':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['parse']) };\n                break;\n\n            case 'node':\n                result[prop] = {\n                    ...dest[prop],\n                    ...sliceProps(value, ['name', 'structure', 'parse', 'generate', 'walkContext'])\n                };\n                break;\n        }\n    }\n\n    return result;\n}\n","import { tokenize } from '../tokenizer/index.js';\nimport { createParser } from '../parser/create.js';\nimport { createGenerator } from '../generator/create.js';\nimport { createConvertor } from '../convertor/create.js';\nimport { createWalker } from '../walker/create.js';\nimport { Lexer } from '../lexer/Lexer.js';\nimport mix from './config/mix.js';\n\nfunction createSyntax(config) {\n    const parse = createParser(config);\n    const walk = createWalker(config);\n    const generate = createGenerator(config);\n    const { fromPlainObject, toPlainObject } = createConvertor(walk);\n\n    const syntax = {\n        lexer: null,\n        createLexer: config => new Lexer(config, syntax, syntax.lexer.structure),\n\n        tokenize,\n        parse,\n        generate,\n\n        walk,\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        fromPlainObject,\n        toPlainObject,\n\n        fork(extension) {\n            const base = mix({}, config); // copy of config\n\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base, Object.assign)\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer({\n        generic: true,\n        units: config.units,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n};\n\nexport default config => createSyntax(mix({}, config));\n","export default {\n    \"generic\": true,\n    \"units\": {\n        \"angle\": [\n            \"deg\",\n            \"grad\",\n            \"rad\",\n            \"turn\"\n        ],\n        \"decibel\": [\n            \"db\"\n        ],\n        \"flex\": [\n            \"fr\"\n        ],\n        \"frequency\": [\n            \"hz\",\n            \"khz\"\n        ],\n        \"length\": [\n            \"cm\",\n            \"mm\",\n            \"q\",\n            \"in\",\n            \"pt\",\n            \"pc\",\n            \"px\",\n            \"em\",\n            \"rem\",\n            \"ex\",\n            \"rex\",\n            \"cap\",\n            \"rcap\",\n            \"ch\",\n            \"rch\",\n            \"ic\",\n            \"ric\",\n            \"lh\",\n            \"rlh\",\n            \"vw\",\n            \"svw\",\n            \"lvw\",\n            \"dvw\",\n            \"vh\",\n            \"svh\",\n            \"lvh\",\n            \"dvh\",\n            \"vi\",\n            \"svi\",\n            \"lvi\",\n            \"dvi\",\n            \"vb\",\n            \"svb\",\n            \"lvb\",\n            \"dvb\",\n            \"vmin\",\n            \"svmin\",\n            \"lvmin\",\n            \"dvmin\",\n            \"vmax\",\n            \"svmax\",\n            \"lvmax\",\n            \"dvmax\",\n            \"cqw\",\n            \"cqh\",\n            \"cqi\",\n            \"cqb\",\n            \"cqmin\",\n            \"cqmax\"\n        ],\n        \"resolution\": [\n            \"dpi\",\n            \"dpcm\",\n            \"dppx\",\n            \"x\"\n        ],\n        \"semitones\": [\n            \"st\"\n        ],\n        \"time\": [\n            \"s\",\n            \"ms\"\n        ]\n    },\n    \"types\": {\n        \"abs()\": \"abs( <calc-sum> )\",\n        \"absolute-size\": \"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large\",\n        \"acos()\": \"acos( <calc-sum> )\",\n        \"alpha-value\": \"<number>|<percentage>\",\n        \"angle-percentage\": \"<angle>|<percentage>\",\n        \"angular-color-hint\": \"<angle-percentage>\",\n        \"angular-color-stop\": \"<color>&&<color-stop-angle>?\",\n        \"angular-color-stop-list\": \"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>\",\n        \"animateable-feature\": \"scroll-position|contents|<custom-ident>\",\n        \"asin()\": \"asin( <calc-sum> )\",\n        \"atan()\": \"atan( <calc-sum> )\",\n        \"atan2()\": \"atan2( <calc-sum> , <calc-sum> )\",\n        \"attachment\": \"scroll|fixed|local\",\n        \"attr()\": \"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )\",\n        \"attr-matcher\": \"['~'|'|'|'^'|'$'|'*']? '='\",\n        \"attr-modifier\": \"i|s\",\n        \"attribute-selector\": \"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'\",\n        \"auto-repeat\": \"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"auto-track-list\": \"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?\",\n        \"axis\": \"block|inline|vertical|horizontal\",\n        \"baseline-position\": \"[first|last]? baseline\",\n        \"basic-shape\": \"<inset()>|<circle()>|<ellipse()>|<polygon()>|<path()>\",\n        \"bg-image\": \"none|<image>\",\n        \"bg-layer\": \"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"bg-position\": \"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]\",\n        \"bg-size\": \"[<length-percentage>|auto]{1,2}|cover|contain\",\n        \"blur()\": \"blur( <length> )\",\n        \"blend-mode\": \"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity\",\n        \"box\": \"border-box|padding-box|content-box\",\n        \"brightness()\": \"brightness( <number-percentage> )\",\n        \"calc()\": \"calc( <calc-sum> )\",\n        \"calc-sum\": \"<calc-product> [['+'|'-'] <calc-product>]*\",\n        \"calc-product\": \"<calc-value> ['*' <calc-value>|'/' <number>]*\",\n        \"calc-value\": \"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )\",\n        \"calc-constant\": \"e|pi|infinity|-infinity|NaN\",\n        \"cf-final-image\": \"<image>|<color>\",\n        \"cf-mixing-image\": \"<percentage>?&&<image>\",\n        \"circle()\": \"circle( [<shape-radius>]? [at <position>]? )\",\n        \"clamp()\": \"clamp( <calc-sum>#{3} )\",\n        \"class-selector\": \"'.' <ident-token>\",\n        \"clip-source\": \"<url>\",\n        \"color\": \"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<hex-color>|<named-color>|currentcolor|<deprecated-system-color>\",\n        \"color-stop\": \"<color-stop-length>|<color-stop-angle>\",\n        \"color-stop-angle\": \"<angle-percentage>{1,2}\",\n        \"color-stop-length\": \"<length-percentage>{1,2}\",\n        \"color-stop-list\": \"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>\",\n        \"combinator\": \"'>'|'+'|'~'|['||']\",\n        \"common-lig-values\": \"[common-ligatures|no-common-ligatures]\",\n        \"compat-auto\": \"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button\",\n        \"composite-style\": \"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor\",\n        \"compositing-operator\": \"add|subtract|intersect|exclude\",\n        \"compound-selector\": \"[<type-selector>? <subclass-selector>* [<pseudo-element-selector> <pseudo-class-selector>*]*]!\",\n        \"compound-selector-list\": \"<compound-selector>#\",\n        \"complex-selector\": \"<compound-selector> [<combinator>? <compound-selector>]*\",\n        \"complex-selector-list\": \"<complex-selector>#\",\n        \"conic-gradient()\": \"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"contextual-alt-values\": \"[contextual|no-contextual]\",\n        \"content-distribution\": \"space-between|space-around|space-evenly|stretch\",\n        \"content-list\": \"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+\",\n        \"content-position\": \"center|start|end|flex-start|flex-end\",\n        \"content-replacement\": \"<image>\",\n        \"contrast()\": \"contrast( [<number-percentage>] )\",\n        \"cos()\": \"cos( <calc-sum> )\",\n        \"counter\": \"<counter()>|<counters()>\",\n        \"counter()\": \"counter( <counter-name> , <counter-style>? )\",\n        \"counter-name\": \"<custom-ident>\",\n        \"counter-style\": \"<counter-style-name>|symbols( )\",\n        \"counter-style-name\": \"<custom-ident>\",\n        \"counters()\": \"counters( <counter-name> , <string> , <counter-style>? )\",\n        \"cross-fade()\": \"cross-fade( <cf-mixing-image> , <cf-final-image>? )\",\n        \"cubic-bezier-timing-function\": \"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )\",\n        \"deprecated-system-color\": \"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText\",\n        \"discretionary-lig-values\": \"[discretionary-ligatures|no-discretionary-ligatures]\",\n        \"display-box\": \"contents|none\",\n        \"display-inside\": \"flow|flow-root|table|flex|grid|ruby\",\n        \"display-internal\": \"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container\",\n        \"display-legacy\": \"inline-block|inline-list-item|inline-table|inline-flex|inline-grid\",\n        \"display-listitem\": \"<display-outside>?&&[flow|flow-root]?&&list-item\",\n        \"display-outside\": \"block|inline|run-in\",\n        \"drop-shadow()\": \"drop-shadow( <length>{2,3} <color>? )\",\n        \"east-asian-variant-values\": \"[jis78|jis83|jis90|jis04|simplified|traditional]\",\n        \"east-asian-width-values\": \"[full-width|proportional-width]\",\n        \"element()\": \"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )\",\n        \"ellipse()\": \"ellipse( [<shape-radius>{2}]? [at <position>]? )\",\n        \"ending-shape\": \"circle|ellipse\",\n        \"env()\": \"env( <custom-ident> , <declaration-value>? )\",\n        \"exp()\": \"exp( <calc-sum> )\",\n        \"explicit-track-list\": \"[<line-names>? <track-size>]+ <line-names>?\",\n        \"family-name\": \"<string>|<custom-ident>+\",\n        \"feature-tag-value\": \"<string> [<integer>|on|off]?\",\n        \"feature-type\": \"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation\",\n        \"feature-value-block\": \"<feature-type> '{' <feature-value-declaration-list> '}'\",\n        \"feature-value-block-list\": \"<feature-value-block>+\",\n        \"feature-value-declaration\": \"<custom-ident> : <integer>+ ;\",\n        \"feature-value-declaration-list\": \"<feature-value-declaration>\",\n        \"feature-value-name\": \"<custom-ident>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"filter-function\": \"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>\",\n        \"filter-function-list\": \"[<filter-function>|<url>]+\",\n        \"final-bg-layer\": \"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>\",\n        \"fixed-breadth\": \"<length-percentage>\",\n        \"fixed-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )\",\n        \"fixed-size\": \"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )\",\n        \"font-stretch-absolute\": \"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>\",\n        \"font-variant-css21\": \"[normal|small-caps]\",\n        \"font-weight-absolute\": \"normal|bold|<number [1,1000]>\",\n        \"frequency-percentage\": \"<frequency>|<percentage>\",\n        \"general-enclosed\": \"[<function-token> <any-value> )]|( <ident> <any-value> )\",\n        \"generic-family\": \"serif|sans-serif|cursive|fantasy|monospace|-apple-system\",\n        \"generic-name\": \"serif|sans-serif|cursive|fantasy|monospace\",\n        \"geometry-box\": \"<shape-box>|fill-box|stroke-box|view-box\",\n        \"gradient\": \"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>\",\n        \"grayscale()\": \"grayscale( <number-percentage> )\",\n        \"grid-line\": \"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]\",\n        \"historical-lig-values\": \"[historical-ligatures|no-historical-ligatures]\",\n        \"hsl()\": \"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hsla()\": \"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )\",\n        \"hue\": \"<number>|<angle>\",\n        \"hue-rotate()\": \"hue-rotate( <angle> )\",\n        \"hwb()\": \"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )\",\n        \"hypot()\": \"hypot( <calc-sum># )\",\n        \"image\": \"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>\",\n        \"image()\": \"image( <image-tags>? [<image-src>? , <color>?]! )\",\n        \"image-set()\": \"image-set( <image-set-option># )\",\n        \"image-set-option\": \"[<image>|<string>] [<resolution>||type( <string> )]\",\n        \"image-src\": \"<url>|<string>\",\n        \"image-tags\": \"ltr|rtl\",\n        \"inflexible-breadth\": \"<length-percentage>|min-content|max-content|auto\",\n        \"inset()\": \"inset( <length-percentage>{1,4} [round <'border-radius'>]? )\",\n        \"invert()\": \"invert( <number-percentage> )\",\n        \"keyframes-name\": \"<custom-ident>|<string>\",\n        \"keyframe-block\": \"<keyframe-selector># { <declaration-list> }\",\n        \"keyframe-block-list\": \"<keyframe-block>+\",\n        \"keyframe-selector\": \"from|to|<percentage>\",\n        \"lab()\": \"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )\",\n        \"layer()\": \"layer( <layer-name> )\",\n        \"layer-name\": \"<ident> ['.' <ident>]*\",\n        \"lch()\": \"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )\",\n        \"leader()\": \"leader( <leader-type> )\",\n        \"leader-type\": \"dotted|solid|space|<string>\",\n        \"length-percentage\": \"<length>|<percentage>\",\n        \"line-names\": \"'[' <custom-ident>* ']'\",\n        \"line-name-list\": \"[<line-names>|<name-repeat>]+\",\n        \"line-style\": \"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n        \"line-width\": \"<length>|thin|medium|thick\",\n        \"linear-color-hint\": \"<length-percentage>\",\n        \"linear-color-stop\": \"<color> <color-stop-length>?\",\n        \"linear-gradient()\": \"linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"log()\": \"log( <calc-sum> , <calc-sum>? )\",\n        \"mask-layer\": \"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>\",\n        \"mask-position\": \"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?\",\n        \"mask-reference\": \"none|<image>|<mask-source>\",\n        \"mask-source\": \"<url>\",\n        \"masking-mode\": \"alpha|luminance|match-source\",\n        \"matrix()\": \"matrix( <number>#{6} )\",\n        \"matrix3d()\": \"matrix3d( <number>#{16} )\",\n        \"max()\": \"max( <calc-sum># )\",\n        \"media-and\": \"<media-in-parens> [and <media-in-parens>]+\",\n        \"media-condition\": \"<media-not>|<media-and>|<media-or>|<media-in-parens>\",\n        \"media-condition-without-or\": \"<media-not>|<media-and>|<media-in-parens>\",\n        \"media-feature\": \"( [<mf-plain>|<mf-boolean>|<mf-range>] )\",\n        \"media-in-parens\": \"( <media-condition> )|<media-feature>|<general-enclosed>\",\n        \"media-not\": \"not <media-in-parens>\",\n        \"media-or\": \"<media-in-parens> [or <media-in-parens>]+\",\n        \"media-query\": \"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?\",\n        \"media-query-list\": \"<media-query>#\",\n        \"media-type\": \"<ident>\",\n        \"mf-boolean\": \"<mf-name>\",\n        \"mf-name\": \"<ident>\",\n        \"mf-plain\": \"<mf-name> : <mf-value>\",\n        \"mf-range\": \"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>\",\n        \"mf-value\": \"<number>|<dimension>|<ident>|<ratio>\",\n        \"min()\": \"min( <calc-sum># )\",\n        \"minmax()\": \"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )\",\n        \"mod()\": \"mod( <calc-sum> , <calc-sum> )\",\n        \"name-repeat\": \"repeat( [<integer [1,∞]>|auto-fill] , <line-names>+ )\",\n        \"named-color\": \"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen|<-non-standard-color>\",\n        \"namespace-prefix\": \"<ident>\",\n        \"ns-prefix\": \"[<ident-token>|'*']? '|'\",\n        \"number-percentage\": \"<number>|<percentage>\",\n        \"numeric-figure-values\": \"[lining-nums|oldstyle-nums]\",\n        \"numeric-fraction-values\": \"[diagonal-fractions|stacked-fractions]\",\n        \"numeric-spacing-values\": \"[proportional-nums|tabular-nums]\",\n        \"nth\": \"<an-plus-b>|even|odd\",\n        \"opacity()\": \"opacity( [<number-percentage>] )\",\n        \"overflow-position\": \"unsafe|safe\",\n        \"outline-radius\": \"<length>|<percentage>\",\n        \"page-body\": \"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>\",\n        \"page-margin-box\": \"<page-margin-box-type> '{' <declaration-list> '}'\",\n        \"page-margin-box-type\": \"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom\",\n        \"page-selector-list\": \"[<page-selector>#]?\",\n        \"page-selector\": \"<pseudo-page>+|<ident> <pseudo-page>*\",\n        \"page-size\": \"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger\",\n        \"path()\": \"path( [<fill-rule> ,]? <string> )\",\n        \"paint()\": \"paint( <ident> , <declaration-value>? )\",\n        \"perspective()\": \"perspective( [<length [0,∞]>|none] )\",\n        \"polygon()\": \"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )\",\n        \"position\": \"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]\",\n        \"pow()\": \"pow( <calc-sum> , <calc-sum> )\",\n        \"pseudo-class-selector\": \"':' <ident-token>|':' <function-token> <any-value> ')'\",\n        \"pseudo-element-selector\": \"':' <pseudo-class-selector>\",\n        \"pseudo-page\": \": [left|right|first|blank]\",\n        \"quote\": \"open-quote|close-quote|no-open-quote|no-close-quote\",\n        \"radial-gradient()\": \"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"ratio\": \"<number [0,∞]> [/ <number [0,∞]>]?\",\n        \"relative-selector\": \"<combinator>? <complex-selector>\",\n        \"relative-selector-list\": \"<relative-selector>#\",\n        \"relative-size\": \"larger|smaller\",\n        \"rem()\": \"rem( <calc-sum> , <calc-sum> )\",\n        \"repeat-style\": \"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}\",\n        \"repeating-conic-gradient()\": \"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )\",\n        \"repeating-linear-gradient()\": \"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )\",\n        \"repeating-radial-gradient()\": \"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )\",\n        \"reversed-counter-name\": \"reversed( <counter-name> )\",\n        \"rgb()\": \"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )\",\n        \"rgba()\": \"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )\",\n        \"rotate()\": \"rotate( [<angle>|<zero>] )\",\n        \"rotate3d()\": \"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )\",\n        \"rotateX()\": \"rotateX( [<angle>|<zero>] )\",\n        \"rotateY()\": \"rotateY( [<angle>|<zero>] )\",\n        \"rotateZ()\": \"rotateZ( [<angle>|<zero>] )\",\n        \"round()\": \"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )\",\n        \"rounding-strategy\": \"nearest|up|down|to-zero\",\n        \"saturate()\": \"saturate( <number-percentage> )\",\n        \"scale()\": \"scale( [<number>|<percentage>]#{1,2} )\",\n        \"scale3d()\": \"scale3d( [<number>|<percentage>]#{3} )\",\n        \"scaleX()\": \"scaleX( [<number>|<percentage>] )\",\n        \"scaleY()\": \"scaleY( [<number>|<percentage>] )\",\n        \"scaleZ()\": \"scaleZ( [<number>|<percentage>] )\",\n        \"scroller\": \"root|nearest\",\n        \"self-position\": \"center|start|end|self-start|self-end|flex-start|flex-end\",\n        \"shape-radius\": \"<length-percentage>|closest-side|farthest-side\",\n        \"sign()\": \"sign( <calc-sum> )\",\n        \"skew()\": \"skew( [<angle>|<zero>] , [<angle>|<zero>]? )\",\n        \"skewX()\": \"skewX( [<angle>|<zero>] )\",\n        \"skewY()\": \"skewY( [<angle>|<zero>] )\",\n        \"sepia()\": \"sepia( <number-percentage> )\",\n        \"shadow\": \"inset?&&<length>{2,4}&&<color>?\",\n        \"shadow-t\": \"[<length>{2,3}&&<color>?]\",\n        \"shape\": \"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )\",\n        \"shape-box\": \"<box>|margin-box\",\n        \"side-or-corner\": \"[left|right]||[top|bottom]\",\n        \"sin()\": \"sin( <calc-sum> )\",\n        \"single-animation\": \"<time>||<easing-function>||<time>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]\",\n        \"single-animation-direction\": \"normal|reverse|alternate|alternate-reverse\",\n        \"single-animation-fill-mode\": \"none|forwards|backwards|both\",\n        \"single-animation-iteration-count\": \"infinite|<number>\",\n        \"single-animation-play-state\": \"running|paused\",\n        \"single-animation-timeline\": \"auto|none|<timeline-name>|scroll( <axis>? <scroller>? )\",\n        \"single-transition\": \"[none|<single-transition-property>]||<time>||<easing-function>||<time>\",\n        \"single-transition-property\": \"all|<custom-ident>\",\n        \"size\": \"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}\",\n        \"sqrt()\": \"sqrt( <calc-sum> )\",\n        \"step-position\": \"jump-start|jump-end|jump-none|jump-both|start|end\",\n        \"step-timing-function\": \"step-start|step-end|steps( <integer> [, <step-position>]? )\",\n        \"subclass-selector\": \"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>\",\n        \"supports-condition\": \"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*\",\n        \"supports-in-parens\": \"( <supports-condition> )|<supports-feature>|<general-enclosed>\",\n        \"supports-feature\": \"<supports-decl>|<supports-selector-fn>\",\n        \"supports-decl\": \"( <declaration> )\",\n        \"supports-selector-fn\": \"selector( <complex-selector> )\",\n        \"symbol\": \"<string>|<image>|<custom-ident>\",\n        \"tan()\": \"tan( <calc-sum> )\",\n        \"target\": \"<target-counter()>|<target-counters()>|<target-text()>\",\n        \"target-counter()\": \"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )\",\n        \"target-counters()\": \"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )\",\n        \"target-text()\": \"target-text( [<string>|<url>] , [content|before|after|first-letter]? )\",\n        \"time-percentage\": \"<time>|<percentage>\",\n        \"timeline-name\": \"<custom-ident>|<string>\",\n        \"easing-function\": \"linear|<cubic-bezier-timing-function>|<step-timing-function>\",\n        \"track-breadth\": \"<length-percentage>|<flex>|min-content|max-content|auto\",\n        \"track-list\": \"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?\",\n        \"track-repeat\": \"repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )\",\n        \"track-size\": \"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )\",\n        \"transform-function\": \"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>\",\n        \"transform-list\": \"<transform-function>+\",\n        \"translate()\": \"translate( <length-percentage> , <length-percentage>? )\",\n        \"translate3d()\": \"translate3d( <length-percentage> , <length-percentage> , <length> )\",\n        \"translateX()\": \"translateX( <length-percentage> )\",\n        \"translateY()\": \"translateY( <length-percentage> )\",\n        \"translateZ()\": \"translateZ( <length> )\",\n        \"type-or-unit\": \"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%\",\n        \"type-selector\": \"<wq-name>|<ns-prefix>? '*'\",\n        \"var()\": \"var( <custom-property-name> , <declaration-value>? )\",\n        \"viewport-length\": \"auto|<length-percentage>\",\n        \"visual-box\": \"content-box|padding-box|border-box\",\n        \"wq-name\": \"<ns-prefix>? <ident-token>\",\n        \"-legacy-gradient\": \"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>\",\n        \"-legacy-linear-gradient\": \"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-repeating-linear-gradient\": \"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )\",\n        \"-legacy-linear-gradient-arguments\": \"[<angle>|<side-or-corner>]? , <color-stop-list>\",\n        \"-legacy-radial-gradient\": \"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-repeating-radial-gradient\": \"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )\",\n        \"-legacy-radial-gradient-arguments\": \"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>\",\n        \"-legacy-radial-gradient-size\": \"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover\",\n        \"-legacy-radial-gradient-shape\": \"circle|ellipse\",\n        \"-non-standard-font\": \"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body\",\n        \"-non-standard-color\": \"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text\",\n        \"-non-standard-image-rendering\": \"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast\",\n        \"-non-standard-overflow\": \"-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable\",\n        \"-non-standard-width\": \"fill-available|min-intrinsic|intrinsic|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content|-webkit-min-content|-webkit-max-content\",\n        \"-webkit-gradient()\": \"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )\",\n        \"-webkit-gradient-color-stop\": \"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )\",\n        \"-webkit-gradient-point\": \"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]\",\n        \"-webkit-gradient-radius\": \"<length>|<percentage>\",\n        \"-webkit-gradient-type\": \"linear|radial\",\n        \"-webkit-mask-box-repeat\": \"repeat|stretch|round\",\n        \"-webkit-mask-clip-style\": \"border|border-box|padding|padding-box|content|content-box|text\",\n        \"-ms-filter-function-list\": \"<-ms-filter-function>+\",\n        \"-ms-filter-function\": \"<-ms-filter-function-progid>|<-ms-filter-function-legacy>\",\n        \"-ms-filter-function-progid\": \"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]\",\n        \"-ms-filter-function-legacy\": \"<ident-token>|<function-token> <any-value>? )\",\n        \"-ms-filter\": \"<string>\",\n        \"age\": \"child|young|old\",\n        \"attr-name\": \"<wq-name>\",\n        \"attr-fallback\": \"<any-value>\",\n        \"bg-clip\": \"<box>|border|text\",\n        \"bottom\": \"<length>|auto\",\n        \"generic-voice\": \"[<age>? <gender> <integer>?]\",\n        \"gender\": \"male|female|neutral\",\n        \"left\": \"<length>|auto\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"paint\": \"none|<color>|<url> [none|<color>]?|context-fill|context-stroke\",\n        \"right\": \"<length>|auto\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"single-animation-composition\": \"replace|add|accumulate\",\n        \"svg-length\": \"<percentage>|<length>|<number>\",\n        \"svg-writing-mode\": \"lr-tb|rl-tb|tb-rl|lr|rl|tb\",\n        \"top\": \"<length>|auto\",\n        \"x\": \"<number>\",\n        \"y\": \"<number>\",\n        \"declaration\": \"<ident-token> : <declaration-value>? ['!' important]?\",\n        \"declaration-list\": \"[<declaration>? ';']* <declaration>?\",\n        \"url\": \"url( <string> <url-modifier>* )|<url-token>\",\n        \"url-modifier\": \"<ident>|<function-token> <any-value> )\",\n        \"number-zero-one\": \"<number [0,1]>\",\n        \"number-one-or-greater\": \"<number [1,∞]>\",\n        \"-non-standard-display\": \"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box\"\n    },\n    \"properties\": {\n        \"--*\": \"<declaration-value>\",\n        \"-ms-accelerator\": \"false|true\",\n        \"-ms-block-progression\": \"tb|rl|bt|lr\",\n        \"-ms-content-zoom-chaining\": \"none|chained\",\n        \"-ms-content-zooming\": \"none|zoom\",\n        \"-ms-content-zoom-limit\": \"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>\",\n        \"-ms-content-zoom-limit-max\": \"<percentage>\",\n        \"-ms-content-zoom-limit-min\": \"<percentage>\",\n        \"-ms-content-zoom-snap\": \"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>\",\n        \"-ms-content-zoom-snap-points\": \"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )\",\n        \"-ms-content-zoom-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-filter\": \"<string>\",\n        \"-ms-flow-from\": \"[none|<custom-ident>]#\",\n        \"-ms-flow-into\": \"[none|<custom-ident>]#\",\n        \"-ms-grid-columns\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-grid-rows\": \"none|<track-list>|<auto-track-list>\",\n        \"-ms-high-contrast-adjust\": \"auto|none\",\n        \"-ms-hyphenate-limit-chars\": \"auto|<integer>{1,3}\",\n        \"-ms-hyphenate-limit-lines\": \"no-limit|<integer>\",\n        \"-ms-hyphenate-limit-zone\": \"<percentage>|<length>\",\n        \"-ms-ime-align\": \"auto|after\",\n        \"-ms-overflow-style\": \"auto|none|scrollbar|-ms-autohiding-scrollbar\",\n        \"-ms-scrollbar-3dlight-color\": \"<color>\",\n        \"-ms-scrollbar-arrow-color\": \"<color>\",\n        \"-ms-scrollbar-base-color\": \"<color>\",\n        \"-ms-scrollbar-darkshadow-color\": \"<color>\",\n        \"-ms-scrollbar-face-color\": \"<color>\",\n        \"-ms-scrollbar-highlight-color\": \"<color>\",\n        \"-ms-scrollbar-shadow-color\": \"<color>\",\n        \"-ms-scrollbar-track-color\": \"<color>\",\n        \"-ms-scroll-chaining\": \"chained|none\",\n        \"-ms-scroll-limit\": \"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>\",\n        \"-ms-scroll-limit-x-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-x-min\": \"<length>\",\n        \"-ms-scroll-limit-y-max\": \"auto|<length>\",\n        \"-ms-scroll-limit-y-min\": \"<length>\",\n        \"-ms-scroll-rails\": \"none|railed\",\n        \"-ms-scroll-snap-points-x\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-points-y\": \"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )\",\n        \"-ms-scroll-snap-type\": \"none|proximity|mandatory\",\n        \"-ms-scroll-snap-x\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>\",\n        \"-ms-scroll-snap-y\": \"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>\",\n        \"-ms-scroll-translation\": \"none|vertical-to-horizontal\",\n        \"-ms-text-autospace\": \"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space\",\n        \"-ms-touch-select\": \"grippers|none\",\n        \"-ms-user-select\": \"none|element|text\",\n        \"-ms-wrap-flow\": \"auto|both|start|end|maximum|clear\",\n        \"-ms-wrap-margin\": \"<length>\",\n        \"-ms-wrap-through\": \"wrap|none\",\n        \"-moz-appearance\": \"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized\",\n        \"-moz-binding\": \"<url>|none\",\n        \"-moz-border-bottom-colors\": \"<color>+|none\",\n        \"-moz-border-left-colors\": \"<color>+|none\",\n        \"-moz-border-right-colors\": \"<color>+|none\",\n        \"-moz-border-top-colors\": \"<color>+|none\",\n        \"-moz-context-properties\": \"none|[fill|fill-opacity|stroke|stroke-opacity]#\",\n        \"-moz-float-edge\": \"border-box|content-box|margin-box|padding-box\",\n        \"-moz-force-broken-image-icon\": \"0|1\",\n        \"-moz-image-region\": \"<shape>|auto\",\n        \"-moz-orient\": \"inline|block|horizontal|vertical\",\n        \"-moz-outline-radius\": \"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?\",\n        \"-moz-outline-radius-bottomleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-bottomright\": \"<outline-radius>\",\n        \"-moz-outline-radius-topleft\": \"<outline-radius>\",\n        \"-moz-outline-radius-topright\": \"<outline-radius>\",\n        \"-moz-stack-sizing\": \"ignore|stretch-to-fit\",\n        \"-moz-text-blink\": \"none|blink\",\n        \"-moz-user-focus\": \"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none\",\n        \"-moz-user-input\": \"auto|none|enabled|disabled\",\n        \"-moz-user-modify\": \"read-only|read-write|write-only\",\n        \"-moz-window-dragging\": \"drag|no-drag\",\n        \"-moz-window-shadow\": \"default|menu|tooltip|sheet|none\",\n        \"-webkit-appearance\": \"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button\",\n        \"-webkit-border-before\": \"<'border-width'>||<'border-style'>||<color>\",\n        \"-webkit-border-before-color\": \"<color>\",\n        \"-webkit-border-before-style\": \"<'border-style'>\",\n        \"-webkit-border-before-width\": \"<'border-width'>\",\n        \"-webkit-box-reflect\": \"[above|below|right|left]? <length>? <image>?\",\n        \"-webkit-line-clamp\": \"none|<integer>\",\n        \"-webkit-mask\": \"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#\",\n        \"-webkit-mask-attachment\": \"<attachment>#\",\n        \"-webkit-mask-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-mask-composite\": \"<composite-style>#\",\n        \"-webkit-mask-image\": \"<mask-reference>#\",\n        \"-webkit-mask-origin\": \"[<box>|border|padding|content]#\",\n        \"-webkit-mask-position\": \"<position>#\",\n        \"-webkit-mask-position-x\": \"[<length-percentage>|left|center|right]#\",\n        \"-webkit-mask-position-y\": \"[<length-percentage>|top|center|bottom]#\",\n        \"-webkit-mask-repeat\": \"<repeat-style>#\",\n        \"-webkit-mask-repeat-x\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-repeat-y\": \"repeat|no-repeat|space|round\",\n        \"-webkit-mask-size\": \"<bg-size>#\",\n        \"-webkit-overflow-scrolling\": \"auto|touch\",\n        \"-webkit-tap-highlight-color\": \"<color>\",\n        \"-webkit-text-fill-color\": \"<color>\",\n        \"-webkit-text-stroke\": \"<length>||<color>\",\n        \"-webkit-text-stroke-color\": \"<color>\",\n        \"-webkit-text-stroke-width\": \"<length>\",\n        \"-webkit-touch-callout\": \"default|none\",\n        \"-webkit-user-modify\": \"read-only|read-write|read-write-plaintext-only\",\n        \"accent-color\": \"auto|<color>\",\n        \"align-content\": \"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>\",\n        \"align-items\": \"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]\",\n        \"align-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>\",\n        \"align-tracks\": \"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#\",\n        \"all\": \"initial|inherit|unset|revert|revert-layer\",\n        \"animation\": \"<single-animation>#\",\n        \"animation-composition\": \"<single-animation-composition>#\",\n        \"animation-delay\": \"<time>#\",\n        \"animation-direction\": \"<single-animation-direction>#\",\n        \"animation-duration\": \"<time>#\",\n        \"animation-fill-mode\": \"<single-animation-fill-mode>#\",\n        \"animation-iteration-count\": \"<single-animation-iteration-count>#\",\n        \"animation-name\": \"[none|<keyframes-name>]#\",\n        \"animation-play-state\": \"<single-animation-play-state>#\",\n        \"animation-timing-function\": \"<easing-function>#\",\n        \"animation-timeline\": \"<single-animation-timeline>#\",\n        \"appearance\": \"none|auto|textfield|menulist-button|<compat-auto>\",\n        \"aspect-ratio\": \"auto|<ratio>\",\n        \"azimuth\": \"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards\",\n        \"backdrop-filter\": \"none|<filter-function-list>\",\n        \"backface-visibility\": \"visible|hidden\",\n        \"background\": \"[<bg-layer> ,]* <final-bg-layer>\",\n        \"background-attachment\": \"<attachment>#\",\n        \"background-blend-mode\": \"<blend-mode>#\",\n        \"background-clip\": \"<bg-clip>#\",\n        \"background-color\": \"<color>\",\n        \"background-image\": \"<bg-image>#\",\n        \"background-origin\": \"<box>#\",\n        \"background-position\": \"<bg-position>#\",\n        \"background-position-x\": \"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#\",\n        \"background-position-y\": \"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#\",\n        \"background-repeat\": \"<repeat-style>#\",\n        \"background-size\": \"<bg-size>#\",\n        \"block-overflow\": \"clip|ellipsis|<string>\",\n        \"block-size\": \"<'width'>\",\n        \"border\": \"<line-width>||<line-style>||<color>\",\n        \"border-block\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-color\": \"<'border-top-color'>{1,2}\",\n        \"border-block-style\": \"<'border-top-style'>\",\n        \"border-block-width\": \"<'border-top-width'>\",\n        \"border-block-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-end-color\": \"<'border-top-color'>\",\n        \"border-block-end-style\": \"<'border-top-style'>\",\n        \"border-block-end-width\": \"<'border-top-width'>\",\n        \"border-block-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-block-start-color\": \"<'border-top-color'>\",\n        \"border-block-start-style\": \"<'border-top-style'>\",\n        \"border-block-start-width\": \"<'border-top-width'>\",\n        \"border-bottom\": \"<line-width>||<line-style>||<color>\",\n        \"border-bottom-color\": \"<'border-top-color'>\",\n        \"border-bottom-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-bottom-style\": \"<line-style>\",\n        \"border-bottom-width\": \"<line-width>\",\n        \"border-collapse\": \"collapse|separate\",\n        \"border-color\": \"<color>{1,4}\",\n        \"border-end-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-end-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-image\": \"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>\",\n        \"border-image-outset\": \"[<length>|<number>]{1,4}\",\n        \"border-image-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"border-image-slice\": \"<number-percentage>{1,4}&&fill?\",\n        \"border-image-source\": \"none|<image>\",\n        \"border-image-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"border-inline\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-end\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-color\": \"<'border-top-color'>{1,2}\",\n        \"border-inline-style\": \"<'border-top-style'>\",\n        \"border-inline-width\": \"<'border-top-width'>\",\n        \"border-inline-end-color\": \"<'border-top-color'>\",\n        \"border-inline-end-style\": \"<'border-top-style'>\",\n        \"border-inline-end-width\": \"<'border-top-width'>\",\n        \"border-inline-start\": \"<'border-top-width'>||<'border-top-style'>||<color>\",\n        \"border-inline-start-color\": \"<'border-top-color'>\",\n        \"border-inline-start-style\": \"<'border-top-style'>\",\n        \"border-inline-start-width\": \"<'border-top-width'>\",\n        \"border-left\": \"<line-width>||<line-style>||<color>\",\n        \"border-left-color\": \"<color>\",\n        \"border-left-style\": \"<line-style>\",\n        \"border-left-width\": \"<line-width>\",\n        \"border-radius\": \"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?\",\n        \"border-right\": \"<line-width>||<line-style>||<color>\",\n        \"border-right-color\": \"<color>\",\n        \"border-right-style\": \"<line-style>\",\n        \"border-right-width\": \"<line-width>\",\n        \"border-spacing\": \"<length> <length>?\",\n        \"border-start-end-radius\": \"<length-percentage>{1,2}\",\n        \"border-start-start-radius\": \"<length-percentage>{1,2}\",\n        \"border-style\": \"<line-style>{1,4}\",\n        \"border-top\": \"<line-width>||<line-style>||<color>\",\n        \"border-top-color\": \"<color>\",\n        \"border-top-left-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-right-radius\": \"<length-percentage>{1,2}\",\n        \"border-top-style\": \"<line-style>\",\n        \"border-top-width\": \"<line-width>\",\n        \"border-width\": \"<line-width>{1,4}\",\n        \"bottom\": \"<length>|<percentage>|auto\",\n        \"box-align\": \"start|center|end|baseline|stretch\",\n        \"box-decoration-break\": \"slice|clone\",\n        \"box-direction\": \"normal|reverse|inherit\",\n        \"box-flex\": \"<number>\",\n        \"box-flex-group\": \"<integer>\",\n        \"box-lines\": \"single|multiple\",\n        \"box-ordinal-group\": \"<integer>\",\n        \"box-orient\": \"horizontal|vertical|inline-axis|block-axis|inherit\",\n        \"box-pack\": \"start|center|end|justify\",\n        \"box-shadow\": \"none|<shadow>#\",\n        \"box-sizing\": \"content-box|border-box\",\n        \"break-after\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-before\": \"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region\",\n        \"break-inside\": \"auto|avoid|avoid-page|avoid-column|avoid-region\",\n        \"caption-side\": \"top|bottom|block-start|block-end|inline-start|inline-end\",\n        \"caret\": \"<'caret-color'>||<'caret-shape'>\",\n        \"caret-color\": \"auto|<color>\",\n        \"caret-shape\": \"auto|bar|block|underscore\",\n        \"clear\": \"none|left|right|both|inline-start|inline-end\",\n        \"clip\": \"<shape>|auto\",\n        \"clip-path\": \"<clip-source>|[<basic-shape>||<geometry-box>]|none\",\n        \"color\": \"<color>\",\n        \"print-color-adjust\": \"economy|exact\",\n        \"color-scheme\": \"normal|[light|dark|<custom-ident>]+&&only?\",\n        \"column-count\": \"<integer>|auto\",\n        \"column-fill\": \"auto|balance|balance-all\",\n        \"column-gap\": \"normal|<length-percentage>\",\n        \"column-rule\": \"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>\",\n        \"column-rule-color\": \"<color>\",\n        \"column-rule-style\": \"<'border-style'>\",\n        \"column-rule-width\": \"<'border-width'>\",\n        \"column-span\": \"none|all\",\n        \"column-width\": \"<length>|auto\",\n        \"columns\": \"<'column-width'>||<'column-count'>\",\n        \"contain\": \"none|strict|content|[[size||inline-size]||layout||style||paint]\",\n        \"contain-intrinsic-size\": \"[none|<length>|auto <length>]{1,2}\",\n        \"contain-intrinsic-block-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-height\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-inline-size\": \"none|<length>|auto <length>\",\n        \"contain-intrinsic-width\": \"none|<length>|auto <length>\",\n        \"content\": \"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?\",\n        \"content-visibility\": \"visible|auto|hidden\",\n        \"counter-increment\": \"[<counter-name> <integer>?]+|none\",\n        \"counter-reset\": \"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none\",\n        \"counter-set\": \"[<counter-name> <integer>?]+|none\",\n        \"cursor\": \"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]\",\n        \"direction\": \"ltr|rtl\",\n        \"display\": \"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>\",\n        \"empty-cells\": \"show|hide\",\n        \"filter\": \"none|<filter-function-list>|<-ms-filter-function-list>\",\n        \"flex\": \"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]\",\n        \"flex-basis\": \"content|<'width'>\",\n        \"flex-direction\": \"row|row-reverse|column|column-reverse\",\n        \"flex-flow\": \"<'flex-direction'>||<'flex-wrap'>\",\n        \"flex-grow\": \"<number>\",\n        \"flex-shrink\": \"<number>\",\n        \"flex-wrap\": \"nowrap|wrap|wrap-reverse\",\n        \"float\": \"left|right|none|inline-start|inline-end\",\n        \"font\": \"[[<'font-style'>||<font-variant-css21>||<'font-weight'>||<'font-stretch'>]? <'font-size'> [/ <'line-height'>]? <'font-family'>]|caption|icon|menu|message-box|small-caption|status-bar\",\n        \"font-family\": \"[<family-name>|<generic-family>]#\",\n        \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n        \"font-kerning\": \"auto|normal|none\",\n        \"font-language-override\": \"normal|<string>\",\n        \"font-optical-sizing\": \"auto|none\",\n        \"font-variation-settings\": \"normal|[<string> <number>]#\",\n        \"font-size\": \"<absolute-size>|<relative-size>|<length-percentage>\",\n        \"font-size-adjust\": \"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]\",\n        \"font-smooth\": \"auto|never|always|<absolute-size>|<length>\",\n        \"font-stretch\": \"<font-stretch-absolute>\",\n        \"font-style\": \"normal|italic|oblique <angle>?\",\n        \"font-synthesis\": \"none|[weight||style||small-caps]\",\n        \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-alternates\": \"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]\",\n        \"font-variant-caps\": \"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps\",\n        \"font-variant-east-asian\": \"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n        \"font-variant-ligatures\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]\",\n        \"font-variant-numeric\": \"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]\",\n        \"font-variant-position\": \"normal|sub|super\",\n        \"font-weight\": \"<font-weight-absolute>|bolder|lighter\",\n        \"forced-color-adjust\": \"auto|none\",\n        \"gap\": \"<'row-gap'> <'column-gap'>?\",\n        \"grid\": \"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>\",\n        \"grid-area\": \"<grid-line> [/ <grid-line>]{0,3}\",\n        \"grid-auto-columns\": \"<track-size>+\",\n        \"grid-auto-flow\": \"[row|column]||dense\",\n        \"grid-auto-rows\": \"<track-size>+\",\n        \"grid-column\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-column-end\": \"<grid-line>\",\n        \"grid-column-gap\": \"<length-percentage>\",\n        \"grid-column-start\": \"<grid-line>\",\n        \"grid-gap\": \"<'grid-row-gap'> <'grid-column-gap'>?\",\n        \"grid-row\": \"<grid-line> [/ <grid-line>]?\",\n        \"grid-row-end\": \"<grid-line>\",\n        \"grid-row-gap\": \"<length-percentage>\",\n        \"grid-row-start\": \"<grid-line>\",\n        \"grid-template\": \"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?\",\n        \"grid-template-areas\": \"none|<string>+\",\n        \"grid-template-columns\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"grid-template-rows\": \"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?\",\n        \"hanging-punctuation\": \"none|[first||[force-end|allow-end]||last]\",\n        \"height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"hyphenate-character\": \"auto|<string>\",\n        \"hyphens\": \"none|manual|auto\",\n        \"image-orientation\": \"from-image|<angle>|[<angle>? flip]\",\n        \"image-rendering\": \"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>\",\n        \"image-resolution\": \"[from-image||<resolution>]&&snap?\",\n        \"ime-mode\": \"auto|normal|active|inactive|disabled\",\n        \"initial-letter\": \"normal|[<number> <integer>?]\",\n        \"initial-letter-align\": \"[auto|alphabetic|hanging|ideographic]\",\n        \"inline-size\": \"<'width'>\",\n        \"input-security\": \"auto|none\",\n        \"inset\": \"<'top'>{1,4}\",\n        \"inset-block\": \"<'top'>{1,2}\",\n        \"inset-block-end\": \"<'top'>\",\n        \"inset-block-start\": \"<'top'>\",\n        \"inset-inline\": \"<'top'>{1,2}\",\n        \"inset-inline-end\": \"<'top'>\",\n        \"inset-inline-start\": \"<'top'>\",\n        \"isolation\": \"auto|isolate\",\n        \"justify-content\": \"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]\",\n        \"justify-items\": \"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]\",\n        \"justify-self\": \"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]\",\n        \"justify-tracks\": \"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#\",\n        \"left\": \"<length>|<percentage>|auto\",\n        \"letter-spacing\": \"normal|<length-percentage>\",\n        \"line-break\": \"auto|loose|normal|strict|anywhere\",\n        \"line-clamp\": \"none|<integer>\",\n        \"line-height\": \"normal|<number>|<length>|<percentage>\",\n        \"line-height-step\": \"<length>\",\n        \"list-style\": \"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>\",\n        \"list-style-image\": \"<image>|none\",\n        \"list-style-position\": \"inside|outside\",\n        \"list-style-type\": \"<counter-style>|<string>|none\",\n        \"margin\": \"[<length>|<percentage>|auto]{1,4}\",\n        \"margin-block\": \"<'margin-left'>{1,2}\",\n        \"margin-block-end\": \"<'margin-left'>\",\n        \"margin-block-start\": \"<'margin-left'>\",\n        \"margin-bottom\": \"<length>|<percentage>|auto\",\n        \"margin-inline\": \"<'margin-left'>{1,2}\",\n        \"margin-inline-end\": \"<'margin-left'>\",\n        \"margin-inline-start\": \"<'margin-left'>\",\n        \"margin-left\": \"<length>|<percentage>|auto\",\n        \"margin-right\": \"<length>|<percentage>|auto\",\n        \"margin-top\": \"<length>|<percentage>|auto\",\n        \"margin-trim\": \"none|in-flow|all\",\n        \"mask\": \"<mask-layer>#\",\n        \"mask-border\": \"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>\",\n        \"mask-border-mode\": \"luminance|alpha\",\n        \"mask-border-outset\": \"[<length>|<number>]{1,4}\",\n        \"mask-border-repeat\": \"[stretch|repeat|round|space]{1,2}\",\n        \"mask-border-slice\": \"<number-percentage>{1,4} fill?\",\n        \"mask-border-source\": \"none|<image>\",\n        \"mask-border-width\": \"[<length-percentage>|<number>|auto]{1,4}\",\n        \"mask-clip\": \"[<geometry-box>|no-clip]#\",\n        \"mask-composite\": \"<compositing-operator>#\",\n        \"mask-image\": \"<mask-reference>#\",\n        \"mask-mode\": \"<masking-mode>#\",\n        \"mask-origin\": \"<geometry-box>#\",\n        \"mask-position\": \"<position>#\",\n        \"mask-repeat\": \"<repeat-style>#\",\n        \"mask-size\": \"<bg-size>#\",\n        \"mask-type\": \"luminance|alpha\",\n        \"masonry-auto-flow\": \"[pack|next]||[definite-first|ordered]\",\n        \"math-depth\": \"auto-add|add( <integer> )|<integer>\",\n        \"math-shift\": \"normal|compact\",\n        \"math-style\": \"normal|compact\",\n        \"max-block-size\": \"<'max-width'>\",\n        \"max-height\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"max-inline-size\": \"<'max-width'>\",\n        \"max-lines\": \"none|<integer>\",\n        \"max-width\": \"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"min-block-size\": \"<'min-width'>\",\n        \"min-height\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )\",\n        \"min-inline-size\": \"<'min-width'>\",\n        \"min-width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|<-non-standard-width>\",\n        \"mix-blend-mode\": \"<blend-mode>|plus-lighter\",\n        \"object-fit\": \"fill|contain|cover|none|scale-down\",\n        \"object-position\": \"<position>\",\n        \"offset\": \"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?\",\n        \"offset-anchor\": \"auto|<position>\",\n        \"offset-distance\": \"<length-percentage>\",\n        \"offset-path\": \"none|ray( [<angle>&&<size>&&contain?] )|<path()>|<url>|[<basic-shape>||<geometry-box>]\",\n        \"offset-position\": \"auto|<position>\",\n        \"offset-rotate\": \"[auto|reverse]||<angle>\",\n        \"opacity\": \"<alpha-value>\",\n        \"order\": \"<integer>\",\n        \"orphans\": \"<integer>\",\n        \"outline\": \"[<'outline-color'>||<'outline-style'>||<'outline-width'>]\",\n        \"outline-color\": \"<color>|invert\",\n        \"outline-offset\": \"<length>\",\n        \"outline-style\": \"auto|<'border-style'>\",\n        \"outline-width\": \"<line-width>\",\n        \"overflow\": \"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>\",\n        \"overflow-anchor\": \"auto|none\",\n        \"overflow-block\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-clip-box\": \"padding-box|content-box\",\n        \"overflow-clip-margin\": \"<visual-box>||<length [0,∞]>\",\n        \"overflow-inline\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-wrap\": \"normal|break-word|anywhere\",\n        \"overflow-x\": \"visible|hidden|clip|scroll|auto\",\n        \"overflow-y\": \"visible|hidden|clip|scroll|auto\",\n        \"overscroll-behavior\": \"[contain|none|auto]{1,2}\",\n        \"overscroll-behavior-block\": \"contain|none|auto\",\n        \"overscroll-behavior-inline\": \"contain|none|auto\",\n        \"overscroll-behavior-x\": \"contain|none|auto\",\n        \"overscroll-behavior-y\": \"contain|none|auto\",\n        \"padding\": \"[<length>|<percentage>]{1,4}\",\n        \"padding-block\": \"<'padding-left'>{1,2}\",\n        \"padding-block-end\": \"<'padding-left'>\",\n        \"padding-block-start\": \"<'padding-left'>\",\n        \"padding-bottom\": \"<length>|<percentage>\",\n        \"padding-inline\": \"<'padding-left'>{1,2}\",\n        \"padding-inline-end\": \"<'padding-left'>\",\n        \"padding-inline-start\": \"<'padding-left'>\",\n        \"padding-left\": \"<length>|<percentage>\",\n        \"padding-right\": \"<length>|<percentage>\",\n        \"padding-top\": \"<length>|<percentage>\",\n        \"page-break-after\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-before\": \"auto|always|avoid|left|right|recto|verso\",\n        \"page-break-inside\": \"auto|avoid\",\n        \"paint-order\": \"normal|[fill||stroke||markers]\",\n        \"perspective\": \"none|<length>\",\n        \"perspective-origin\": \"<position>\",\n        \"place-content\": \"<'align-content'> <'justify-content'>?\",\n        \"place-items\": \"<'align-items'> <'justify-items'>?\",\n        \"place-self\": \"<'align-self'> <'justify-self'>?\",\n        \"pointer-events\": \"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit\",\n        \"position\": \"static|relative|absolute|sticky|fixed|-webkit-sticky\",\n        \"quotes\": \"none|auto|[<string> <string>]+\",\n        \"resize\": \"none|both|horizontal|vertical|block|inline\",\n        \"right\": \"<length>|<percentage>|auto\",\n        \"rotate\": \"none|<angle>|[x|y|z|<number>{3}]&&<angle>\",\n        \"row-gap\": \"normal|<length-percentage>\",\n        \"ruby-align\": \"start|center|space-between|space-around\",\n        \"ruby-merge\": \"separate|collapse|auto\",\n        \"ruby-position\": \"[alternate||[over|under]]|inter-character\",\n        \"scale\": \"none|<number>{1,3}\",\n        \"scrollbar-color\": \"auto|<color>{2}\",\n        \"scrollbar-gutter\": \"auto|stable&&both-edges?\",\n        \"scrollbar-width\": \"auto|thin|none\",\n        \"scroll-behavior\": \"auto|smooth\",\n        \"scroll-margin\": \"<length>{1,4}\",\n        \"scroll-margin-block\": \"<length>{1,2}\",\n        \"scroll-margin-block-start\": \"<length>\",\n        \"scroll-margin-block-end\": \"<length>\",\n        \"scroll-margin-bottom\": \"<length>\",\n        \"scroll-margin-inline\": \"<length>{1,2}\",\n        \"scroll-margin-inline-start\": \"<length>\",\n        \"scroll-margin-inline-end\": \"<length>\",\n        \"scroll-margin-left\": \"<length>\",\n        \"scroll-margin-right\": \"<length>\",\n        \"scroll-margin-top\": \"<length>\",\n        \"scroll-padding\": \"[auto|<length-percentage>]{1,4}\",\n        \"scroll-padding-block\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-block-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-block-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-bottom\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline\": \"[auto|<length-percentage>]{1,2}\",\n        \"scroll-padding-inline-start\": \"auto|<length-percentage>\",\n        \"scroll-padding-inline-end\": \"auto|<length-percentage>\",\n        \"scroll-padding-left\": \"auto|<length-percentage>\",\n        \"scroll-padding-right\": \"auto|<length-percentage>\",\n        \"scroll-padding-top\": \"auto|<length-percentage>\",\n        \"scroll-snap-align\": \"[none|start|end|center]{1,2}\",\n        \"scroll-snap-coordinate\": \"none|<position>#\",\n        \"scroll-snap-destination\": \"<position>\",\n        \"scroll-snap-points-x\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-points-y\": \"none|repeat( <length-percentage> )\",\n        \"scroll-snap-stop\": \"normal|always\",\n        \"scroll-snap-type\": \"none|[x|y|block|inline|both] [mandatory|proximity]?\",\n        \"scroll-snap-type-x\": \"none|mandatory|proximity\",\n        \"scroll-snap-type-y\": \"none|mandatory|proximity\",\n        \"scroll-timeline\": \"<scroll-timeline-name>||<scroll-timeline-axis>\",\n        \"scroll-timeline-axis\": \"block|inline|vertical|horizontal\",\n        \"scroll-timeline-name\": \"none|<custom-ident>\",\n        \"shape-image-threshold\": \"<alpha-value>\",\n        \"shape-margin\": \"<length-percentage>\",\n        \"shape-outside\": \"none|[<shape-box>||<basic-shape>]|<image>\",\n        \"tab-size\": \"<integer>|<length>\",\n        \"table-layout\": \"auto|fixed\",\n        \"text-align\": \"start|end|left|right|center|justify|match-parent\",\n        \"text-align-last\": \"auto|start|end|left|right|center|justify\",\n        \"text-combine-upright\": \"none|all|[digits <integer>?]\",\n        \"text-decoration\": \"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>\",\n        \"text-decoration-color\": \"<color>\",\n        \"text-decoration-line\": \"none|[underline||overline||line-through||blink]|spelling-error|grammar-error\",\n        \"text-decoration-skip\": \"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]\",\n        \"text-decoration-skip-ink\": \"auto|all|none\",\n        \"text-decoration-style\": \"solid|double|dotted|dashed|wavy\",\n        \"text-decoration-thickness\": \"auto|from-font|<length>|<percentage>\",\n        \"text-emphasis\": \"<'text-emphasis-style'>||<'text-emphasis-color'>\",\n        \"text-emphasis-color\": \"<color>\",\n        \"text-emphasis-position\": \"[over|under]&&[right|left]\",\n        \"text-emphasis-style\": \"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>\",\n        \"text-indent\": \"<length-percentage>&&hanging?&&each-line?\",\n        \"text-justify\": \"auto|inter-character|inter-word|none\",\n        \"text-orientation\": \"mixed|upright|sideways\",\n        \"text-overflow\": \"[clip|ellipsis|<string>]{1,2}\",\n        \"text-rendering\": \"auto|optimizeSpeed|optimizeLegibility|geometricPrecision\",\n        \"text-shadow\": \"none|<shadow-t>#\",\n        \"text-size-adjust\": \"none|auto|<percentage>\",\n        \"text-transform\": \"none|capitalize|uppercase|lowercase|full-width|full-size-kana\",\n        \"text-underline-offset\": \"auto|<length>|<percentage>\",\n        \"text-underline-position\": \"auto|from-font|[under||[left|right]]\",\n        \"top\": \"<length>|<percentage>|auto\",\n        \"touch-action\": \"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation\",\n        \"transform\": \"none|<transform-list>\",\n        \"transform-box\": \"content-box|border-box|fill-box|stroke-box|view-box\",\n        \"transform-origin\": \"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?\",\n        \"transform-style\": \"flat|preserve-3d\",\n        \"transition\": \"<single-transition>#\",\n        \"transition-delay\": \"<time>#\",\n        \"transition-duration\": \"<time>#\",\n        \"transition-property\": \"none|<single-transition-property>#\",\n        \"transition-timing-function\": \"<easing-function>#\",\n        \"translate\": \"none|<length-percentage> [<length-percentage> <length>?]?\",\n        \"unicode-bidi\": \"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext\",\n        \"user-select\": \"auto|text|none|contain|all\",\n        \"vertical-align\": \"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>\",\n        \"visibility\": \"visible|hidden|collapse\",\n        \"white-space\": \"normal|pre|nowrap|pre-wrap|pre-line|break-spaces\",\n        \"widows\": \"<integer>\",\n        \"width\": \"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|fill|stretch|intrinsic|-moz-max-content|-webkit-max-content|-moz-fit-content|-webkit-fit-content\",\n        \"will-change\": \"auto|<animateable-feature>#\",\n        \"word-break\": \"normal|break-all|keep-all|break-word\",\n        \"word-spacing\": \"normal|<length>\",\n        \"word-wrap\": \"normal|break-word\",\n        \"writing-mode\": \"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>\",\n        \"z-index\": \"auto|<integer>\",\n        \"zoom\": \"normal|reset|<number>|<percentage>\",\n        \"-moz-background-clip\": \"padding|border\",\n        \"-moz-border-radius-bottomleft\": \"<'border-bottom-left-radius'>\",\n        \"-moz-border-radius-bottomright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-border-radius-topleft\": \"<'border-top-left-radius'>\",\n        \"-moz-border-radius-topright\": \"<'border-bottom-right-radius'>\",\n        \"-moz-control-character-visibility\": \"visible|hidden\",\n        \"-moz-osx-font-smoothing\": \"auto|grayscale\",\n        \"-moz-user-select\": \"none|text|all|-moz-none\",\n        \"-ms-flex-align\": \"start|end|center|baseline|stretch\",\n        \"-ms-flex-item-align\": \"auto|start|end|center|baseline|stretch\",\n        \"-ms-flex-line-pack\": \"start|end|center|justify|distribute|stretch\",\n        \"-ms-flex-negative\": \"<'flex-shrink'>\",\n        \"-ms-flex-pack\": \"start|end|center|justify|distribute\",\n        \"-ms-flex-order\": \"<integer>\",\n        \"-ms-flex-positive\": \"<'flex-grow'>\",\n        \"-ms-flex-preferred-size\": \"<'flex-basis'>\",\n        \"-ms-interpolation-mode\": \"nearest-neighbor|bicubic\",\n        \"-ms-grid-column-align\": \"start|end|center|stretch\",\n        \"-ms-grid-row-align\": \"start|end|center|stretch\",\n        \"-ms-hyphenate-limit-last\": \"none|always|column|page|spread\",\n        \"-webkit-background-clip\": \"[<box>|border|padding|content|text]#\",\n        \"-webkit-column-break-after\": \"always|auto|avoid\",\n        \"-webkit-column-break-before\": \"always|auto|avoid\",\n        \"-webkit-column-break-inside\": \"always|auto|avoid\",\n        \"-webkit-font-smoothing\": \"auto|none|antialiased|subpixel-antialiased\",\n        \"-webkit-mask-box-image\": \"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?\",\n        \"-webkit-print-color-adjust\": \"economy|exact\",\n        \"-webkit-text-security\": \"none|circle|disc|square\",\n        \"-webkit-user-drag\": \"none|element|auto\",\n        \"-webkit-user-select\": \"auto|none|text|all\",\n        \"alignment-baseline\": \"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical\",\n        \"baseline-shift\": \"baseline|sub|super|<svg-length>\",\n        \"behavior\": \"<url>+\",\n        \"clip-rule\": \"nonzero|evenodd\",\n        \"cue\": \"<'cue-before'> <'cue-after'>?\",\n        \"cue-after\": \"<url> <decibel>?|none\",\n        \"cue-before\": \"<url> <decibel>?|none\",\n        \"dominant-baseline\": \"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge\",\n        \"fill\": \"<paint>\",\n        \"fill-opacity\": \"<number-zero-one>\",\n        \"fill-rule\": \"nonzero|evenodd\",\n        \"glyph-orientation-horizontal\": \"<angle>\",\n        \"glyph-orientation-vertical\": \"<angle>\",\n        \"kerning\": \"auto|<svg-length>\",\n        \"marker\": \"none|<url>\",\n        \"marker-end\": \"none|<url>\",\n        \"marker-mid\": \"none|<url>\",\n        \"marker-start\": \"none|<url>\",\n        \"pause\": \"<'pause-before'> <'pause-after'>?\",\n        \"pause-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"pause-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest\": \"<'rest-before'> <'rest-after'>?\",\n        \"rest-after\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"rest-before\": \"<time>|none|x-weak|weak|medium|strong|x-strong\",\n        \"shape-rendering\": \"auto|optimizeSpeed|crispEdges|geometricPrecision\",\n        \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n        \"speak\": \"auto|none|normal\",\n        \"speak-as\": \"normal|spell-out||digits||[literal-punctuation|no-punctuation]\",\n        \"stroke\": \"<paint>\",\n        \"stroke-dasharray\": \"none|[<svg-length>+]#\",\n        \"stroke-dashoffset\": \"<svg-length>\",\n        \"stroke-linecap\": \"butt|round|square\",\n        \"stroke-linejoin\": \"miter|round|bevel\",\n        \"stroke-miterlimit\": \"<number-one-or-greater>\",\n        \"stroke-opacity\": \"<number-zero-one>\",\n        \"stroke-width\": \"<svg-length>\",\n        \"text-anchor\": \"start|middle|end\",\n        \"unicode-range\": \"<urange>#\",\n        \"voice-balance\": \"<number>|left|center|right|leftwards|rightwards\",\n        \"voice-duration\": \"auto|<time>\",\n        \"voice-family\": \"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve\",\n        \"voice-pitch\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-range\": \"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]\",\n        \"voice-rate\": \"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>\",\n        \"voice-stress\": \"normal|strong|moderate|none|reduced\",\n        \"voice-volume\": \"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]\"\n    },\n    \"atrules\": {\n        \"charset\": {\n            \"prelude\": \"<string>\",\n            \"descriptors\": null\n        },\n        \"counter-style\": {\n            \"prelude\": \"<counter-style-name>\",\n            \"descriptors\": {\n                \"additive-symbols\": \"[<integer>&&<symbol>]#\",\n                \"fallback\": \"<counter-style-name>\",\n                \"negative\": \"<symbol> <symbol>?\",\n                \"pad\": \"<integer>&&<symbol>\",\n                \"prefix\": \"<symbol>\",\n                \"range\": \"[[<integer>|infinite]{2}]#|auto\",\n                \"speak-as\": \"auto|bullets|numbers|words|spell-out|<counter-style-name>\",\n                \"suffix\": \"<symbol>\",\n                \"symbols\": \"<symbol>+\",\n                \"system\": \"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]\"\n            }\n        },\n        \"document\": {\n            \"prelude\": \"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#\",\n            \"descriptors\": null\n        },\n        \"font-face\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"ascent-override\": \"normal|<percentage>\",\n                \"descent-override\": \"normal|<percentage>\",\n                \"font-display\": \"[auto|block|swap|fallback|optional]\",\n                \"font-family\": \"<family-name>\",\n                \"font-feature-settings\": \"normal|<feature-tag-value>#\",\n                \"font-variation-settings\": \"normal|[<string> <number>]#\",\n                \"font-stretch\": \"<font-stretch-absolute>{1,2}\",\n                \"font-style\": \"normal|italic|oblique <angle>{0,2}\",\n                \"font-weight\": \"<font-weight-absolute>{1,2}\",\n                \"font-variant\": \"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]\",\n                \"line-gap-override\": \"normal|<percentage>\",\n                \"size-adjust\": \"<percentage>\",\n                \"src\": \"[<url> [format( <string># )]?|local( <family-name> )]#\",\n                \"unicode-range\": \"<urange>#\"\n            }\n        },\n        \"font-feature-values\": {\n            \"prelude\": \"<family-name>#\",\n            \"descriptors\": null\n        },\n        \"import\": {\n            \"prelude\": \"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?\",\n            \"descriptors\": null\n        },\n        \"keyframes\": {\n            \"prelude\": \"<keyframes-name>\",\n            \"descriptors\": null\n        },\n        \"layer\": {\n            \"prelude\": \"[<layer-name>#|<layer-name>?]\",\n            \"descriptors\": null\n        },\n        \"media\": {\n            \"prelude\": \"<media-query-list>\",\n            \"descriptors\": null\n        },\n        \"namespace\": {\n            \"prelude\": \"<namespace-prefix>? [<string>|<url>]\",\n            \"descriptors\": null\n        },\n        \"page\": {\n            \"prelude\": \"<page-selector-list>\",\n            \"descriptors\": {\n                \"bleed\": \"auto|<length>\",\n                \"marks\": \"none|[crop||cross]\",\n                \"size\": \"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]\"\n            }\n        },\n        \"property\": {\n            \"prelude\": \"<custom-property-name>\",\n            \"descriptors\": {\n                \"syntax\": \"<string>\",\n                \"inherits\": \"true|false\",\n                \"initial-value\": \"<string>\"\n            }\n        },\n        \"scroll-timeline\": {\n            \"prelude\": \"<timeline-name>\",\n            \"descriptors\": null\n        },\n        \"supports\": {\n            \"prelude\": \"<supports-condition>\",\n            \"descriptors\": null\n        },\n        \"viewport\": {\n            \"prelude\": null,\n            \"descriptors\": {\n                \"height\": \"<viewport-length>{1,2}\",\n                \"max-height\": \"<viewport-length>\",\n                \"max-width\": \"<viewport-length>\",\n                \"max-zoom\": \"auto|<number>|<percentage>\",\n                \"min-height\": \"<viewport-length>\",\n                \"min-width\": \"<viewport-length>\",\n                \"min-zoom\": \"auto|<number>|<percentage>\",\n                \"orientation\": \"auto|portrait|landscape\",\n                \"user-zoom\": \"zoom|fixed\",\n                \"viewport-fit\": \"auto|contain|cover\",\n                \"width\": \"<viewport-length>{1,2}\",\n                \"zoom\": \"auto|<number>|<percentage>\"\n            }\n        },\n        \"nest\": {\n            \"prelude\": \"<complex-selector-list>\",\n            \"descriptors\": null\n        }\n    }\n};","import {\n    isDigit,\n    WhiteSpace,\n    Comment,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nconst DISALLOW_SIGN = true;\nconst ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    let pos = this.tokenStart + offset;\n    const code = this.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.tokenEnd; pos++) {\n        if (!isDigit(this.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!this.cmpChar(this.tokenStart + offset, code)) {\n        let msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    let offset = 0;\n    let sign = 0;\n    let type = this.tokenType;\n\n    while (type === WhiteSpace || type === Comment) {\n        type = this.lookupType(++offset);\n    }\n\n    if (type !== Number) {\n        if (this.isDelim(PLUSSIGN, offset) ||\n            this.isDelim(HYPHENMINUS, offset)) {\n            sign = this.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.lookupType(++offset);\n            } while (type === WhiteSpace || type === Comment);\n\n            if (type !== Number) {\n                this.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.charCodeAt(this.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(Number) : this.consume(Number);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nexport const name = 'AnPlusB';\nexport const structure = {\n    a: [String, null],\n    b: [String, null]\n};\n\nexport function parse() {\n    /* eslint-disable brace-style*/\n    const start = this.tokenStart;\n    let a = null;\n    let b = null;\n\n    // <integer>\n    if (this.tokenType === Number) {\n        checkTokenIsInteger.call(this, ALLOW_SIGN);\n        b = this.consume(Number);\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (this.tokenType === Ident && this.cmpChar(this.tokenStart, HYPHENMINUS)) {\n        a = '-1';\n\n        expectCharCode.call(this, 1, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // -n- <signless-integer>\n            case 3:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // <dashndashdigit-ident>\n            default:\n                expectCharCode.call(this, 2, HYPHENMINUS);\n                checkInteger.call(this, 3, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + 2);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (this.tokenType === Ident || (this.isDelim(PLUSSIGN) && this.lookupType(1) === Ident)) {\n        let sign = 0;\n        a = '1';\n\n        // just ignore a plus\n        if (this.isDelim(PLUSSIGN)) {\n            sign = 1;\n            this.next();\n        }\n\n        expectCharCode.call(this, 0, N);\n\n        switch (this.tokenEnd - this.tokenStart) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                this.next();\n                b = consumeB.call(this);\n                break;\n\n            // '+'? n- <signless-integer>\n            case 2:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n\n                this.next();\n                this.skipSC();\n\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                b = '-' + this.consume(Number);\n                break;\n\n            // '+'? <ndashdigit-ident>\n            default:\n                expectCharCode.call(this, 1, HYPHENMINUS);\n                checkInteger.call(this, 2, DISALLOW_SIGN);\n                this.next();\n\n                b = this.substrToCursor(start + sign + 1);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (this.tokenType === Dimension) {\n        const code = this.charCodeAt(this.tokenStart);\n        const sign = code === PLUSSIGN || code === HYPHENMINUS;\n        let i = this.tokenStart + sign;\n\n        for (; i < this.tokenEnd; i++) {\n            if (!isDigit(this.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === this.tokenStart + sign) {\n            this.error('Integer is expected', this.tokenStart + sign);\n        }\n\n        expectCharCode.call(this, i - this.tokenStart, N);\n        a = this.substring(start, i);\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === this.tokenEnd) {\n            this.next();\n            b = consumeB.call(this);\n        } else {\n            expectCharCode.call(this, i - this.tokenStart + 1, HYPHENMINUS);\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === this.tokenEnd) {\n                this.next();\n                this.skipSC();\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                b = '-' + this.consume(Number);\n            }\n            // <ndashdigit-dimension>\n            else {\n                checkInteger.call(this, i - this.tokenStart + 2, DISALLOW_SIGN);\n                this.next();\n                b = this.substrToCursor(i + 1);\n            }\n        }\n    } else {\n        this.error();\n    }\n\n    if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n        a = a.substr(1);\n    }\n\n    if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n        b = b.substr(1);\n    }\n\n    return {\n        type: 'AnPlusB',\n        loc: this.getLocation(start, this.tokenStart),\n        a,\n        b\n    };\n}\n\nexport function generate(node) {\n    if (node.a) {\n        const a =\n            node.a === '+1' && 'n' ||\n            node.a ===  '1' && 'n' ||\n            node.a === '-1' && '-n' ||\n            node.a + 'n';\n\n        if (node.b) {\n            const b = node.b[0] === '-' || node.b[0] === '+'\n                ? node.b\n                : '+' + node.b;\n            this.tokenize(a + b);\n        } else {\n            this.tokenize(a);\n        }\n    } else {\n        this.tokenize(node.b);\n    }\n}\n","import {\n    AtKeyword,\n    Semicolon,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (let offset = 1, type; type = this.lookupType(offset); offset++) {\n        if (type === RightCurlyBracket) {\n            return true;\n        }\n\n        if (type === LeftCurlyBracket ||\n            type === AtKeyword) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\n\nexport const name = 'Atrule';\nexport const walkContext = 'atrule';\nexport const structure = {\n    name: String,\n    prelude: ['AtrulePrelude', 'Raw', null],\n    block: ['Block', null]\n};\n\nexport function parse(isDeclaration = false) {\n    const start = this.tokenStart;\n    let name;\n    let nameLowerCase;\n    let prelude = null;\n    let block = null;\n\n    this.eat(AtKeyword);\n\n    name = this.substrToCursor(start + 1);\n    nameLowerCase = name.toLowerCase();\n    this.skipSC();\n\n    // parse prelude\n    if (this.eof === false &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        if (this.parseAtrulePrelude) {\n            prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name, isDeclaration), consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, this.tokenIndex);\n        }\n\n        this.skipSC();\n    }\n\n    switch (this.tokenType) {\n        case Semicolon:\n            this.next();\n            break;\n\n        case LeftCurlyBracket:\n            if (hasOwnProperty.call(this.atrule, nameLowerCase) &&\n                typeof this.atrule[nameLowerCase].block === 'function') {\n                block = this.atrule[nameLowerCase].block.call(this, isDeclaration);\n            } else {\n                // TODO: should consume block content as Raw?\n                block = this.Block(isDeclarationBlockAtrule.call(this));\n            }\n\n            break;\n    }\n\n    return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        prelude,\n        block\n    };\n}\n\nexport function generate(node) {\n    this.token(AtKeyword, '@' + node.name);\n\n    if (node.prelude !== null) {\n        this.node(node.prelude);\n    }\n\n    if (node.block) {\n        this.node(node.block);\n    } else {\n        this.token(Semicolon, ';');\n    }\n}\n","import {\n    Semicolon,\n    LeftCurlyBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'AtrulePrelude';\nexport const walkContext = 'atrulePrelude';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(name) {\n    let children = null;\n\n    if (name !== null) {\n        name = name.toLowerCase();\n    }\n\n    this.skipSC();\n\n    if (hasOwnProperty.call(this.atrule, name) &&\n        typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n    } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n    }\n\n    this.skipSC();\n\n    if (this.eof !== true &&\n        this.tokenType !== LeftCurlyBracket &&\n        this.tokenType !== Semicolon) {\n        this.error('Semicolon or block is expected');\n    }\n\n    return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import {\n    Ident,\n    String as StringToken,\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nconst DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nconst ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nconst EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nconst CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nconst VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    const start = this.tokenStart;\n    let expectIdent = false;\n\n    if (this.isDelim(ASTERISK)) {\n        expectIdent = true;\n        this.next();\n    } else if (!this.isDelim(VERTICALLINE)) {\n        this.eat(Ident);\n    }\n\n    if (this.isDelim(VERTICALLINE)) {\n        if (this.charCodeAt(this.tokenStart + 1) !== EQUALSSIGN) {\n            this.next();\n            this.eat(Ident);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    const start = this.tokenStart;\n    const code = this.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.next();\n    }\n\n    return this.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nexport const name = 'AttributeSelector';\nexport const structure = {\n    name: 'Identifier',\n    matcher: [String, null],\n    value: ['String', 'Identifier', null],\n    flags: [String, null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let matcher = null;\n    let value = null;\n    let flags = null;\n\n    this.eat(LeftSquareBracket);\n    this.skipSC();\n\n    name = getAttributeName.call(this);\n    this.skipSC();\n\n    if (this.tokenType !== RightSquareBracket) {\n        // avoid case `[name i]`\n        if (this.tokenType !== Ident) {\n            matcher = getOperator.call(this);\n\n            this.skipSC();\n\n            value = this.tokenType === StringToken\n                ? this.String()\n                : this.Identifier();\n\n            this.skipSC();\n        }\n\n        // attribute flags\n        if (this.tokenType === Ident) {\n            flags = this.consume(Ident);\n\n            this.skipSC();\n        }\n    }\n\n    this.eat(RightSquareBracket);\n\n    return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        matcher,\n        value,\n        flags\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.node(node.name);\n\n    if (node.matcher !== null) {\n        this.tokenize(node.matcher);\n        this.node(node.value);\n    }\n\n    if (node.flags !== null) {\n        this.token(Ident, node.flags);\n    }\n\n    this.token(Delim, ']');\n}\n","import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword,\n    LeftCurlyBracket,\n    RightCurlyBracket\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.tokenType === Semicolon) {\n        return consumeRawDeclaration.call(this, this.tokenIndex);\n    }\n\n    const node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.tokenType === Semicolon) {\n        this.next();\n    }\n\n    return node;\n}\n\nexport const name = 'Block';\nexport const walkContext = 'block';\nexport const structure = {\n    children: [[\n        'Atrule',\n        'Rule',\n        'Declaration'\n    ]]\n};\n\nexport function parse(isStyleBlock) {\n    const consumer = isStyleBlock ? consumeDeclaration : consumeRule;\n    const start = this.tokenStart;\n    let children = this.createList();\n\n    this.eat(LeftCurlyBracket);\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case RightCurlyBracket:\n                break scan;\n\n            case WhiteSpace:\n            case Comment:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, isStyleBlock), consumeRaw));\n                break;\n\n            default:\n                if (isStyleBlock && this.isDelim(AMPERSAND))  {\n                    children.push(consumeRule.call(this));\n                } else {\n                    children.push(consumer.call(this));\n                }\n        }\n    }\n\n    if (!this.eof) {\n        this.eat(RightCurlyBracket);\n    }\n\n    return {\n        type: 'Block',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftCurlyBracket, '{');\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n    this.token(RightCurlyBracket, '}');\n}\n","import {\n    Delim,\n    LeftSquareBracket,\n    RightSquareBracket\n} from '../../tokenizer/index.js';\n\nexport const name = 'Brackets';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftSquareBracket);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightSquareBracket);\n    }\n\n    return {\n        type: 'Brackets',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '[');\n    this.children(node);\n    this.token(Delim, ']');\n}\n","import { CDC } from '../../tokenizer/index.js';\n\nexport const name = 'CDC';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDC); // -->\n\n    return {\n        type: 'CDC',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDC, '-->');\n}\n","import { CDO } from '../../tokenizer/index.js';\n\nexport const name = 'CDO';\nexport const structure = [];\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(CDO); // <!--\n\n    return {\n        type: 'CDO',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(CDO, '<!--');\n}\n","import { Delim, Ident } from '../../tokenizer/index.js';\n\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nexport const name = 'ClassSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    this.eatDelim(FULLSTOP);\n\n    return {\n        type: 'ClassSelector',\n        loc: this.getLocation(this.tokenStart - 1, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Delim, '.');\n    this.token(Ident, node.name);\n}\n","import { WhiteSpace, Delim } from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nexport const name = 'Combinator';\nexport const structure = {\n    name: String\n};\n\n// + | > | ~ | /deep/\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n\n    switch (this.tokenType) {\n        case WhiteSpace:\n            name = ' ';\n            break;\n\n        case Delim:\n            switch (this.charCodeAt(this.tokenStart)) {\n                case GREATERTHANSIGN:\n                case PLUSSIGN:\n                case TILDE:\n                    this.next();\n                    break;\n\n                case SOLIDUS:\n                    this.next();\n                    this.eatIdent('deep');\n                    this.eatDelim(SOLIDUS);\n                    break;\n\n                default:\n                    this.error('Combinator is expected');\n            }\n\n            name = this.substrToCursor(start);\n            break;\n    }\n\n    return {\n        type: 'Combinator',\n        loc: this.getLocation(start, this.tokenStart),\n        name\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n","import { Comment } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n\nexport const name = 'Comment';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let end = this.tokenEnd;\n\n    this.eat(Comment);\n\n    if ((end - start + 2) >= 2 &&\n        this.charCodeAt(end - 2) === ASTERISK &&\n        this.charCodeAt(end - 1) === SOLIDUS) {\n        end -= 2;\n    }\n\n    return {\n        type: 'Comment',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substring(start + 2, end)\n    };\n}\n\nexport function generate(node) {\n    this.token(Comment, '/*' + node.value + '*/');\n}\n","import { isCustomProperty } from '../../utils/names.js';\nimport {\n    Ident,\n    Hash,\n    Colon,\n    Semicolon,\n    Delim,\n    WhiteSpace\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilExclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    const startValueToken = this.tokenIndex;\n    const value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isDelim(EXCLAMATIONMARK) === false &&\n        this.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nexport const name = 'Declaration';\nexport const walkContext = 'declaration';\nexport const structure = {\n    important: [Boolean, String],\n    property: String,\n    value: ['Value', 'Raw']\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const startToken = this.tokenIndex;\n    const property = readProperty.call(this);\n    const customProperty = isCustomProperty(property);\n    const parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n    const consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n    let important = false;\n    let value;\n\n    this.skipSC();\n    this.eat(Colon);\n\n    const valueStart = this.tokenIndex;\n\n    if (!customProperty) {\n        this.skipSC();\n    }\n\n    if (parseValue) {\n        value = this.parseWithFallback(consumeValue, consumeRaw);\n    } else {\n        value = consumeRaw.call(this, this.tokenIndex);\n    }\n\n    if (customProperty && value.type === 'Value' && value.children.isEmpty) {\n        for (let offset = valueStart - this.tokenIndex; offset <= 0; offset++) {\n            if (this.lookupType(offset) === WhiteSpace) {\n                value.children.appendData({\n                    type: 'WhiteSpace',\n                    loc: null,\n                    value: ' '\n                });\n                break;\n            }\n        }\n    }\n\n    if (this.isDelim(EXCLAMATIONMARK)) {\n        important = getImportant.call(this);\n        this.skipSC();\n    }\n\n    // Do not include semicolon to range per spec\n    // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n    if (this.eof === false &&\n        this.tokenType !== Semicolon &&\n        this.isBalanceEdge(startToken) === false) {\n        this.error();\n    }\n\n    return {\n        type: 'Declaration',\n        loc: this.getLocation(start, this.tokenStart),\n        important,\n        property,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.property);\n    this.token(Colon, ':');\n    this.node(node.value);\n\n    if (node.important) {\n        this.token(Delim, '!');\n        this.token(Ident, node.important === true ? 'important' : node.important);\n    }\n}\n\nfunction readProperty() {\n    const start = this.tokenStart;\n\n    // hacks\n    if (this.tokenType === Delim) {\n        switch (this.charCodeAt(this.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.next();\n                if (this.isDelim(SOLIDUS)) {\n                    this.next();\n                }\n                break;\n        }\n    }\n\n    if (this.tokenType === Hash) {\n        this.eat(Hash);\n    } else {\n        this.eat(Ident);\n    }\n\n    return this.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(Delim);\n    this.skipSC();\n\n    const important = this.consume(Ident);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n","import {\n    WhiteSpace,\n    Comment,\n    Semicolon,\n    AtKeyword\n} from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilSemicolonIncluded, true);\n}\n\nexport const name = 'DeclarationList';\nexport const structure = {\n    children: [[\n        'Declaration',\n        'Atrule',\n        'Rule'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n            case Comment:\n            case Semicolon:\n                this.next();\n                break;\n\n            case AtKeyword:\n                children.push(this.parseWithFallback(this.Atrule.bind(this, true), consumeRaw));\n                break;\n\n            default:\n                if (this.isDelim(AMPERSAND))  {\n                    children.push(this.parseWithFallback(this.Rule, consumeRaw));\n                } else {\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n                }\n        }\n    }\n\n    return {\n        type: 'DeclarationList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, prev => {\n        if (prev.type === 'Declaration') {\n            this.token(Semicolon, ';');\n        }\n    });\n}\n\n","import { Dimension } from '../../tokenizer/index.js';\n\nexport const name = 'Dimension';\nexport const structure = {\n    value: String,\n    unit: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const value = this.consumeNumber(Dimension);\n\n    return {\n        type: 'Dimension',\n        loc: this.getLocation(start, this.tokenStart),\n        value,\n        unit: this.substring(start + value.length, this.tokenStart)\n    };\n}\n\nexport function generate(node) {\n    this.token(Dimension, node.value + node.unit);\n}\n","import {\n    Function as FunctionToken,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'Function';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [[]]\n};\n\n// <function-token> <sequence> )\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    const name = this.consumeFunctionName();\n    const nameLowerCase = name.toLowerCase();\n    let children;\n\n    children = recognizer.hasOwnProperty(nameLowerCase)\n        ? recognizer[nameLowerCase].call(this, recognizer)\n        : readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Function',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(FunctionToken, node.name + '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n","import { Hash } from '../../tokenizer/index.js';\n\n// '#' ident\nexport const xxx = 'XXX';\nexport const name = 'Hash';\nexport const structure = {\n    value: String\n};\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eat(Hash);\n\n    return {\n        type: 'Hash',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start + 1)\n    };\n}\nexport function generate(node) {\n    this.token(Hash, '#' + node.value);\n}\n\n","import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Identifier';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        name: this.consume(Ident)\n    };\n}\n\nexport function generate(node) {\n    this.token(Ident, node.name);\n}\n","import { Hash, Delim } from '../../tokenizer/index.js';\n\nexport const name = 'IdSelector';\nexport const structure = {\n    name: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // TODO: check value is an ident\n    this.eat(Hash);\n\n    return {\n        type: 'IdSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start + 1)\n    };\n}\n\nexport function generate(node) {\n    // Using Delim instead of Hash is a hack to avoid for a whitespace between ident and id-selector\n    // in safe mode (e.g. \"a#id\"), because IE11 doesn't allow a sequence <ident-token> <hash-token>\n    // without a whitespace in values (e.g. \"1px solid#000\")\n    this.token(Delim, '#' + node.name);\n}\n","import {\n    Ident,\n    Number,\n    Dimension,\n    LeftParenthesis,\n    RightParenthesis,\n    Colon,\n    Delim\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaFeature';\nexport const structure = {\n    name: String,\n    value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    let name;\n    let value = null;\n\n    this.eat(LeftParenthesis);\n    this.skipSC();\n\n    name = this.consume(Ident);\n    this.skipSC();\n\n    if (this.tokenType !== RightParenthesis) {\n        this.eat(Colon);\n        this.skipSC();\n\n        switch (this.tokenType) {\n            case Number:\n                if (this.lookupNonWSType(1) === Delim) {\n                    value = this.Ratio();\n                } else {\n                    value = this.Number();\n                }\n\n                break;\n\n            case Dimension:\n                value = this.Dimension();\n                break;\n\n            case Ident:\n                value = this.Identifier();\n                break;\n\n            default:\n                this.error('Number, dimension, ratio or identifier is expected');\n        }\n\n        this.skipSC();\n    }\n\n    this.eat(RightParenthesis);\n\n    return {\n        type: 'MediaFeature',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.token(Ident, node.name);\n\n    if (node.value !== null) {\n        this.token(Colon, ':');\n        this.node(node.value);\n    }\n\n    this.token(RightParenthesis, ')');\n}\n","import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'MediaQuery';\nexport const structure = {\n    children: [[\n        'Identifier',\n        'MediaFeature',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n    let child = null;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.MediaFeature();\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n    }\n\n    return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n\n","import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'MediaQueryList';\nexport const structure = {\n    children: [[\n        'MediaQuery'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    while (!this.eof) {\n        children.push(this.MediaQuery());\n\n        if (this.tokenType !== Comma) {\n            break;\n        }\n\n        this.next();\n    }\n\n    return {\n        type: 'MediaQueryList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n","import { Delim } from '../../tokenizer/index.js';\n\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\n\nexport const name = 'NestingSelector';\nexport const structure = {\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.eatDelim(AMPERSAND);\n\n    return {\n        type: 'NestingSelector',\n        loc: this.getLocation(start, this.tokenStart)\n    };\n}\n\nexport function generate() {\n    this.token(Delim, '&');\n}\n","import { Ident } from '../../tokenizer/index.js';\n\nexport const name = 'Nth';\nexport const structure = {\n    nth: ['AnPlusB', 'Identifier'],\n    selector: ['SelectorList', null]\n};\n\nexport function parse() {\n    this.skipSC();\n\n    const start = this.tokenStart;\n    let end = start;\n    let selector = null;\n    let nth;\n\n    if (this.lookupValue(0, 'odd') || this.lookupValue(0, 'even')) {\n        nth = this.Identifier();\n    } else {\n        nth = this.AnPlusB();\n    }\n\n    end = this.tokenStart;\n    this.skipSC();\n\n    if (this.lookupValue(0, 'of')) {\n        this.next();\n\n        selector = this.SelectorList();\n        end = this.tokenStart;\n    }\n\n    return {\n        type: 'Nth',\n        loc: this.getLocation(start, end),\n        nth,\n        selector\n    };\n}\n\nexport function generate(node) {\n    this.node(node.nth);\n    if (node.selector !== null) {\n        this.token(Ident, 'of');\n        this.node(node.selector);\n    }\n}\n","import { Number as NumberToken } from '../../tokenizer/index.js';\n\nexport const name = 'Number';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Number',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consume(NumberToken)\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.value);\n}\n","// '/' | '*' | ',' | ':' | '+' | '-'\nexport const name = 'Operator';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    this.next();\n\n    return {\n        type: 'Operator',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n","import {\n    LeftParenthesis,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Parentheses';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse(readSequence, recognizer) {\n    const start = this.tokenStart;\n    let children = null;\n\n    this.eat(LeftParenthesis);\n\n    children = readSequence.call(this, recognizer);\n\n    if (!this.eof) {\n        this.eat(RightParenthesis);\n    }\n\n    return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(LeftParenthesis, '(');\n    this.children(node);\n    this.token(RightParenthesis, ')');\n}\n","import { Percentage } from '../../tokenizer/index.js';\n\nexport const name = 'Percentage';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'Percentage',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: this.consumeNumber(Percentage)\n    };\n}\n\nexport function generate(node) {\n    this.token(Percentage, node.value + '%');\n}\n","import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\n\nexport const name = 'PseudoClassSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoClassSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n","import {\n    Ident,\n    Function as FunctionToken,\n    Colon,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'PseudoElementSelector';\nexport const walkContext = 'function';\nexport const structure = {\n    name: String,\n    children: [['Raw'], null]\n};\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nexport function parse() {\n    const start = this.tokenStart;\n    let children = null;\n    let name;\n    let nameLowerCase;\n\n    this.eat(Colon);\n    this.eat(Colon);\n\n    if (this.tokenType === FunctionToken) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n\n        if (hasOwnProperty.call(this.pseudo, nameLowerCase)) {\n            this.skipSC();\n            children = this.pseudo[nameLowerCase].call(this);\n            this.skipSC();\n        } else {\n            children = this.createList();\n            children.push(\n                this.Raw(this.tokenIndex, null, false)\n            );\n        }\n\n        this.eat(RightParenthesis);\n    } else {\n        name = this.consume(Ident);\n    }\n\n    return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name,\n        children\n    };\n}\n\nexport function generate(node) {\n    this.token(Colon, ':');\n    this.token(Colon, ':');\n\n    if (node.children === null) {\n        this.token(Ident, node.name);\n    } else {\n        this.token(FunctionToken, node.name + '(');\n        this.children(node);\n        this.token(RightParenthesis, ')');\n    }\n}\n","import { isDigit, Delim, Number as NumberToken } from '../../tokenizer/index.js';\n\nconst SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// Terms of <ratio> should be a positive numbers (not zero or negative)\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\n// and this is using by various sites. Therefore we relax checking on parse\n// to test a term is unsigned number without an exponent part.\n// Additional checking may be applied on lexer validation.\nfunction consumeNumber() {\n    this.skipSC();\n\n    const value = this.consume(NumberToken);\n\n    for (let i = 0; i < value.length; i++) {\n        const code = value.charCodeAt(i);\n        if (!isDigit(code) && code !== FULLSTOP) {\n            this.error('Unsigned number is expected', this.tokenStart - value.length + i);\n        }\n    }\n\n    if (Number(value) === 0) {\n        this.error('Zero number is not allowed', this.tokenStart - value.length);\n    }\n\n    return value;\n}\n\nexport const name = 'Ratio';\nexport const structure = {\n    left: String,\n    right: String\n};\n\n// <positive-integer> S* '/' S* <positive-integer>\nexport function parse() {\n    const start = this.tokenStart;\n    const left = consumeNumber.call(this);\n    let right;\n\n    this.skipSC();\n    this.eatDelim(SOLIDUS);\n    right = consumeNumber.call(this);\n\n    return {\n        type: 'Ratio',\n        loc: this.getLocation(start, this.tokenStart),\n        left,\n        right\n    };\n}\n\nexport function generate(node) {\n    this.token(NumberToken, node.left);\n    this.token(Delim, '/');\n    this.token(NumberToken, node.right);\n}\n","import { WhiteSpace } from '../../tokenizer/index.js';\n\nfunction getOffsetExcludeWS() {\n    if (this.tokenIndex > 0) {\n        if (this.lookupType(-1) === WhiteSpace) {\n            return this.tokenIndex > 1\n                ? this.getTokenStart(this.tokenIndex - 1)\n                : this.firstCharOffset;\n        }\n    }\n\n    return this.tokenStart;\n}\n\nexport const name = 'Raw';\nexport const structure = {\n    value: String\n};\n\nexport function parse(startToken, consumeUntil, excludeWhiteSpace) {\n    const startOffset = this.getTokenStart(startToken);\n    let endOffset;\n\n    this.skipUntilBalanced(startToken, consumeUntil || this.consumeUntilBalanceEnd);\n\n    if (excludeWhiteSpace && this.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n    } else {\n        endOffset = this.tokenStart;\n    }\n\n    return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.substring(startOffset, endOffset)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n","import { LeftCurlyBracket } from '../../tokenizer/index.js';\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, this.consumeUntilLeftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    const prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.eof === false &&\n        this.tokenType !== LeftCurlyBracket) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nexport const name = 'Rule';\nexport const walkContext = 'rule';\nexport const structure = {\n    prelude: ['SelectorList', 'Raw'],\n    block: ['Block']\n};\n\nexport function parse() {\n    const startToken = this.tokenIndex;\n    const startOffset = this.tokenStart;\n    let prelude;\n    let block;\n\n    if (this.parseRulePrelude) {\n        prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n    } else {\n        prelude = consumeRaw.call(this, startToken);\n    }\n\n    block = this.Block(true);\n\n    return {\n        type: 'Rule',\n        loc: this.getLocation(startOffset, this.tokenStart),\n        prelude,\n        block\n    };\n}\nexport function generate(node) {\n    this.node(node.prelude);\n    this.node(node.block);\n}\n\n","export const name = 'Selector';\nexport const structure = {\n    children: [[\n        'TypeSelector',\n        'IdSelector',\n        'ClassSelector',\n        'AttributeSelector',\n        'PseudoClassSelector',\n        'PseudoElementSelector',\n        'Combinator',\n        'WhiteSpace'\n    ]]\n};\n\nexport function parse() {\n    const children = this.readSequence(this.scope.Selector);\n\n    // nothing were consumed\n    if (this.getFirstListNode(children) === null) {\n        this.error('Selector is expected');\n    }\n\n    return {\n        type: 'Selector',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import { Comma } from '../../tokenizer/index.js';\n\nexport const name = 'SelectorList';\nexport const walkContext = 'selector';\nexport const structure = {\n    children: [[\n        'Selector',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const children = this.createList();\n\n    while (!this.eof) {\n        children.push(this.Selector());\n\n        if (this.tokenType === Comma) {\n            this.next();\n            continue;\n        }\n\n        break;\n    }\n\n    return {\n        type: 'SelectorList',\n        loc: this.getLocationFromList(children),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node, () => this.token(Comma, ','));\n}\n","import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst REVERSE_SOLIDUS = 0x005c; // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;  // \"\nconst APOSTROPHE = 0x0027;      // '\n\nexport function decode(str) {\n    const len = str.length;\n    const firstChar = str.charCodeAt(0);\n    const start = firstChar === QUOTATION_MARK || firstChar === APOSTROPHE ? 1 : 0;\n    const end = start === 1 && len > 1 && str.charCodeAt(len - 1) === firstChar ? len - 2 : len - 1;\n    let decoded = '';\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last quote as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\n// https://drafts.csswg.org/cssom/#serialize-a-string\n// § 2.1. Common Serializing Idioms\nexport function encode(str, apostrophe) {\n    const quote = apostrophe ? '\\'' : '\"';\n    const quoteCode = apostrophe ? APOSTROPHE : QUOTATION_MARK;\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        // If the character is '\"' (U+0022) or \"\\\" (U+005C), the escaped character.\n        if (code === quoteCode || code === REVERSE_SOLIDUS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && (isHexDigit(code) || isWhiteSpace(code))) {\n                encoded += ' ';\n            }\n\n            // Otherwise, the character itself.\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return quote + encoded + quote;\n}\n","import { String as StringToken } from '../../tokenizer/index.js';\nimport { decode, encode } from '../../utils/string.js';\n\nexport const name = 'String';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    return {\n        type: 'String',\n        loc: this.getLocation(this.tokenStart, this.tokenEnd),\n        value: decode(this.consume(StringToken))\n    };\n}\n\nexport function generate(node) {\n    this.token(StringToken, encode(node.value));\n}\n","import {\n    WhiteSpace,\n    Comment,\n    AtKeyword,\n    CDO,\n    CDC\n} from '../../tokenizer/index.js';\n\nconst EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nexport const name = 'StyleSheet';\nexport const walkContext = 'stylesheet';\nexport const structure = {\n    children: [[\n        'Comment',\n        'CDO',\n        'CDC',\n        'Atrule',\n        'Rule',\n        'Raw'\n    ]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.createList();\n    let child;\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Comment:\n                // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                if (this.charCodeAt(this.tokenStart + 2) !== EXCLAMATIONMARK) {\n                    this.next();\n                    continue;\n                }\n\n                child = this.Comment();\n                break;\n\n            case CDO: // <!--\n                child = this.CDO();\n                break;\n\n            case CDC: // -->\n                child = this.CDC();\n                break;\n\n            // CSS Syntax Module Level 3\n            // §2.2 Error handling\n            // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n            case AtKeyword:\n                child = this.parseWithFallback(this.Atrule, consumeRaw);\n                break;\n\n            // Anything else starts a qualified rule ...\n            default:\n                child = this.parseWithFallback(this.Rule, consumeRaw);\n        }\n\n        children.push(child);\n    }\n\n    return {\n        type: 'StyleSheet',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import { Ident } from '../../tokenizer/index.js';\n\nconst ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nconst VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.tokenType !== Ident &&\n        this.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.next();\n}\n\nexport const name = 'TypeSelector';\nexport const structure = {\n    name: String\n};\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nexport function parse() {\n    const start = this.tokenStart;\n\n    if (this.isDelim(VERTICALLINE)) {\n        this.next();\n        eatIdentifierOrAsterisk.call(this);\n    } else {\n        eatIdentifierOrAsterisk.call(this);\n\n        if (this.isDelim(VERTICALLINE)) {\n            this.next();\n            eatIdentifierOrAsterisk.call(this);\n        }\n    }\n\n    return {\n        type: 'TypeSelector',\n        loc: this.getLocation(start, this.tokenStart),\n        name: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.name);\n}\n","import {\n    isHexDigit,\n    Ident,\n    Number,\n    Dimension\n} from '../../tokenizer/index.js';\n\nconst PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nconst QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n\nfunction eatHexSequence(offset, allowDash) {\n    let len = 0;\n\n    for (let pos = this.tokenStart + offset; pos < this.tokenEnd; pos++) {\n        const code = this.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            eatHexSequence.call(this, offset + len + 1, false);\n            return -1;\n        }\n\n        if (!isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'Hyphen minus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        };\n    }\n\n    this.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    let count = 0;\n\n    while (this.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.charCodeAt(this.tokenStart) !== code) {\n        this.error((code === PLUSSIGN ? 'Plus sign' : 'Hyphen minus') + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    let hexLength = 0;\n\n    switch (this.tokenType) {\n        case Number:\n            // u <number-token> '?'*\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (this.isDelim(QUESTIONMARK)) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n                break;\n            }\n\n            if (this.tokenType === Dimension ||\n                this.tokenType === Number) {\n                startsWith.call(this, HYPHENMINUS);\n                eatHexSequence.call(this, 1, false);\n                break;\n            }\n\n            break;\n\n        case Dimension:\n            // u <dimension-token> '?'*\n            hexLength = eatHexSequence.call(this, 1, true);\n\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n\n            break;\n\n        default:\n            // u '+' <ident-token> '?'*\n            // u '+' '?'+\n            this.eatDelim(PLUSSIGN);\n\n            if (this.tokenType === Ident) {\n                hexLength = eatHexSequence.call(this, 0, true);\n                if (hexLength > 0) {\n                    eatQuestionMarkSequence.call(this, 6 - hexLength);\n                }\n                break;\n            }\n\n            if (this.isDelim(QUESTIONMARK)) {\n                this.next();\n                eatQuestionMarkSequence.call(this, 5);\n                break;\n            }\n\n            this.error('Hex digit or question mark is expected');\n    }\n}\n\nexport const name = 'UnicodeRange';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n\n    // U or u\n    this.eatIdent('u');\n    scanUnicodeRange.call(this);\n\n    return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.tokenStart),\n        value: this.substrToCursor(start)\n    };\n}\n\nexport function generate(node) {\n    this.tokenize(node.value);\n}\n","import {\n    isHexDigit,\n    isWhiteSpace,\n    isValidEscape,\n    consumeEscaped,\n    decodeEscaped\n} from '../tokenizer/index.js';\n\nconst SPACE = 0x0020;            // U+0020 SPACE\nconst REVERSE_SOLIDUS = 0x005c;  // U+005C REVERSE SOLIDUS (\\)\nconst QUOTATION_MARK = 0x0022;   // \"\nconst APOSTROPHE = 0x0027;       // '\nconst LEFTPARENTHESIS = 0x0028;  // U+0028 LEFT PARENTHESIS (()\nconst RIGHTPARENTHESIS = 0x0029; // U+0029 RIGHT PARENTHESIS ())\n\nexport function decode(str) {\n    const len = str.length;\n    let start = 4; // length of \"url(\"\n    let end = str.charCodeAt(len - 1) === RIGHTPARENTHESIS ? len - 2 : len - 1;\n    let decoded = '';\n\n    while (start < end && isWhiteSpace(str.charCodeAt(start))) {\n        start++;\n    }\n\n    while (start < end && isWhiteSpace(str.charCodeAt(end))) {\n        end--;\n    }\n\n    for (let i = start; i <= end; i++) {\n        let code = str.charCodeAt(i);\n\n        if (code === REVERSE_SOLIDUS) {\n            // special case at the ending\n            if (i === end) {\n                // if the next input code point is EOF, do nothing\n                // otherwise include last left parenthesis as escaped\n                if (i !== len - 1) {\n                    decoded = str.substr(i + 1);\n                }\n                break;\n            }\n\n            code = str.charCodeAt(++i);\n\n            // consume escaped\n            if (isValidEscape(REVERSE_SOLIDUS, code)) {\n                const escapeStart = i - 1;\n                const escapeEnd = consumeEscaped(str, escapeStart);\n\n                i = escapeEnd - 1;\n                decoded += decodeEscaped(str.substring(escapeStart + 1, escapeEnd));\n            } else {\n                // \\r\\n\n                if (code === 0x000d && str.charCodeAt(i + 1) === 0x000a) {\n                    i++;\n                }\n            }\n        } else {\n            decoded += str[i];\n        }\n    }\n\n    return decoded;\n}\n\nexport function encode(str) {\n    let encoded = '';\n    let wsBeforeHexIsNeeded = false;\n\n    for (let i = 0; i < str.length; i++) {\n        const code = str.charCodeAt(i);\n\n        // If the character is NULL (U+0000), then the REPLACEMENT CHARACTER (U+FFFD).\n        if (code === 0x0000) {\n            encoded += '\\uFFFD';\n            continue;\n        }\n\n        // If the character is in the range [\\1-\\1f] (U+0001 to U+001F) or is U+007F,\n        // the character escaped as code point.\n        // Note: Do not compare with 0x0001 since 0x0000 is precessed before\n        if (code <= 0x001f || code === 0x007F) {\n            encoded += '\\\\' + code.toString(16);\n            wsBeforeHexIsNeeded = true;\n            continue;\n        }\n\n        if (code === SPACE ||\n            code === REVERSE_SOLIDUS ||\n            code === QUOTATION_MARK ||\n            code === APOSTROPHE ||\n            code === LEFTPARENTHESIS ||\n            code === RIGHTPARENTHESIS) {\n            encoded += '\\\\' + str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        } else {\n            if (wsBeforeHexIsNeeded && isHexDigit(code)) {\n                encoded += ' ';\n            }\n\n            encoded += str.charAt(i);\n            wsBeforeHexIsNeeded = false;\n        }\n    }\n\n    return 'url(' + encoded + ')';\n}\n","import * as url from '../../utils/url.js';\nimport * as string from '../../utils/string.js';\nimport {\n    Function as FunctionToken,\n    String as StringToken,\n    Url,\n    RightParenthesis\n} from '../../tokenizer/index.js';\n\nexport const name = 'Url';\nexport const structure = {\n    value: String\n};\n\n// <url-token> | <function-token> <string> )\nexport function parse() {\n    const start = this.tokenStart;\n    let value;\n\n    switch (this.tokenType) {\n        case Url:\n            value = url.decode(this.consume(Url));\n            break;\n\n        case FunctionToken:\n            if (!this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')) {\n                this.error('Function name must be `url`');\n            }\n\n            this.eat(FunctionToken);\n            this.skipSC();\n            value = string.decode(this.consume(StringToken));\n            this.skipSC();\n            if (!this.eof) {\n                this.eat(RightParenthesis);\n            }\n            break;\n\n        default:\n            this.error('Url or Function is expected');\n    }\n\n    return {\n        type: 'Url',\n        loc: this.getLocation(start, this.tokenStart),\n        value\n    };\n}\n\nexport function generate(node) {\n    this.token(Url, url.encode(node.value));\n}\n","export const name = 'Value';\nexport const structure = {\n    children: [[]]\n};\n\nexport function parse() {\n    const start = this.tokenStart;\n    const children = this.readSequence(this.scope.Value);\n\n    return {\n        type: 'Value',\n        loc: this.getLocation(start, this.tokenStart),\n        children\n    };\n}\n\nexport function generate(node) {\n    this.children(node);\n}\n","import { WhiteSpace } from '../../tokenizer/index.js';\n\nconst SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nexport const name = 'WhiteSpace';\nexport const structure = {\n    value: String\n};\n\nexport function parse() {\n    this.eat(WhiteSpace);\n    return SPACE;\n\n    // return {\n    //     type: 'WhiteSpace',\n    //     loc: this.getLocation(this.tokenStart, this.tokenEnd),\n    //     value: this.consume(WHITESPACE)\n    // };\n}\n\nexport function generate(node) {\n    this.token(WhiteSpace, node.value);\n}\n","import definitions from '../../data.js';\nimport * as node from '../node/index.js';\n\nexport default {\n    generic: true,\n    ...definitions,\n    node\n};\n","import {\n    Ident,\n    String as StringToken,\n    Number as NumberToken,\n    Function as FunctionToken,\n    Url,\n    Hash,\n    Dimension,\n    Percentage,\n    LeftParenthesis,\n    LeftSquareBracket,\n    Comma,\n    Delim\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nconst ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nconst HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nconst SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nconst U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nexport default function defaultRecognizer(context) {\n    switch (this.tokenType) {\n        case Hash:\n            return this.Hash();\n\n        case Comma:\n            return this.Operator();\n\n        case LeftParenthesis:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LeftSquareBracket:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case StringToken:\n            return this.String();\n\n        case Dimension:\n            return this.Dimension();\n\n        case Percentage:\n            return this.Percentage();\n\n        case NumberToken:\n            return this.Number();\n\n        case FunctionToken:\n            return this.cmpStr(this.tokenStart, this.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case Url:\n            return this.Url();\n\n        case Ident:\n            // check for unicode range, it should start with u+ or U+\n            if (this.cmpChar(this.tokenStart, U) &&\n                this.cmpChar(this.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.tokenStart + 1);\n            }\n\n            break;\n        }\n    }\n};\n","import getNode from './default.js';\n\nexport default {\n    getNode\n};\n","import {\n    Delim,\n    Ident,\n    Dimension,\n    Percentage,\n    Number as NumberToken,\n    Hash,\n    Colon,\n    LeftSquareBracket\n} from '../../tokenizer/index.js';\n\nconst NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nconst AMPERSAND = 0x0026;       // U+0026 AMPERSAND (&)\nconst ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nconst PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nconst SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nconst FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nconst GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nconst VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nconst TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction onWhiteSpace(next, children) {\n    if (children.last !== null && children.last.type !== 'Combinator' &&\n        next !== null && next.type !== 'Combinator') {\n        children.push({  // FIXME: this.Combinator() should be used instead\n            type: 'Combinator',\n            loc: null,\n            name: ' '\n        });\n    }\n}\n\nfunction getNode() {\n    switch (this.tokenType) {\n        case LeftSquareBracket:\n            return this.AttributeSelector();\n\n        case Hash:\n            return this.IdSelector();\n\n        case Colon:\n            if (this.lookupType(1) === Colon) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case Ident:\n            return this.TypeSelector();\n\n        case NumberToken:\n        case Percentage:\n            return this.Percentage();\n\n        case Dimension:\n            // throws when .123ident\n            if (this.charCodeAt(this.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.tokenStart + 1);\n            }\n            break;\n\n        case Delim: {\n            const code = this.charCodeAt(this.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n\n                case AMPERSAND:\n                    return this.NestingSelector();\n            }\n\n            break;\n        }\n    }\n};\n\nexport default {\n    onWhiteSpace,\n    getNode\n};\n","// legacy IE function\n// expression( <any-value> )\nexport default function() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n","import { Comma, WhiteSpace } from '../../tokenizer/index.js';\n\n// var( <ident> , <value>? )\nexport default function() {\n    const children = this.createList();\n\n    this.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.skipSC();\n\n    if (this.tokenType === Comma) {\n        children.push(this.Operator());\n\n        const startIndex = this.tokenIndex;\n        const value = this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.tokenIndex, this.consumeUntilExclamationMarkOrSemicolon, false);\n\n        if (value.type === 'Value' && value.children.isEmpty) {\n            for (let offset = startIndex - this.tokenIndex; offset <= 0; offset++) {\n                if (this.lookupType(offset) === WhiteSpace) {\n                    value.children.appendData({\n                        type: 'WhiteSpace',\n                        loc: null,\n                        value: ' '\n                    });\n                    break;\n                }\n            }\n        }\n\n        children.push(value);\n    }\n\n    return children;\n};\n","import getNode from './default.js';\nimport expressionFn from '../function/expression.js';\nimport varFn from '../function/var.js';\n\nfunction isPlusMinusOperator(node) {\n    return (\n        node !== null &&\n        node.type === 'Operator' &&\n        (node.value[node.value.length - 1] === '-' || node.value[node.value.length - 1] === '+')\n    );\n}\n\nexport default {\n    getNode,\n    onWhiteSpace(next, children) {\n        if (isPlusMinusOperator(next)) {\n            next.value = ' ' + next.value;\n        }\n        if (isPlusMinusOperator(children.last)) {\n            children.last.value += ' ';\n        }\n    },\n    'expression': expressionFn,\n    'var': varFn\n};\n","export default {\n    parse: {\n        prelude: null,\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n","import {\n    String as StringToken,\n    Ident,\n    Url,\n    Function as FunctionToken,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nexport default {\n    parse: {\n        prelude() {\n            const children = this.createList();\n\n            this.skipSC();\n\n            switch (this.tokenType) {\n                case StringToken:\n                    children.push(this.String());\n                    break;\n\n                case Url:\n                case FunctionToken:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            if (this.lookupNonWSType(0) === Ident ||\n                this.lookupNonWSType(0) === LeftParenthesis) {\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n","export default {\n    parse: {\n        prelude() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block() {\n            return this.Block(true);\n        }\n    }\n};\n","import {\n    WhiteSpace,\n    Comment,\n    Ident,\n    Function,\n    Colon,\n    LeftParenthesis\n} from '../../tokenizer/index.js';\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.skipSC();\n\n    if (this.tokenType === Ident &&\n        this.lookupNonWSType(1) === Colon) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    const children = this.createList();\n    let child;\n\n    this.skipSC();\n\n    scan:\n    while (!this.eof) {\n        switch (this.tokenType) {\n            case Comment:\n            case WhiteSpace:\n                this.next();\n                continue;\n\n            case Function:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case Ident:\n                child = this.Identifier();\n                break;\n\n            case LeftParenthesis:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nexport default {\n    parse: {\n        prelude() {\n            const children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block(isStyleBlock = false) {\n            return this.Block(isStyleBlock);\n        }\n    }\n};\n","import fontFace from './font-face.js';\nimport importAtrule from './import.js';\nimport media from './media.js';\nimport nest from './nest.js';\nimport page from './page.js';\nimport supports from './supports.js';\n\nexport default {\n    'font-face': fontFace,\n    'import': importAtrule,\n    media,\n    nest,\n    page,\n    supports\n};\n","const selectorList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n\nconst selector = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n\nconst identList = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n\nconst nth = {\n    parse() {\n        return this.createSingleNodeList(\n            this.Nth()\n        );\n    }\n};\n\nexport default {\n    'dir': identList,\n    'has': selectorList,\n    'lang': identList,\n    'matches': selectorList,\n    'is': selectorList,\n    '-moz-any': selectorList,\n    '-webkit-any': selectorList,\n    'where': selectorList,\n    'not': selectorList,\n    'nth-child': nth,\n    'nth-last-child': nth,\n    'nth-last-of-type': nth,\n    'nth-of-type': nth,\n    'slotted': selector,\n    'host': selector,\n    'host-context': selector\n};\n","import * as scope from '../scope/index.js';\nimport atrule from '../atrule/index.js';\nimport pseudo from '../pseudo/index.js';\nimport * as node from '../node/index-parse.js';\n\nexport default {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    scope,\n    atrule,\n    pseudo,\n    node\n};\n","import * as node from '../node/index.js';\n\nexport default {\n    node\n};\n","import createSyntax from './create.js';\nimport lexerConfig from './config/lexer.js';\nimport parserConfig from './config/parser.js';\nimport walkerConfig from './config/walker.js';\n\nexport default createSyntax({\n    ...lexerConfig,\n    ...parserConfig,\n    ...walkerConfig\n});\n","import syntax from './syntax/index.js';\n\nexport * from './version.js';\nexport { default as createSyntax } from './syntax/create.js';\nexport { List } from './utils/List.js';\nexport { Lexer } from './lexer/Lexer.js';\nexport { tokenTypes, tokenNames, TokenStream } from './tokenizer/index.js';\nexport * as definitionSyntax from './definition-syntax/index.js';\nexport { clone } from './utils/clone.js';\nexport * from './utils/names.js';\nexport * as ident from './utils/ident.js';\nexport * as string from './utils/string.js';\nexport * as url from './utils/url.js';\nexport const {\n    tokenize,\n    parse,\n    generate,\n    lexer,\n    createLexer,\n\n    walk,\n    find,\n    findLast,\n    findAll,\n\n    toPlainObject,\n    fromPlainObject,\n\n    fork\n} = syntax;\n","/**\n * Copyright (c) 2023 - present TinyEngine Authors.\n * Copyright (c) 2023 - present Huawei Cloud Computing Technologies Co., Ltd.\n *\n * Use of this source code is governed by an MIT-style license.\n *\n * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,\n * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR\n * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.\n *\n */\n\nimport * as cssTree from 'css-tree'\nimport { utils } from '@opentiny/tiny-engine-utils'\n\nconst { hyphenate } = utils\n\n/**\n * 传入 css 字符串，得到以选择器为 Key，css 规则为 value 的 object\n * 传入示例：.test { background-color: deepskyblue; } .test.link { background-color: deeppink; } .test-text { color: #fff; }\n * 返回示例 { \".test\": \"background-color:deepskyblue\"; \".test-text\": \"color:#fff\"; \".test.link\": \"background-color:deeppink\" }\n * @param {string} styleStr css 字符串\n * @returns object { [string]: string }\n */\nexport const getCssObjectFromStyleStr = (styleStr) => {\n  const ast = cssTree.parse(styleStr)\n  const cssObject = {}\n\n  ast.children\n    .filter(({ type }) => type === 'Rule')\n    .forEach((item) => {\n      const matchCode = cssTree.generate(item).match(/^(.+){(.+)}$/)\n\n      if (!matchCode) {\n        return\n      }\n\n      const [_, selector, code] = matchCode\n\n      cssObject[selector] = code\n    })\n\n  return cssObject\n}\n\nexport const styleStrAddRoot = (str = '') => {\n  return `:root { ${str}\\n}`\n}\n\nexport const obj2StyleStr = (obj = {}, addRoot = true) => {\n  const list = Object.entries(obj).map(([key, value]) => (value ? `${hyphenate(key)}: ${value};` : ''))\n\n  return addRoot ? styleStrAddRoot(list.join('\\n  ')) : ` { \\n ${list.join('\\n  ')} \\n}`\n}\n"],"names":["EOF","Ident","Function","AtKeyword","Hash","String","BadString","Url","BadUrl","Delim","Number","Percentage","Dimension","WhiteSpace","CDO","CDC","Colon","Semicolon","Comma","LeftSquareBracket","RightSquareBracket","LeftParenthesis","RightParenthesis","LeftCurlyBracket","RightCurlyBracket","Comment","isDigit","code","isHexDigit","isUppercaseLetter","isLowercaseLetter","isLetter","isNonAscii","isNameStart","isName","isNonPrintable","isNewline","isWhiteSpace","isValidEscape","first","second","isIdentifierStart","third","isNumberStart","isBOM","CATEGORY","EofCategory","WhiteSpaceCategory","DigitCategory","NameStartCategory","NonPrintableCategory","i","charCodeCategory","getCharCode","source","offset","getNewlineLength","cmpChar","testStr","referenceCode","cmpStr","start","end","referenceStr","testCode","findWhiteSpaceStart","findWhiteSpaceEnd","findDecimalNumberEnd","consumeEscaped","maxOffset","consumeName","consumeNumber","sign","consumeBadUrlRemnants","decodeEscaped","escaped","tokenNames","MIN_SIZE","adoptBuffer","buffer","size","N","F","R","computeLinesAndColumns","host","sourceLength","startOffset","lines","columns","line","column","OffsetToLocation","startLine","startColumn","filename","OFFSET_MASK","TYPE_SHIFT","balancePair","FunctionToken","TokenStream","tokenize","offsetAndType","balance","tokenCount","balanceCloseType","balanceStart","firstCharOffset","type","balancePrev","tokenIndex","pos","next","startToken","stopConsume","cursor","balanceEnd","loop","fn","item","tokens","index","onToken","consumeNumericToken","TYPE.Dimension","TYPE.Percentage","TYPE.Number","consumeIdentLikeToken","nameStartOffset","TYPE.Function","consumeUrlToken","TYPE.Ident","consumeStringToken","endingCodePoint","TYPE.String","TYPE.BadString","nextCode","TYPE.Url","TYPE.BadUrl","TYPE.WhiteSpace","TYPE.Hash","TYPE.Delim","TYPE.LeftParenthesis","TYPE.RightParenthesis","TYPE.Comma","TYPE.CDC","TYPE.Comment","TYPE.Colon","TYPE.Semicolon","TYPE.CDO","TYPE.AtKeyword","TYPE.LeftSquareBracket","TYPE.RightSquareBracket","TYPE.LeftCurlyBracket","TYPE.RightCurlyBracket","releasedCursors","List","data","prev","prevOld","prevNew","nextOld","nextNew","array","thisArg","initialValue","acc","result","before","list","oldItem","newItemOrList","createCustomError","name","message","error","errorStack","MAX_LINE_LENGTH","OFFSET_CORRECTION","TAB_REPLACEMENT","sourceFragment","extraLines","processLines","idx","maxNumLength","endLine","cutLeft","SyntaxError","readSequence","recognizer","children","space","context","child","NOOP","EXCLAMATIONMARK","NUMBERSIGN","SEMICOLON","LEFTCURLYBRACKET","NULL","createParseContext","fetchParseValues","dict","processConfig","config","parseConfig","createParser","needPositions","onParseError","onParseErrorThrow","locationMap","parser","node","consumer","fallback","e","fallbackNode","offsetStart","offsetEnd","charCode","str","tokenType","number","tokenName","m","NumberToken","head","tail","location","source_","options","onComment","loc","value","ast","intToCharMap","base64","bigA","bigZ","littleA","littleZ","zero","nine","plus","slash","littleOffset","numberOffset","require$$0","VLQ_BASE_SHIFT","VLQ_BASE","VLQ_BASE_MASK","VLQ_CONTINUATION_BIT","toVLQSigned","aValue","fromVLQSigned","isNegative","shifted","base64Vlq","encoded","digit","vlq","aStr","aIndex","aOutParam","strLen","shift","continuation","getArg","aArgs","aName","aDefaultValue","exports","urlRegexp","dataUrlRegexp","urlParse","aUrl","match","urlGenerate","aParsedUrl","url","MAX_CACHED_INPUTS","lruMemoize","f","cache","input","temp","normalize","aPath","path","isAbsolute","parts","part","up","join","aRoot","aPathUrl","aRootUrl","joined","relative","level","supportsNullProto","obj","identity","s","toSetString","isProtoString","fromSetString","length","compareByOriginalPositions","mappingA","mappingB","onlyCompareOriginal","cmp","strcmp","compareByOriginalPositionsNoSource","compareByGeneratedPositionsDeflated","onlyCompareGenerated","compareByGeneratedPositionsDeflatedNoLine","aStr1","aStr2","compareByGeneratedPositionsInflated","parseSourceMapInput","computeSourceURL","sourceRoot","sourceURL","sourceMapURL","parsed","util","has","hasNativeMap","ArraySet","aArray","aAllowDuplicates","set","len","sStr","isDuplicate","aIdx","arraySet","generatedPositionAfter","lineA","lineB","columnA","columnB","MappingList","aCallback","aThisArg","aMapping","mappingList","base64VLQ","require$$1","require$$2","require$$3","SourceMapGenerator","aSourceMapConsumer","generatorOps","generator","mapping","newMapping","sourceFile","sourceRelative","content","generated","original","aSourceFile","aSourceContent","aSourceMapPath","newSources","newNames","aGenerated","aOriginal","aSource","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","nameIdx","sourceIdx","mappings","aSources","aSourceRoot","key","map","SourceMapGenerator_1","trackNodes","generateSourceMap","handlers","activatedGenerated","activatedMapping","sourceMappingActive","origHandlersNode","nodeLine","nodeColumn","origHandlersEmit","auto","origHandlersResult","PLUSSIGN","HYPHENMINUS","specPairs","safePairs","StringToken","createMap","pairs","isWhiteSpaceRequired","prevCode","nextCharCode","spec","safe","REVERSESOLIDUS","processChildren","delimeter","processChunk","chunk","createGenerator","types","publicApi","tokenBefore.safe","tokenBefore","createConvertor","walk","hasOwnProperty","noop","ensureFunction","invokeForType","getWalkersFromStructure","nodeType","structure","walkers","fieldTypes","walker","fieldType","getTypesFromConfig","createTypeIterator","reverse","fields","contextName","useContext","walkReducer","prevContextValue","field","ref","createFastTraveralMap","StyleSheet","Atrule","Rule","Block","DeclarationList","createWalker","iteratorsNatural","iteratorsReverse","breakWalk","skipNode","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","walkNode","enterRet","enter","iterators","leave","ret","found","generateMultiplier","multiplier","min","max","comma","generateTypeOpts","generateSequence","decorate","forceBraces","compact","combinator","term","internalGenerate","generate","defaultLoc","locateMismatch","matchResult","longestMatch","mismatchNode","badNode","mismatchOffset","mismatchLength","entries","css","token","fromLoc","buildLoc","point","extra","SyntaxReferenceError","referenceName","SyntaxMatchError","syntax","keywords","properties","keyword","getKeywordDescriptor","property","getPropertyDescriptor","isCustomProperty","getVendorPrefix","secondDashIndex","descriptor","custom","vendor","hack","prefix","cssWideKeywords","DISALLOW_SIGN","ALLOW_SIGN","isDelim","skipSC","getNextToken","checkInteger","valueOffset","disallowSign","consumeB","offset_","anPlusB","QUESTIONMARK","U","startsWith","hexSequence","allowDash","hexlen","withQuestionMarkSequence","consumed","urange","consumedHexLength","calcFunctionNames","charCodeAt","eqStr","actual","expected","eqStrAny","isPostfixIeHack","outOfRange","opts","numEnd","num","consumeFunction","balanceStash","scan","calc","expectedTokenType","customIdent","customPropertyName","hexColor","idSelector","declarationValue","anyValue","dimension","numberEnd","reverseSolidusOffset","unit","percentage","integer","tokenTypes","productionTypes","createDemensionTypes","units","angle","decibel","frequency","flex","resolution","semitones","time","createGenericTypes","TAB","SPACE","Tokenizer","AMPERSAND","APOSTROPHE","LEFTPARENTHESIS","RIGHTPARENTHESIS","ASTERISK","COMMA","HYPERMINUS","LESSTHANSIGN","GREATERTHANSIGN","COMMERCIALAT","LEFTSQUAREBRACKET","RIGHTSQUAREBRACKET","VERTICALLINE","RIGHTCURLYBRACKET","INFINITY","NAME_CHAR","_","COMBINATOR_PRECEDENCE","scanSpaces","tokenizer","scanWord","scanNumber","scanString","readMultiplierRange","readMultiplier","range","maybeMultiplied","maybeToken","ch","readProperty","readTypeRange","readType","readKeywordOrFunction","regroupTerms","terms","combinators","createGroup","a","b","subgroupStart","readImplicitGroup","prevToken","prevTokenPos","peek","readGroup","parse","astToTokens","curNode","tmp","stringToTokens","prepareTokens","MATCH","MISMATCH","DISALLOW_EMPTY","createCondition","thenBranch","elseBranch","isFunctionType","isEnumCapatible","buildGroupMatchGraph","atLeastOneTermMatched","thenClause","newGroupTerm","buildMultiplierMatchGraph","matchTerm","buildMatchGraphInternal","buildMatchGraph","syntaxTree","STUB","TOKEN","OPEN_SYNTAX","CLOSE_SYNTAX","EXIT_REASON_MATCH","EXIT_REASON_MISMATCH","EXIT_REASON_ITERATION_LIMIT","ITERATION_LIMIT","reverseList","areStringsEqualCaseInsensitive","isContextEdgeDelim","isCommaContextStart","isCommaContextEnd","internalMatch","state","syntaxes","moveToNextToken","nextIndex","stateSnapshotFromSyntax","nextState","matchStack","syntaxStack","thenStack","pushThenStack","pushElseStack","elseStack","addTokenToMatch","syntaxStash","openSyntax","closeSyntax","iterationCount","exitReason","matchFlag","lastTokenIndex","syntaxDict","dictSyntax","keywordName","string","matchAsTree","matchGraph","hostStack","getTrace","shouldPutToTrace","hasMatch","matchNode","isType","testNode","isProperty","isKeyword","trace","getFirstMatchNode","getLastMatchNode","matchFragments","lexer","findFragments","nodes","fragments","isValidNumber","isValidLocation","createNodeStructureChecker","warn","valid","processStructure","docs","docsTypes","getStructureFromConfig","cssWideKeywordsSyntax","dumpMapSyntax","syntaxAsAst","dumpAtruleMapSyntax","atrule","valueHasVar","buildMatchResult","matched","iterations","matchSyntax","useCssWideKeywords","Lexer","group","collectWarning","warns","parent","descName","atruleName","prelude","descriptorName","names.keyword","propertyName","names.property","typeName","typeSyntax","declaration","fallbackBasename","validate","broken","brokenMap","brokenTypes","brokenProperties","pretty","appendOrSet","sliceProps","props","prop","mix","dest","src","patch","exists","current","descriptorValue","createSyntax","fromPlainObject","toPlainObject","extension","base","createSyntax$1","definitions","checkTokenIsInteger","expectCharCode","msg","consumeRaw","isDeclarationBlockAtrule","walkContext","isDeclaration","nameLowerCase","block","DOLLARSIGN","EQUALSSIGN","CIRCUMFLEXACCENT","TILDE","getAttributeName","expectIdent","getOperator","matcher","flags","consumeRule","consumeRawDeclaration","consumeDeclaration","isStyleBlock","FULLSTOP","SOLIDUS","consumeValueRaw","consumeCustomPropertyRaw","consumeValue","startValueToken","customProperty","parseValue","important","valueStart","getImportant","xxx","selector","nth","left","right","getOffsetExcludeWS","consumeUntil","excludeWhiteSpace","endOffset","consumePrelude","REVERSE_SOLIDUS","QUOTATION_MARK","decode","firstChar","decoded","escapeStart","escapeEnd","encode","apostrophe","quote","quoteCode","wsBeforeHexIsNeeded","eatIdentifierOrAsterisk","eatHexSequence","eatQuestionMarkSequence","count","scanUnicodeRange","hexLength","url.decode","string.decode","url.encode","lexerConfig","defaultRecognizer","atrulePrelude","getNode","onWhiteSpace","selector$1","expressionFn","varFn","startIndex","isPlusMinusOperator","fontFace","importAtrule","media","nest","page","parentheses","supports","selectorList","identList","pseudo","parserConfig","scope","walkerConfig","createLexer","find","findLast","findAll","fork","hyphenate","utils","getCssObjectFromStyleStr","styleStr","cssTree.parse","cssObject","matchCode","cssTree.generate","styleStrAddRoot","obj2StyleStr","addRoot"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107]}