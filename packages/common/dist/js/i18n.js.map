{"version":3,"file":"i18n.js","sources":["../../js/i18n.js"],"sourcesContent":["/**\n * Copyright (c) 2023 - present TinyEngine Authors.\n * Copyright (c) 2023 - present Huawei Cloud Computing Technologies Co., Ltd.\n *\n * Use of this source code is governed by an MIT-style license.\n *\n * THE OPEN SOURCE SOFTWARE IN THIS PRODUCT IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL,\n * BUT WITHOUT ANY WARRANTY, WITHOUT EVEN THE IMPLIED WARRANTY OF MERCHANTABILITY OR FITNESS FOR\n * A PARTICULAR PURPOSE. SEE THE APPLICABLE LICENSES FOR MORE DETAILS.\n *\n */\n\nimport { createI18n, I18nInjectionKey } from 'vue-i18n'\nimport i18n, { defineCustomI18n } from '@opentiny/tiny-engine-i18n-host'\nimport tinyLocale from '@opentiny/vue-locale'\nimport { i18nKeyMaps } from './constants'\n\n// 此处处理TinyVue组件库的国际化zhCN --> zh_CN\nconst customCreateI18n = ({ locale, messages }) => {\n  const newMessages = {}\n  Object.keys(messages).forEach((key) => {\n    const lang = i18nKeyMaps[key]\n    newMessages[lang] = messages[key]\n  })\n\n  return createI18n({\n    locale,\n    messages: newMessages,\n    legacy: false\n  })\n}\n\nconst customI18n = tinyLocale.initI18n({\n  i18n: { locale: i18nKeyMaps.zhCN },\n  createI18n: customCreateI18n,\n  messages: {}\n})\n\n// 合并组件库的i18n配置\ndefineCustomI18n(customI18n)\n\nexport { I18nInjectionKey, i18nKeyMaps }\n\n// i18n对象可以多处使用。模板中直接使用$t，setup环境或普通环境中可以引入后使用i18n.global.t\nexport default i18n\n"],"names":["customCreateI18n","locale","messages","newMessages","key","lang","i18nKeyMaps","createI18n","customI18n","tinyLocale","defineCustomI18n"],"mappings":";;;;;;AAkBA,MAAMA,IAAmB,CAAC,EAAE,QAAAC,GAAQ,UAAAC,QAAe;AACjD,QAAMC,IAAc,CAAA;AACpB,gBAAO,KAAKD,CAAQ,EAAE,QAAQ,CAACE,MAAQ;AACrC,UAAMC,IAAOC,EAAYF,CAAG;AAC5B,IAAAD,EAAYE,CAAI,IAAIH,EAASE,CAAG;AAAA,EAClC,CAAC,GAEMG,EAAW;AAAA,IAChB,QAAAN;AAAA,IACA,UAAUE;AAAA,IACV,QAAQ;AAAA,EACZ,CAAG;AACH,GAEMK,IAAaC,EAAW,SAAS;AAAA,EACrC,MAAM,EAAE,QAAQH,EAAY,KAAI;AAAA,EAChC,YAAYN;AAAA,EACZ,UAAU,CAAA;AACZ,CAAC;AAGDU,EAAiBF,CAAU;"}